import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as e,o as s,e as l}from"./app-BT4uJ8Vu.js";const a={},n=l(`<h1 id="_2i-虚空的属性" tabindex="-1"><a class="header-anchor" href="#_2i-虚空的属性"><span>2I.虚空的属性</span></a></h1><p>有关数据库，数据操作，Db层面I18n的基本属性。</p><h2 id="_2i-1-spring-hikari-79-properties" tabindex="-1"><a class="header-anchor" href="#_2i-1-spring-hikari-79-properties"><span>2I.1.spring-hikari-79.properties</span></a></h2><p>为spring.datasource.hikari提供以下配置</p><ul><li><code>spring.datasource.hikari.pool-name</code>=<code>wings-hikari-cp</code></li><li><code>spring.datasource.hikari.maximum-pool-size</code>=<code>20</code></li><li><code>spring.datasource.hikari.auto-commit</code>=<code>true</code></li><li><code>spring.datasource.hikari.connection-timeout</code>=<code>30000</code></li><li><code>spring.datasource.hikari.idle-timeout</code>=<code>600000</code></li><li><code>spring.datasource.hikari.max-lifetime</code>=<code>1800000</code></li><li><code>spring.datasource.hikari.leak-detection-threshold</code>=<code>15000</code></li></ul><h2 id="_2i-2-wings-flywave-fit-79-properties" tabindex="-1"><a class="header-anchor" href="#_2i-2-wings-flywave-fit-79-properties"><span>2I.2.wings-flywave-fit-79.properties</span></a></h2><p>通过flywave对faceless-id-log依赖的做数据库版本检查。</p><h3 id="wings-faceless-flywave-fit-faceless-id-log-path" tabindex="-1"><a class="header-anchor" href="#wings-faceless-flywave-fit-faceless-id-log-path"><span>wings.faceless.flywave.fit.faceless-id-log.path</span></a></h3><p><code>Set&lt;String&gt;</code>=<code>classpath*:/wings-flywave/master/01-light/*.sql</code></p><p>sql扫描pattern，逗号分隔。PathMatchingResourcePatternResolver格式</p><h3 id="wings-faceless-flywave-fit-faceless-id-log-revi" tabindex="-1"><a class="header-anchor" href="#wings-faceless-flywave-fit-faceless-id-log-revi"><span>wings.faceless.flywave.fit.faceless-id-log.revi</span></a></h3><p><code>Set&lt;String&gt;</code>=<code>2019_0520_01L</code>。revision，逗号分隔。</p><h3 id="wings-faceless-flywave-fit-faceless-id-log-lost" tabindex="-1"><a class="header-anchor" href="#wings-faceless-flywave-fit-faceless-id-log-lost"><span>wings.faceless.flywave.fit.faceless-id-log.lost</span></a></h3><p><code>String</code>=<code>WARN</code>。<code>SKIP</code>-跳过|<code>WARN</code>-警告|<code>FAIL</code>-异常|<code>EXEC</code>-强制执行</p><p>补漏行为，任一指定revi未应用时，只升级不能降级，避免危险的删除动作</p><h2 id="_2i-3-wings-journal-79-properties" tabindex="-1"><a class="header-anchor" href="#_2i-3-wings-journal-79-properties"><span>2I.3.wings-journal-79.properties</span></a></h2><h2 id="wings-faceless-journal-propagation" tabindex="-1"><a class="header-anchor" href="#wings-faceless-journal-propagation"><span>wings.faceless.journal.propagation</span></a></h2><p><code>Propagation</code>=<code>REQUIRES_NEW</code>，生成Journal的默认事务</p><h2 id="wings-faceless-journal-alive" tabindex="-1"><a class="header-anchor" href="#wings-faceless-journal-alive"><span>wings.faceless.journal.alive</span></a></h2><p><code>Integer</code>=<code>300</code>，Journal存活秒数，超过则生成新的</p><ul><li><code>&lt;0</code> - 使用旧值</li><li><code>0</code> - 每次都使用新值</li><li><code>&gt;0</code> - 仅超过此值时，使用新值</li></ul><h2 id="_2i-4-wings-lightid-79-properties" tabindex="-1"><a class="header-anchor" href="#_2i-4-wings-lightid-79-properties"><span>2I.4.wings-lightid-79.properties</span></a></h2><p>对分布式主键lightid的设置。默认事务级别，Propagation.REQUIRES_NEW</p><h3 id="wings-faceless-lightid-insert-auto" tabindex="-1"><a class="header-anchor" href="#wings-faceless-lightid-insert-auto"><span>wings.faceless.lightid.insert.auto</span></a></h3><p><code>Boolean</code>=<code>true</code>，当前name和block的id不存在时，插入还是异常。</p><h3 id="wings-faceless-lightid-insert-next" tabindex="-1"><a class="header-anchor" href="#wings-faceless-lightid-insert-next"><span>wings.faceless.lightid.insert.next</span></a></h3><p><code>Long</code>=1000,自动insert时的首值，建议1000起，之下为手动生成。</p><h3 id="wings-faceless-lightid-insert-step" tabindex="-1"><a class="header-anchor" href="#wings-faceless-lightid-insert-step"><span>wings.faceless.lightid.insert.step</span></a></h3><p><code>Long</code>=100，自动insert时的步长。</p><h3 id="wings-faceless-lightid-provider-timeout" tabindex="-1"><a class="header-anchor" href="#wings-faceless-lightid-provider-timeout"><span>wings.faceless.lightid.provider.timeout</span></a></h3><p><code>Long</code>=5000，加载时视为超时的毫秒数</p><h3 id="wings-faceless-lightid-provider-max-error" tabindex="-1"><a class="header-anchor" href="#wings-faceless-lightid-provider-max-error"><span>wings.faceless.lightid.provider.max-error</span></a></h3><p><code>Integer</code>=5，加载错误时最大尝试次数</p><h3 id="wings-faceless-lightid-provider-max-count" tabindex="-1"><a class="header-anchor" href="#wings-faceless-lightid-provider-max-count"><span>wings.faceless.lightid.provider.max-count</span></a></h3><p><code>Integer</code>=10000，加载成功加载的最大数量</p><h3 id="wings-faceless-lightid-provider-err-alive" tabindex="-1"><a class="header-anchor" href="#wings-faceless-lightid-provider-err-alive"><span>wings.faceless.lightid.provider.err-alive</span></a></h3><p><code>Long</code>=120000，错误存在毫秒数，期间不尝试。</p><h3 id="wings-faceless-lightid-provider-block-type" tabindex="-1"><a class="header-anchor" href="#wings-faceless-lightid-provider-block-type"><span>wings.faceless.lightid.provider.block-type</span></a></h3><p><code>String</code>=<code>sql</code>，blockId提供方法</p><ul><li><code>sql</code> - 查询数据库，唯一返回值为id</li><li><code>fix</code> - 固定数字，int</li><li><code>biz</code> - 使用自定义的业务Bean</li></ul><h3 id="wings-faceless-lightid-provider-block-para" tabindex="-1"><a class="header-anchor" href="#wings-faceless-lightid-provider-block-para"><span>wings.faceless.lightid.provider.block-para</span></a></h3><p><code>String</code>，提供方式的参数，sql时为select，fix为数字。</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">SELECT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> block_id</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">FROM</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> sys_light_sequence</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">WHERE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> seq_name </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;singleton_lightid_blockid&#39;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="wings-faceless-lightid-provider-sequence-insert" tabindex="-1"><a class="header-anchor" href="#wings-faceless-lightid-provider-sequence-insert"><span>wings.faceless.lightid.provider.sequence-insert</span></a></h3><p><code>String</code>，插入语句。JdbcTemplate的sql，</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">INSERT INTO</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> sys_light_sequence</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(seq_name, block_id, next_val, step_val, comments)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">VALUES</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (?,?,?,?,?)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>详见<code>LightSequenceModifyJdbc</code>，参数分别是，</p><ul><li><code>String</code> seq_name - 序列名</li><li><code>int</code> block_id - 数据块id</li><li><code>long</code> next_val - 下一个seq</li><li><code>int</code> step_val - 步长</li><li><code>String</code> comments - 说明</li></ul><h3 id="wings-faceless-lightid-provider-sequence-update" tabindex="-1"><a class="header-anchor" href="#wings-faceless-lightid-provider-sequence-update"><span>wings.faceless.lightid.provider.sequence-update</span></a></h3><p><code>String</code>，更新语句。JdbcTemplate的sql，</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">UPDATE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> sys_light_sequence</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">SET</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> next_val</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">?</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">WHERE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> block_id</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">? </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">AND</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> seq_name</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">? </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">AND</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> next_val</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">?</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>详见<code>LightSequenceModifyJdbc</code>，参数分别是，</p><ul><li><code>long</code> next_val_new - 新的seq值</li><li><code>int</code> block_id - 数据块id</li><li><code>String</code> seq_name - 序列名</li><li><code>long</code> next_val_old - 旧的seq值</li></ul><h3 id="wings-faceless-lightid-provider-sequence-get-one" tabindex="-1"><a class="header-anchor" href="#wings-faceless-lightid-provider-sequence-get-one"><span>wings.faceless.lightid.provider.sequence-get-one</span></a></h3><p><code>String</code>，单次获取。JdbcTemplate的sql，</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">SELECT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> next_val, step_val</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">FROM</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> sys_light_sequence</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">WHERE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> block_id</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">? </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">AND</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> seq_name</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">? </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">FOR</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> UPDATE</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>详见<code>LightSequenceSelectJdbc</code>，参数分别是，</p><ul><li><code>int</code> block_id - 数据块id</li><li><code>String</code> seq_name - 序列名</li></ul><h3 id="wings-faceless-lightid-provider-sequence-get-all" tabindex="-1"><a class="header-anchor" href="#wings-faceless-lightid-provider-sequence-get-all"><span>wings.faceless.lightid.provider.sequence-get-all</span></a></h3><p><code>String</code>，全部获取。JdbcTemplate的sql，</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">SELECT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> seq_name, next_val, step_val</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">FROM</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> sys_light_sequence</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">WHERE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> block_id</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">? </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">FOR</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> UPDATE</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>详见<code>LightSequenceSelectJdbc</code>，参数分别是，</p><ul><li><code>int</code> block_id - 数据块id</li></ul><h3 id="wings-faceless-lightid-provider-sequence-adjust" tabindex="-1"><a class="header-anchor" href="#wings-faceless-lightid-provider-sequence-adjust"><span>wings.faceless.lightid.provider.sequence-adjust</span></a></h3><p><code>String</code>，尝试校验并调整数据库中id，使其正确。设置为<code>empty</code>，表示忽略此功能。</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">SELECT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> table_name, column_name</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">FROM</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> INFORMATION_SCHEMA</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">COLUMNS</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">WHERE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> table_schema </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> DATABASE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">AND</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> UPPER</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(column_key) </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;PRI&#39;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">AND</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> UPPER</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(column_type) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">like</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;%INT%&#39;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">AND</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> table_name </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ?</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输入<code>表名</code>（作为序列名），返回数据库中的<code>表名</code>和<code>列名</code>。</p><h3 id="wings-faceless-lightid-provider-monotonic" tabindex="-1"><a class="header-anchor" href="#wings-faceless-lightid-provider-monotonic"><span>wings.faceless.lightid.provider.monotonic</span></a></h3><p><code>String</code>=<code>jvm</code>, lightid 的单调递增类型.</p><ul><li>jvm - 单jvm内单调递增</li><li>db - 数据库内单调递增</li><li>hz - hazelcast内单调递增</li></ul><h3 id="wings-faceless-lightid-layout-block-bits" tabindex="-1"><a class="header-anchor" href="#wings-faceless-lightid-layout-block-bits"><span>wings.faceless.lightid.layout.block-bits</span></a></h3><p><code>Integer=</code>，设置block字节数，范围[3,23]，配置项默认空。LightId默认为9，2^9=512个区</p><h3 id="wings-faceless-lightid-layout-block-first" tabindex="-1"><a class="header-anchor" href="#wings-faceless-lightid-layout-block-first"><span>wings.faceless.lightid.layout.block-first</span></a></h3><p><code>Boolean=</code>，序列布局，是否Block先于Sequence，配置项默认空。LightId默认为true</p>`,74),t=[n];function d(r,h){return s(),e("div",null,t)}const p=i(a,[["render",d],["__file","2i-prop-faceless.html.vue"]]),g=JSON.parse('{"path":"/zh/2-faceless/2i-prop-faceless.html","title":"2I.虚空的属性","lang":"zh-CN","frontmatter":{"isOriginal":true,"icon":"folder-tree","category":["虚空","属性"],"description":"2I.虚空的属性 有关数据库，数据操作，Db层面I18n的基本属性。 2I.1.spring-hikari-79.properties 为spring.datasource.hikari提供以下配置 spring.datasource.hikari.pool-name=wings-hikari-cp spring.datasource.hikari.m...","GIT_REPO_HEAD":"2025-01-28 900f8d7f901cad2172a025862418812b0d068d29","head":[["link",{"rel":"alternate","hreflang":"en-us","href":"https://wings.fessional.pro/2-faceless/2i-prop-faceless.html"}],["meta",{"property":"og:url","content":"https://wings.fessional.pro/zh/2-faceless/2i-prop-faceless.html"}],["meta",{"property":"og:site_name","content":"WingsBoot 纹丝不忒"}],["meta",{"property":"og:title","content":"2I.虚空的属性"}],["meta",{"property":"og:description","content":"2I.虚空的属性 有关数据库，数据操作，Db层面I18n的基本属性。 2I.1.spring-hikari-79.properties 为spring.datasource.hikari提供以下配置 spring.datasource.hikari.pool-name=wings-hikari-cp spring.datasource.hikari.m..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-07-03T10:09:07.000Z"}],["meta",{"property":"article:author","content":"trydofor"}],["meta",{"property":"article:modified_time","content":"2024-07-03T10:09:07.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"2I.虚空的属性\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-07-03T10:09:07.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"trydofor\\",\\"url\\":\\"https://www.trydofor.com\\"}]}"]]},"headers":[{"level":2,"title":"2I.1.spring-hikari-79.properties","slug":"_2i-1-spring-hikari-79-properties","link":"#_2i-1-spring-hikari-79-properties","children":[]},{"level":2,"title":"2I.2.wings-flywave-fit-79.properties","slug":"_2i-2-wings-flywave-fit-79-properties","link":"#_2i-2-wings-flywave-fit-79-properties","children":[{"level":3,"title":"wings.faceless.flywave.fit.faceless-id-log.path","slug":"wings-faceless-flywave-fit-faceless-id-log-path","link":"#wings-faceless-flywave-fit-faceless-id-log-path","children":[]},{"level":3,"title":"wings.faceless.flywave.fit.faceless-id-log.revi","slug":"wings-faceless-flywave-fit-faceless-id-log-revi","link":"#wings-faceless-flywave-fit-faceless-id-log-revi","children":[]},{"level":3,"title":"wings.faceless.flywave.fit.faceless-id-log.lost","slug":"wings-faceless-flywave-fit-faceless-id-log-lost","link":"#wings-faceless-flywave-fit-faceless-id-log-lost","children":[]}]},{"level":2,"title":"2I.3.wings-journal-79.properties","slug":"_2i-3-wings-journal-79-properties","link":"#_2i-3-wings-journal-79-properties","children":[]},{"level":2,"title":"wings.faceless.journal.propagation","slug":"wings-faceless-journal-propagation","link":"#wings-faceless-journal-propagation","children":[]},{"level":2,"title":"wings.faceless.journal.alive","slug":"wings-faceless-journal-alive","link":"#wings-faceless-journal-alive","children":[]},{"level":2,"title":"2I.4.wings-lightid-79.properties","slug":"_2i-4-wings-lightid-79-properties","link":"#_2i-4-wings-lightid-79-properties","children":[{"level":3,"title":"wings.faceless.lightid.insert.auto","slug":"wings-faceless-lightid-insert-auto","link":"#wings-faceless-lightid-insert-auto","children":[]},{"level":3,"title":"wings.faceless.lightid.insert.next","slug":"wings-faceless-lightid-insert-next","link":"#wings-faceless-lightid-insert-next","children":[]},{"level":3,"title":"wings.faceless.lightid.insert.step","slug":"wings-faceless-lightid-insert-step","link":"#wings-faceless-lightid-insert-step","children":[]},{"level":3,"title":"wings.faceless.lightid.provider.timeout","slug":"wings-faceless-lightid-provider-timeout","link":"#wings-faceless-lightid-provider-timeout","children":[]},{"level":3,"title":"wings.faceless.lightid.provider.max-error","slug":"wings-faceless-lightid-provider-max-error","link":"#wings-faceless-lightid-provider-max-error","children":[]},{"level":3,"title":"wings.faceless.lightid.provider.max-count","slug":"wings-faceless-lightid-provider-max-count","link":"#wings-faceless-lightid-provider-max-count","children":[]},{"level":3,"title":"wings.faceless.lightid.provider.err-alive","slug":"wings-faceless-lightid-provider-err-alive","link":"#wings-faceless-lightid-provider-err-alive","children":[]},{"level":3,"title":"wings.faceless.lightid.provider.block-type","slug":"wings-faceless-lightid-provider-block-type","link":"#wings-faceless-lightid-provider-block-type","children":[]},{"level":3,"title":"wings.faceless.lightid.provider.block-para","slug":"wings-faceless-lightid-provider-block-para","link":"#wings-faceless-lightid-provider-block-para","children":[]},{"level":3,"title":"wings.faceless.lightid.provider.sequence-insert","slug":"wings-faceless-lightid-provider-sequence-insert","link":"#wings-faceless-lightid-provider-sequence-insert","children":[]},{"level":3,"title":"wings.faceless.lightid.provider.sequence-update","slug":"wings-faceless-lightid-provider-sequence-update","link":"#wings-faceless-lightid-provider-sequence-update","children":[]},{"level":3,"title":"wings.faceless.lightid.provider.sequence-get-one","slug":"wings-faceless-lightid-provider-sequence-get-one","link":"#wings-faceless-lightid-provider-sequence-get-one","children":[]},{"level":3,"title":"wings.faceless.lightid.provider.sequence-get-all","slug":"wings-faceless-lightid-provider-sequence-get-all","link":"#wings-faceless-lightid-provider-sequence-get-all","children":[]},{"level":3,"title":"wings.faceless.lightid.provider.sequence-adjust","slug":"wings-faceless-lightid-provider-sequence-adjust","link":"#wings-faceless-lightid-provider-sequence-adjust","children":[]},{"level":3,"title":"wings.faceless.lightid.provider.monotonic","slug":"wings-faceless-lightid-provider-monotonic","link":"#wings-faceless-lightid-provider-monotonic","children":[]},{"level":3,"title":"wings.faceless.lightid.layout.block-bits","slug":"wings-faceless-lightid-layout-block-bits","link":"#wings-faceless-lightid-layout-block-bits","children":[]},{"level":3,"title":"wings.faceless.lightid.layout.block-first","slug":"wings-faceless-lightid-layout-block-first","link":"#wings-faceless-lightid-layout-block-first","children":[]}]}],"git":{"createdTime":1656422147000,"updatedTime":1720001347000,"contributors":[{"name":"trydofor","email":"trydofor@gmail.com","commits":6}]},"readingTime":{"minutes":2.54,"words":763},"filePathRelative":"zh/2-faceless/2i-prop-faceless.md","localizedDate":"2022年6月28日","autoDesc":true}');export{p as comp,g as data};
