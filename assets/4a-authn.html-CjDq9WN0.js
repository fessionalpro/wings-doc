import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as i,b as a,o}from"./app-B3mmVXA7.js";const n={};function r(s,e){return o(),i("div",null,[...e[0]||(e[0]=[a(`<h1 id="_4a-集成登录" tabindex="-1"><a class="header-anchor" href="#_4a-集成登录"><span>4A.集成登录</span></a></h1><p>支持多种登录，如用户名密码，Basic扩展，Oauth第三方等，可以安全且方便的控制用户来源。</p><h2 id="_4a-1-集成github" tabindex="-1"><a class="header-anchor" href="#_4a-1-集成github"><span>4A.1.集成Github</span></a></h2><p>因为Github最广泛也最简单，以其作为Oauth登录的演示。</p><p>在Github上设置并记下<code>App ID</code>，<code>Client ID</code>和<code>Client secret</code>，注意不要外泄。 设置入口为 <code>Settings</code> | <code>Developer settings</code> | <code>GitHub Apps</code></p><ul><li>启动 TestWarlockBondApplication</li><li>访问 <a href="http://localhost:8084/auth/github/login-page.html" target="_blank" rel="noopener noreferrer">http://localhost:8084/auth/github/login-page.html</a> 重定向</li><li>访问 <a href="http://localhost:8084/auth/github/login-page.json" target="_blank" rel="noopener noreferrer">http://localhost:8084/auth/github/login-page.json</a> 看数据</li><li>授权并检查 github 的响应</li><li>定制 LoginSuccessHandler 以实现不同的响应格式</li></ul><h2 id="_4a-2-是401还是302" tabindex="-1"><a class="header-anchor" href="#_4a-2-是401还是302"><span>4A.2.是401还是302</span></a></h2><p>当发生禁止访问<code>UNAUTHORIZED</code>时，spring会抛出AccessDeniedException， 再由ExceptionTranslationFilter选择合适的AuthenticationEntryPoint。</p><p>wings中，默认存在2个AuthenticationEntryPoint，</p><ul><li>LoginUrlAuthenticationEntryPoint - 用户侧的通常登录</li><li>BasicAuthenticationEntryPoint - 监控侧的basic验证</li></ul><p>LoginUrl可以通过设置login-forward，选择以何种形式提供给用户端登录。</p><p>在EntryPoint的选择上，可以设置<code>http header</code>来满足特定的匹配规则。 以下设置任意规则满足，则符合 basic 验证，详见 <a href="https://github.com/spring-projects/spring-security/blob/39a80497c27b4cbab70f331f1f92eac7d555f502/config/src/main/java/org/springframework/security/config/annotation/web/configurers/HttpBasicConfigurer.java#L168-L187" target="_blank" rel="noopener noreferrer">HttpBasicConfigurer.registerDefaults</a></p><ul><li>X_REQUESTED_WITH - 含<code>X-Requested-With: XMLHttpRequest</code> header</li><li>restNotHtmlMatcher - <code>Accept</code> 不含 <code>text/html</code>，且包含以下值之一 <ul><li>application/atom+xml</li><li>application/x-www-form-urlencoded</li><li>application/json</li><li>application/octet-stream</li><li>application/xml</li><li>multipart/form-data</li><li>text/xml</li></ul></li><li>allMatcher - <code>Accept</code> 包含 <code>*/*</code></li></ul><h2 id="_4a-3-openapi3特点" tabindex="-1"><a class="header-anchor" href="#_4a-3-openapi3特点"><span>4A.3.OpenAPI3特点</span></a></h2><p>在OpenAPI3的规范中 不允许修改<code>Accept</code>，<code>Content-Type</code>和<code>Authorization</code></p><p><a href="https://swagger.io/docs/specification/describing-parameters/#header-parameters" target="_blank" rel="noopener noreferrer">https://swagger.io/docs/specification/describing-parameters/#header-parameters</a></p><blockquote><p>Note: Header parameters named Accept, Content-Type and Authorization are not allowed. To describe these headers, use the corresponding OpenAPI keywords:</p></blockquote><p>wings默认配置swagger，提供了text和json类型，分别对应LoginUrl和Basic的EntryPoint。</p><p>swagger在302时会自动导向目标页面，最终以200显示。此过程可以debug或curl看到。</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">curl</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -vX</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;POST&#39;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  &#39;http://localhost:8084/user/authed-user.json&#39;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  -H</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;accept: text/html&#39;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,20)])])}const p=t(n,[["render",r]]),h=JSON.parse('{"path":"/zh/4-warlock/4a-authn.html","title":"4A.集成登录","lang":"zh-CN","frontmatter":{"isOriginal":true,"icon":"key","category":["术士","验证"],"description":"4A.集成登录 支持多种登录，如用户名密码，Basic扩展，Oauth第三方等，可以安全且方便的控制用户来源。 4A.1.集成Github 因为Github最广泛也最简单，以其作为Oauth登录的演示。 在Github上设置并记下App ID，Client ID和Client secret，注意不要外泄。 设置入口为 Settings | Develo...","GIT_REPO_HEAD":"2025-09-01 bf16720a95aa32d38b537cc338e086dd2483e52b\\n","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"4A.集成登录\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-03-05T08:54:34.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"trydofor\\",\\"url\\":\\"https://www.trydofor.com\\"}]}"],["meta",{"property":"og:url","content":"https://wings.fessional.pro/zh/4-warlock/4a-authn.html"}],["meta",{"property":"og:site_name","content":"WingsBoot 纹丝不忒"}],["meta",{"property":"og:title","content":"4A.集成登录"}],["meta",{"property":"og:description","content":"4A.集成登录 支持多种登录，如用户名密码，Basic扩展，Oauth第三方等，可以安全且方便的控制用户来源。 4A.1.集成Github 因为Github最广泛也最简单，以其作为Oauth登录的演示。 在Github上设置并记下App ID，Client ID和Client secret，注意不要外泄。 设置入口为 Settings | Develo..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-03-05T08:54:34.000Z"}],["meta",{"property":"article:modified_time","content":"2025-03-05T08:54:34.000Z"}],["link",{"rel":"alternate","hreflang":"en-us","href":"https://wings.fessional.pro/4-warlock/4a-authn.html"}]]},"git":{"createdTime":1656137116000,"updatedTime":1741164874000,"contributors":[{"name":"trydofor","username":"trydofor","email":"trydofor@gmail.com","commits":9,"url":"https://github.com/trydofor"},{"name":"robbietree8","username":"robbietree8","email":"wangzg1988@gmail.com","commits":1,"url":"https://github.com/robbietree8"}]},"readingTime":{"minutes":1.39,"words":418},"filePathRelative":"zh/4-warlock/4a-authn.md","autoDesc":true}');export{p as comp,h as data};
