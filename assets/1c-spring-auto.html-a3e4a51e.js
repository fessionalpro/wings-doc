import{_ as i}from"./plugin-vue_export-helper-c27b6911.js";import{r as t,o as c,c as l,b as n,e,d as a,f as s}from"./app-0857a5f3.js";const r={},p=s('<h1 id="_1c-auto-config-mechanism" tabindex="-1"><a class="header-anchor" href="#_1c-auto-config-mechanism" aria-hidden="true">#</a> 1C.Auto Config Mechanism</h1><p>Take advantage of SpringBoot to complete the auto config.</p><h2 id="_1c-1-naming-and-rule" tabindex="-1"><a class="header-anchor" href="#_1c-1-naming-and-rule" aria-hidden="true">#</a> 1C.1.Naming and Rule</h2><p>There are special features of Spring naming, mainly focused on the following (the directory structure will be explained in detail later)</p><ul><li><code>/wings-conf/</code> autoload, splitted config files</li><li><code>/wings-i18n/</code> autoload, splitted I18n files</li><li><code>**/spring/boot/</code> manual load, Boot-related config, like <code>spring.facts</code></li><li><code>**/spring/bean/</code> autoload, as specified by @ComponentScan</li><li><code>**/spring/conf/</code> Configurer or configuration class</li><li><code>**/spring/prop/</code> Property mapping</li><li><code>**/spring/help/</code> Configuration helper</li><li><code>*Configuration.java</code> conditional load, with config items prefixed by <code>spring.wings.</code></li></ul><p>When developing with <code>idea</code>, there will be yellow warnings or prompts, that do not affect the operation, but look like an eyesore.</p><ul><li>Prompting &quot;Application context not configured for this file&quot; Just add <code>boot/WingsAutoConfiguration</code> manually in <code>Project Structure</code>/<code>Facets</code>/<code>Spring</code>.</li><li>Prompting &quot;annotation processing&quot;, check in <code>Settings</code>/<code>Annotation Processors</code>/<code>Enable annotation processing</code></li><li>Note: The inner classes in <code>@Configuration</code>, <code>static class</code> are treated as independent and not bound by the outer.</li></ul><p>In Wings project, there will be a <code>spring-wings-enabled.properties</code> to toggle the feature. Set <code>spring.wings.silencer.enabled.verbose=true</code> to view the INFO of the log message.</p><h2 id="_1c-2-property-bind-and-prompt" tabindex="-1"><a class="header-anchor" href="#_1c-2-property-bind-and-prompt" aria-hidden="true">#</a> 1C.2.Property Bind and Prompt</h2><p>Properties classes are unified with <code>*Prop.java</code> and <code>@Data</code>, which can be auto prompted after configuration.</p><ul><li>manually add additional-spring-configuration-metadata.json</li><li>auto-generated spring-configuration-metadata.json</li></ul><p>References,</p>',12),d={href:"https://docs.spring.io/spring-boot/docs/3.0.3/reference/htmlsingle/#appendix.configuration-metadata",target:"_blank",rel:"noopener noreferrer"},u={href:"https://github.com/spring-projects/spring-boot/wiki/Spring-Boot-Configuration-Binding",target:"_blank",rel:"noopener noreferrer"},g={href:"https://github.com/spring-projects/spring-boot/wiki/IDE-binding-features#simple-pojo",target:"_blank",rel:"noopener noreferrer"},f=s(`<h2 id="_1c-3-configuring-by-condition" tabindex="-1"><a class="header-anchor" href="#_1c-3-configuring-by-condition" aria-hidden="true">#</a> 1C.3.Configuring by Condition</h2><ul><li>Configuration is <code>*Configuration.java</code> in <code>/spring/bean/</code></li><li>Property is <code>*Prop.java</code> in <code>/spring/prop/</code></li><li>Nested configurations do not inherit from <code>@Conditional</code><ul><li>merged into <code>@ConditionalOnExpression</code></li><li>or customize a <code>@Conditional</code></li></ul></li></ul><p>The <code>@Conditional</code> annotation may be used in any of the following ways:</p><ul><li>as a type-level annotation on any class directly or indirectly annotated with <code>@Component</code>, including <code>@Configuration</code> classes</li><li>as a meta-annotation, for the purpose of composing custom stereotype annotations</li><li>as a method-level annotation on any <code>@Bean</code> method</li></ul><p>If a <code>@Configuration</code> class is marked with <code>@Conditional</code>,all of the <code>@Bean</code> methods, <code>@Import</code> annotations, and <code>@ComponentScan</code> annotations associated with that class will be subject to the conditions.</p><p>NOTE: Inheritance of <code>@Conditional</code> annotations is not supported; any conditions from superclasses or from overridden methods will not be considered.</p><h2 id="_1c-4-conditionalonclass-no-effect" tabindex="-1"><a class="header-anchor" href="#_1c-4-conditionalonclass-no-effect" aria-hidden="true">#</a> 1C.4.ConditionalOnClass No Effect</h2><p>The following code, ConditionalOnClass placed on the same type of bean declaration, will report a NoClassDefFoundError</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Bean</span>
<span class="token annotation punctuation">@ConditionalOnClass</span><span class="token punctuation">(</span><span class="token class-name">SomeService</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token class-name">SomeService</span> <span class="token function">someService</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">SomeService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Need to change to something like the following, inner class-driven configuration,</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Configuration</span><span class="token punctuation">(</span>proxyBeanMethods <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@ConditionalOnClass</span><span class="token punctuation">(</span><span class="token class-name">SomeService</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">SomeServiceConfiguration</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">SomeService</span> <span class="token function">someService</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">SomeService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,11),h={href:"https://docs.spring.io/spring-boot/docs/3.0.3/reference/htmlsingle/#features.developing-auto-configuration",target:"_blank",rel:"noopener noreferrer"};function m(k,b){const o=t("ExternalLinkIcon");return c(),l("div",null,[p,n("ul",null,[n("li",null,[n("a",d,[e("https://docs.spring.io/spring-boot/docs/3.0.3/reference/htmlsingle/#appendix.configuration-metadata"),a(o)])]),n("li",null,[n("a",u,[e("https://github.com/spring-projects/spring-boot/wiki/Spring-Boot-Configuration-Binding"),a(o)])]),n("li",null,[n("a",g,[e("https://github.com/spring-projects/spring-boot/wiki/IDE-binding-features#simple-pojo"),a(o)])])]),f,n("p",null,[e("See "),n("a",h,[e("Creating Your Own Auto-configuration"),a(o)])])])}const C=i(r,[["render",m],["__file","1c-spring-auto.html.vue"]]);export{C as default};
