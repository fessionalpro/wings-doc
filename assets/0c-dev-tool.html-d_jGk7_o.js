import{_ as i}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as l,o,c as r,b as e,e as n,d as s,f as a}from"./app-RvkmO4dA.js";const c={},d=a(`<h1 id="_0c-dev-tool" tabindex="-1"><a class="header-anchor" href="#_0c-dev-tool"><span>0C.Dev Tool</span></a></h1><p>The recommended tools and configs for the efficient work.</p><h2 id="_0c-1-java-development" tabindex="-1"><a class="header-anchor" href="#_0c-1-java-development"><span>0C.1.Java Development</span></a></h2><p>Use <code>IntelliJIdea</code> as <code>IDE</code> with <code>code style</code> and <code>live templates</code>,</p><ul><li><code>wings-idea-style.xml</code> imports in <code>Setting/Editor/Code Style</code>.</li><li><code>wings-idea-live.xml</code> place manually in <code>$config/templates/</code>, or create it if not found.</li></ul><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> wings
<span class="token assign-left variable">id_config</span><span class="token operator">=~</span>/Library/ApplicationSupport/JetBrains/IntelliJIdea2023.2
<span class="token comment"># Backup by copying</span>
<span class="token function">cat</span> <span class="token variable">$id_config</span>/templates/wings.xml <span class="token operator">&gt;</span> wings-idea-live.xml
<span class="token function">cat</span> <span class="token variable">$id_config</span>/codestyles/Wings-Idea.xml <span class="token operator">&gt;</span> wings-idea-style.xml
<span class="token comment"># Restore by copying</span>
<span class="token function">cat</span> wings-idea-live.xml  <span class="token operator">&gt;</span> <span class="token variable">$id_config</span>/templates/wings.xml
<span class="token function">cat</span> wings-idea-style.xml <span class="token operator">&gt;</span> <span class="token variable">$id_config</span>/codestyles/Wings-Idea.xml
<span class="token comment"># Re-import the project, clear the idea configuration</span>
<span class="token function">find</span> <span class="token builtin class-name">.</span> <span class="token parameter variable">-name</span> <span class="token string">&#39;*.iml&#39;</span> <span class="token parameter variable">-o</span> <span class="token parameter variable">-name</span> <span class="token string">&#39;.idea&#39;</span> <span class="token operator">|</span> <span class="token function">tr</span> <span class="token string">&#39;\\n&#39;</span> <span class="token string">&#39;\\0&#39;</span> <span class="token operator">|</span> <span class="token function">xargs</span> <span class="token parameter variable">-0</span> <span class="token function">rm</span> <span class="token parameter variable">-r</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The use of the live-template has 2 types, Insert and Surround, corresponding to insert and edit, and generally when selecting text <code>Surround... ⌥⌘J</code>, when no selected text, use <code>Insert... ⌘J</code></p><ul><li>WIN <code>%HOMEPATH%\\.IntelliJIdea2023.2\\config</code></li><li>LIN <code>~/.IntelliJIdea2023.2/config</code></li><li>MAC <code>~/Library/Preferences/IntelliJIdea2023.2</code></li><li>MAC <code>~/Library/ApplicationSupport/JetBrains/IntelliJIdea2023.2</code></li></ul><p>References</p>`,9),p={href:"https://www.jetbrains.com/help/idea/sharing-live-templates.html",target:"_blank",rel:"noopener noreferrer"},m={href:"https://www.jetbrains.com/help/idea/tuning-the-ide.html#default-dirs",target:"_blank",rel:"noopener noreferrer"},h={href:"https://www.jetbrains.com/help/idea/2019.3/tuning-the-ide.html#default-dirs",target:"_blank",rel:"noopener noreferrer"},u=a(`<p>Useful plug-ins</p><ul><li>.ignore - ignore file in versioning</li><li>Any2dto - jooq, sql generate dto, reduce copy and assignment</li><li>CheckStyle - code quality</li><li>Comments Highlighter - highlighting in comments</li><li>GenerateAllSetter - alt-enter generates all po.setXxx(&quot;&quot;)</li><li>Git Flow Integration - integrates with git-flow</li><li>GitToolBox - automatic fetch</li><li>Git Commit Guide - gitmoji.dev helper</li><li>Grep Console - Console logs are color-coded and filtered</li><li>Indent Rainbow - makes indentation colorful</li><li>kotlin - installed by default</li><li>lombok - IntelliJ Lombok plugin</li><li>MapStruct Support - Static strong typed DTO conversion to reduce copying and assignment</li><li>Maven Helper - Helps manage maven</li><li>Maven Dependency Checker - check latest version of deps</li><li>Quick File Preview - Quick file preview with one click</li><li>Rainbow Brackets - Colorful brackets</li><li>Request mapper - Quickly find mapping</li><li>Statistic - count your code</li><li>String Manipulation - Various operations and conversions on strings</li><li>HTTP Client - official support for the <code>*.http</code> file format</li><li>Test Management - handle <code>*.t.md</code></li></ul><h2 id="_0c-2-kotlin-development" tabindex="-1"><a class="header-anchor" href="#_0c-2-kotlin-development"><span>0C.2.Kotlin Development</span></a></h2><p>Wings supports mixed java and kotlin development, but prefers to write java in order to avoid too much syntax sugar and flexibility. Therefore, the project is compiled for java by default, and kotlin compilation can be enabled by one of the following conditions.</p><ul><li>Automatic activation - activate respectively when <code>src/test/kotlin</code> or <code>src/main/kotlin</code> exists</li><li>Manual activation - specify <code>wings-kotlin-1test</code> or <code>wings-kotlin-2main</code></li><li>Note the order, must be test before main, as shown in the numbers. Since maven does not support multi-conditional activation, see MNG-5909</li></ul><p>When profile is activated, <code>wings-kotlin-scope</code> property is generated, configure dep&#39;s scope as compile/test, To check if kotlin is activated in the current project, go to the project directory and execute the mvn command.</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># Auto active</span>
mvn help:active-profiles
<span class="token comment"># Manual active, comma separated, no whitespace</span>
mvn help:active-profiles <span class="token parameter variable">-P</span> wings-kotlin-1test,wings-kotlin-2main
<span class="token comment"># check final pom.xml</span>
mvn help:effective-pom
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_0c-3-sql-utility" tabindex="-1"><a class="header-anchor" href="#_0c-3-sql-utility"><span>0C.3.SQL Utility</span></a></h2>`,8),g={href:"https://www.mysql.com/products/workbench/",target:"_blank",rel:"noopener noreferrer"},v={href:"https://dbeaver.io",target:"_blank",rel:"noopener noreferrer"},f=e("li",null,"DataGrid - Support for color markup, data-first scenarios such as query, partial export, etc.",-1),b=e("h2",{id:"_0c-4-text-editor",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_0c-4-text-editor"},[e("span",null,"0C.4.Text Editor")])],-1),k=e("ul",null,[e("li",null,"VsCode - frontend, markdown, etc., not suitable for large files"),e("li",null,"Sublime - Text Processing")],-1),w=e("h2",{id:"_0c-5-http-testing",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_0c-5-http-testing"},[e("span",null,"0C.5.Http Testing")])],-1),_=e("p",null,[n("It is recommended to create "),e("code",null,"*.http"),n(" supported by IDEA to descript and test web interface under each project test, the official documentation is as follows,")],-1),y={href:"https://www.jetbrains.com/help/idea/http-client-in-product-code-editor.html",target:"_blank",rel:"noopener noreferrer"},x={href:"https://www.jetbrains.com/help/idea/exploring-http-syntax.html",target:"_blank",rel:"noopener noreferrer"},T={href:"https://www.jetbrains.com/help/idea/http-response-handling-api-reference.html",target:"_blank",rel:"noopener noreferrer"},C={href:"https://www.jetbrains.com/help/idea/http-client-reference.html",target:"_blank",rel:"noopener noreferrer"},j={href:"https://www.jetbrains.com/help/idea/http-response-reference.html",target:"_blank",rel:"noopener noreferrer"},I=e("p",null,"Suggestions for use are as follows,",-1),D=a("<li>When using <code>*.http</code>, usually grab the cURL command from chrome and copy it</li><li>Variable <code>{{variable_name}}</code>, from <code>http-client*.env.json</code>, <code>client.global.</code> or the system&#39;s builtin</li><li>Process the Response. prepend it with <code>&gt;</code> and enclose it in <code>{%</code> and <code>%}</code></li><li>Fold long requests into multiple short lines. Indent all query string lines but the first one</li><li>HTTP Response Handler handle 2 objects: client and response</li>",5),S={href:"https://www.jetbrains.com/help/idea/http-response-handling-examples.html",target:"_blank",rel:"noopener noreferrer"},q=a(`<h2 id="_0c-6-wings-testing" tabindex="-1"><a class="header-anchor" href="#_0c-6-wings-testing"><span>0C.6.Wings Testing</span></a></h2><p>Wings testing deps on the mysql service, which is managed by docker&#39;s compose. If no docker is available, you can disable it with <code>spring.docker.compose.enabled=false</code>. The default jdbc configuration is as follows.</p><div class="language-properties line-numbers-mode" data-ext="properties" data-title="properties"><pre class="language-properties"><code><span class="token key attr-name">spring.datasource.url</span><span class="token punctuation">=</span><span class="token value attr-value">jdbc:mysql://localhost:51487/wings_example\\
?connectionTimeZone=%2B08:00&amp;forceConnectionTimeZoneToSession=true\\
&amp;autoReconnect=true&amp;useSSL=false&amp;allowPublicKeyRetrieval=true\\
&amp;characterEncoding=UTF-8&amp;useUnicode=true</span>

<span class="token key attr-name">spring.datasource.username</span><span class="token punctuation">=</span><span class="token value attr-value">trydofor</span>
<span class="token key attr-name">spring.datasource.password</span><span class="token punctuation">=</span><span class="token value attr-value">moilioncircle</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>To use the new mysql server, the following steps must be taken.</p><ul><li>Create a user to access the wings database</li><li>Create some empty schemas to isolate modules</li><li>Create tables, provide meta cache for sharding</li></ul><p>For details, see the following script and comments.</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment">## grant and create schema</span>
<span class="token comment"># observe/docker/mysql/init/*.sql</span>

<span class="token comment">## create table and data</span>
mvn <span class="token parameter variable">-pl</span> <span class="token string">&#39;:devs-codegen&#39;</span> <span class="token parameter variable">-am</span> <span class="token punctuation">\\</span>
-Ddevs-codegen.test.skip<span class="token operator">=</span>false <span class="token punctuation">\\</span>
-Ddevs-initdb<span class="token operator">=</span>true <span class="token punctuation">\\</span>
<span class="token parameter variable">-Dwings.test.skip</span><span class="token operator">=</span>true <span class="token punctuation">\\</span>
clean <span class="token builtin class-name">test</span>

<span class="token comment">## wings test and coverage</span>
mvn <span class="token parameter variable">-P</span> <span class="token string">&#39;coverage,!example&#39;</span> clean <span class="token builtin class-name">test</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_0c-7-git-flows" tabindex="-1"><a class="header-anchor" href="#_0c-7-git-flows"><span>0C.7. Git Flows</span></a></h2><p>Which git flow is better depends on the actual project situation, such as commit frequency, number of committers, etc. The main factors are,</p><ul><li>Easy to read - linear history is best for readability</li><li>Less conflict - in developing, quick find, merge, squash, revert</li><li>Fix bugs - after release, easy to fix bugs</li></ul><p>When committing, squash/rebase is recommended to reduce transition commits and commit coupling.</p><ul><li>One commit, one issue, and pass unit tests</li><li>One merge, one feature, and pass integration tests</li></ul><p>Common practices used flows are,</p>`,13),J={href:"https://nvie.com/posts/a-successful-git-branching-model/",target:"_blank",rel:"noopener noreferrer"},W={href:"https://guides.github.com/introduction/flow/",target:"_blank",rel:"noopener noreferrer"},E={href:"https://www.endoflineblog.com/oneflow-a-git-branching-model-and-workflow",target:"_blank",rel:"noopener noreferrer"},G={href:"https://www.atlassian.com/git/tutorials/comparing-workflows/forking-workflow",target:"_blank",rel:"noopener noreferrer"},L={href:"https://trunkbaseddevelopment.com/",target:"_blank",rel:"noopener noreferrer"};function M(A,P){const t=l("ExternalLinkIcon");return o(),r("div",null,[d,e("ul",null,[e("li",null,[e("a",p,[n("sharing-live-templates"),s(t)])]),e("li",null,[e("a",m,[n("2020.1 and above versions"),s(t)])]),e("li",null,[e("a",h,[n("2019.3.x and below versions"),s(t)])])]),u,e("ul",null,[e("li",null,[e("a",g,[n("Mysql Workbench"),s(t)]),n(" - SQL-first scenarios, such as DDL, Admin, permissions, etc.")]),e("li",null,[e("a",v,[n("DBeaver"),s(t)]),n(" - Support for color markup, eclipse style")]),f]),b,k,w,_,e("ul",null,[e("li",null,[e("a",y,[n("https://www.jetbrains.com/help/idea/http-client-in-product-code-editor.html"),s(t)])]),e("li",null,[e("a",x,[n("https://www.jetbrains.com/help/idea/exploring-http-syntax.html"),s(t)])]),e("li",null,[e("a",T,[n("https://www.jetbrains.com/help/idea/http-response-handling-api-reference.html"),s(t)])]),e("li",null,[e("a",C,[n("https://www.jetbrains.com/help/idea/http-client-reference.html"),s(t)])]),e("li",null,[e("a",j,[n("https://www.jetbrains.com/help/idea/http-response-reference.html"),s(t)])])]),I,e("ul",null,[D,e("li",null,[e("a",S,[n("https://www.jetbrains.com/help/idea/http-response-handling-examples.html"),s(t)])])]),q,e("ul",null,[e("li",null,[e("a",J,[n("GitFlow"),s(t)])]),e("li",null,[e("a",W,[n("GitHub Flow"),s(t)])]),e("li",null,[e("a",E,[n("OneFlow"),s(t)])]),e("li",null,[e("a",G,[n("Forking Workflow"),s(t)])]),e("li",null,[e("a",L,[n("Trunk-Based Development"),s(t)])])])])}const F=i(c,[["render",M],["__file","0c-dev-tool.html.vue"]]),H=JSON.parse('{"path":"/0-wings/0c-dev-tool.html","title":"0C.Dev Tool","lang":"en-US","frontmatter":{"isOriginal":true,"icon":"tool","category":["WingsGod","Tool"],"description":"0C.Dev Tool The recommended tools and configs for the efficient work. 0C.1.Java Development Use IntelliJIdea as IDE with code style and live templates, wings-idea-style.xml impo...","GIT_REPO_HEAD":"2024-02-16 3fdd45de377187002fd49a06332fb14346c10eb1","head":[["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://wings.fessional.pro/zh/0-wings/0c-dev-tool.html"}],["meta",{"property":"og:url","content":"https://wings.fessional.pro/0-wings/0c-dev-tool.html"}],["meta",{"property":"og:site_name","content":"WingsBoot Win Sprint"}],["meta",{"property":"og:title","content":"0C.Dev Tool"}],["meta",{"property":"og:description","content":"0C.Dev Tool The recommended tools and configs for the efficient work. 0C.1.Java Development Use IntelliJIdea as IDE with code style and live templates, wings-idea-style.xml impo..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-02-01T02:31:14.000Z"}],["meta",{"property":"article:author","content":"trydofor"}],["meta",{"property":"article:modified_time","content":"2024-02-01T02:31:14.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"0C.Dev Tool\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-02-01T02:31:14.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"trydofor\\",\\"url\\":\\"https://www.trydofor.com\\"}]}"]]},"headers":[{"level":2,"title":"0C.1.Java Development","slug":"_0c-1-java-development","link":"#_0c-1-java-development","children":[]},{"level":2,"title":"0C.2.Kotlin Development","slug":"_0c-2-kotlin-development","link":"#_0c-2-kotlin-development","children":[]},{"level":2,"title":"0C.3.SQL Utility","slug":"_0c-3-sql-utility","link":"#_0c-3-sql-utility","children":[]},{"level":2,"title":"0C.4.Text Editor","slug":"_0c-4-text-editor","link":"#_0c-4-text-editor","children":[]},{"level":2,"title":"0C.5.Http Testing","slug":"_0c-5-http-testing","link":"#_0c-5-http-testing","children":[]},{"level":2,"title":"0C.6.Wings Testing","slug":"_0c-6-wings-testing","link":"#_0c-6-wings-testing","children":[]},{"level":2,"title":"0C.7. Git Flows","slug":"_0c-7-git-flows","link":"#_0c-7-git-flows","children":[]}],"git":{"createdTime":1680228107000,"updatedTime":1706754674000,"contributors":[{"name":"trydofor","email":"trydofor@gmail.com","commits":7}]},"readingTime":{"minutes":2.99,"words":898},"filePathRelative":"0-wings/0c-dev-tool.md","localizedDate":"March 31, 2023","autoDesc":true}');export{F as comp,H as data};
