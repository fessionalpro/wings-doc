import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,b as n,o as e}from"./app-B3mmVXA7.js";const t={};function l(r,s){return e(),a("div",null,[...s[0]||(s[0]=[n(`<h1 id="_9b2-actuator-admin监控" tabindex="-1"><a class="header-anchor" href="#_9b2-actuator-admin监控"><span>9B2.actuator/admin监控</span></a></h1><p>wings体系下，默认启动了基本的监控</p><ul><li>Wings 启停和日志通知</li><li>Hazelcast Management Center</li><li>Spring Boot Admin</li><li>Prometheus Grafana</li><li>Sentry 日志监控</li></ul><h2 id="_9b2-1-启停和日志" tabindex="-1"><a class="header-anchor" href="#_9b2-1-启停和日志"><span>9B2.1.启停和日志</span></a></h2><p>Wings自身的监控，分为启动脚本(wings-starter.sh)和程序自身(app)两个部分，默认使用钉钉通知。</p><ul><li>wings-starter.sh - 通过cron: (1)pid是否存在，(2)log是否增长</li><li>wings app - 启动，停止，JVM指标，以及日志中WARN的信息</li></ul><h3 id="_1a-启动脚本监控" tabindex="-1"><a class="header-anchor" href="#_1a-启动脚本监控"><span>1a.启动脚本监控</span></a></h3><p>通过<code>warn</code>参数，执行监控功能，建议使用crontab定期执行，需要配置参数如下</p><ul><li><code>WARN_TXT</code> - 前置文本，如钉钉中的关键词等</li><li><code>WARN_AGO</code> - 秒数，非空时且日志在N秒内未增长，则报告</li><li><code>WARN_RUN</code> - webhook，非空时，用来发生报告，默认钉钉</li></ul><h3 id="_1b-程序自身监控" tabindex="-1"><a class="header-anchor" href="#_1b-程序自身监控"><span>1b.程序自身监控</span></a></h3><p>程序自身监控的缺点是【谁来监控监控者】，需要程序自身能够健康的执行。 默认配置详见wings-monitor.properties，需要关注的配置项有，</p><ul><li><code>spring.application.name</code> - 定位app，必须设置</li><li><code>wings.slardar.monitor.cron</code> - 默认每17分钟扫描一次</li><li><code>.log.default.file</code> - 默认日志文件 <code>logging.file.name</code></li><li><code>.view.domain</code> - 对外的查看日志的url，建议设置</li><li><code>.ding-notice</code> - 钉钉设置，默认使用monitor</li></ul><h2 id="_9b2-2-hazelcast监控" tabindex="-1"><a class="header-anchor" href="#_9b2-2-hazelcast监控"><span>9B2.2.hazelcast监控</span></a></h2><p>Hazelcast版本随spring boot同步更新，主要用作caching, Session，其次是Event和Lock，Messaging等。</p><p><a href="https://docs.hazelcast.com/imdg/4.2/" target="_blank" rel="noopener noreferrer">Hazelcast IMDG</a> 开源版是Apache2许可证（包括独立部署和SpringBoot中的Runtime形式）， 相比于Pro和Enterprise版，主要缺少了Persistence和Security suite，在内网中影响不大。</p><p>在wings的基本应用中，一般只有3个节点(admin/devops/front)构成的集群，使用log和ManagementCenter监控。 因3节点集群的强壮性刚好够用，以CP Subsystem Unsafe Mode运行，仅能提供弱一致性保证，不如CP的强一致性。</p><ul><li>CP Subsystem Management APIs are not available.</li><li>split-brain protection is not supported.</li></ul><p><a href="https://docs.hazelcast.com/management-center/5.0/" target="_blank" rel="noopener noreferrer">Management Center</a> 无许可时，仅能监控最多3个成员的集群。 使用时注意要设置强壮密码，公网上要禁用一些不安全选项，如script</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">wget</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> https://repository.hazelcast.com/download/management-center/hazelcast-management-center-5.0.4.zip</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">unzip</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> hazelcast-management-center-5.0.4.zip</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">cd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> hazelcast-management-center-5.0.4</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">nohup</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> bin/start.sh</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 8090</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &gt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">hazelcast-management-center.log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> 2&gt;&amp;1 &amp;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>访问 <a href="http://localhost:8090" target="_blank" rel="noopener noreferrer">http://localhost:8090</a>，同时设置好足够强度的密码即可。 wings-starter.sh同级目录下生成diagnostics.log，可查看Metric及其他信息。wings默认的period.seconds是600，即10分钟。</p><h2 id="_9b2-3-spring-boot-admin" tabindex="-1"><a class="header-anchor" href="#_9b2-3-spring-boot-admin"><span>9B2.3.Spring Boot Admin</span></a></h2><p>以devops为server，其他app为client，自动启动和注册，参考wings-boot-admin.properties配置。 其中需要注意的是，用户权限设置，密码是否强壮，钉钉token和关键词是否正确。</p><p>其中，server和client间是basic验证的wings定制版，以时间戳和md5摘要，取代明文传送密码，但安全性仍不高。 因此，除了密码强壮外，尽量注意内网隔离，传输层加密，尽量使用https等。</p><p>如演示工程结构一样，在devops的dependency中增加spring-boot-admin-starter-server 而在其他boot应用，如admin中，增加spring-boot-admin-starter-client依赖。 同时，分别配置wings-boot-admin.properties。 演示工程中在common统一配置的。</p><h2 id="_9b2-4-prometheus-grafana" tabindex="-1"><a class="header-anchor" href="#_9b2-4-prometheus-grafana"><span>9B2.4.Prometheus Grafana</span></a></h2><p>使用 <a href="https://prometheus.io/docs/prometheus/latest/getting_started/" target="_blank" rel="noopener noreferrer">prometheus</a> pull数据。 若需要push形式，可使用 pushgateway</p><p>prometheus 仅作为数据库，并且裸奔，没有用户验证，需要自己保护</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 检查 prometheus</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">curl</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -G</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> http://localhost:8093/actuator/prometheus</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -u</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;boot-admin-client:</span><span style="--shiki-light:#E45649;--shiki-dark:#98C379;">\${</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">DING_TALK_TOKEN</span><span style="--shiki-light:#E45649;--shiki-dark:#98C379;">}</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># prometheus配置文件</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">tee</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /Users/trydofor/Docker/prometheus/conf/prometheus.yml</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;&lt; </span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">EOF</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">scrape_configs:</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  - job_name: &quot;wings-winx&quot;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    metrics_path: &quot;/actuator/prometheus&quot;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    static_configs:</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">      - targets:</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        - &quot;host.docker.internal:8091&quot;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        - &quot;host.docker.internal:8092&quot;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        - &quot;host.docker.internal:8093&quot;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    basic_auth:</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">      username: &quot;boot-admin-client&quot;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">      password: &quot;</span><span style="--shiki-light:#E45649;--shiki-dark:#98C379;">\${</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">DING_TALK_TOKEN</span><span style="--shiki-light:#E45649;--shiki-dark:#98C379;">}</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">EOF</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 启动docker</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> run</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -d</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --name</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> prometheus</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --restart=unless-stopped</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -v</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /Users/trydofor/Docker/prometheus/conf:/etc/prometheus</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -v</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /Users/trydofor/Docker/prometheus/data:/prometheus</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -p</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 9090:9090</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">prom/prometheus</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># prometheus配置文件</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">tee</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /Users/trydofor/Docker/grafana/conf/grafana.ini</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;&lt; </span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">EOF</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">[security]</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">admin_user = admin</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">admin_password = </span><span style="--shiki-light:#E45649;--shiki-dark:#98C379;">\${</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">DING_TALK_TOKEN</span><span style="--shiki-light:#E45649;--shiki-dark:#98C379;">}</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">EOF</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 启动docker</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> run</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -d</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --name</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> grafana-oss</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --restart=unless-stopped</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -v</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /Users/trydofor/Docker/grafana/conf:/etc/grafana</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -v</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /Users/trydofor/Docker/grafana/data:/var/lib/grafana</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -p</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 3000:3000</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">grafana/grafana-oss</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后导入 预定义的面板。</p><p><a href="https://grafana.com/grafana/dashboards/4701" target="_blank" rel="noopener noreferrer">JVM Micrometer / 4701</a></p><h2 id="_9b2-5-sentry-日志监控" tabindex="-1"><a class="header-anchor" href="#_9b2-5-sentry-日志监控"><span>9B2.5.Sentry 日志监控</span></a></h2><p>可以使用<a href="https://sentry.io" target="_blank" rel="noopener noreferrer">官方服务</a>或者<a href="https://github.com/getsentry/self-hosted" target="_blank" rel="noopener noreferrer">官方docker</a></p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#https://develop.sentry.dev/self-hosted/</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">wget</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -O</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> sendtry.tgz</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> https://github.com/getsentry/self-hosted/archive/refs/tags/22.2.0.tar.gz</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">tar</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> xzf</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> sendtry.tgz</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">cd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> self-hosted-22.2.0/</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">./install.sh</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># https://docs.docker.com/engine/install/ubuntu/</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># https://docs.docker.com/engine/install/linux-postinstall/</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 修改mail.*对应的邮件配置项，</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">vi</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> sentry/config.yml</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#mail.backend: &#39;smtp&#39;</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#mail.host: &#39;smtp.exmail.qq.com&#39;</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#mail.port: 465</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#mail.use-ssl: true</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker-compose</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> up</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -d</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 修改其他配置，可以先stop再up</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker-compose</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> stop</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,33)])])}const d=i(t,[["render",l]]),k=JSON.parse('{"path":"/zh/9-example/9b.spring-boot/9b2.actuator-admin.html","title":"9B2.actuator/admin监控","lang":"zh-CN","frontmatter":{"isOriginal":true,"icon":"comment-dollar","category":["实战","监控"],"description":"9B2.actuator/admin监控 wings体系下，默认启动了基本的监控 Wings 启停和日志通知 Hazelcast Management Center Spring Boot Admin Prometheus Grafana Sentry 日志监控 9B2.1.启停和日志 Wings自身的监控，分为启动脚本(wings-starter.s...","GIT_REPO_HEAD":"2025-09-01 bf16720a95aa32d38b537cc338e086dd2483e52b\\n","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"9B2.actuator/admin监控\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-08-10T01:13:20.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"trydofor\\",\\"url\\":\\"https://www.trydofor.com\\"}]}"],["meta",{"property":"og:url","content":"https://wings.fessional.pro/zh/9-example/9b.spring-boot/9b2.actuator-admin.html"}],["meta",{"property":"og:site_name","content":"WingsBoot 纹丝不忒"}],["meta",{"property":"og:title","content":"9B2.actuator/admin监控"}],["meta",{"property":"og:description","content":"9B2.actuator/admin监控 wings体系下，默认启动了基本的监控 Wings 启停和日志通知 Hazelcast Management Center Spring Boot Admin Prometheus Grafana Sentry 日志监控 9B2.1.启停和日志 Wings自身的监控，分为启动脚本(wings-starter.s..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-08-10T01:13:20.000Z"}],["meta",{"property":"article:modified_time","content":"2024-08-10T01:13:20.000Z"}],["link",{"rel":"alternate","hreflang":"en-us","href":"https://wings.fessional.pro/9-example/9b.spring-boot/9b2.actuator-admin.html"}]]},"git":{"createdTime":1656137116000,"updatedTime":1723252400000,"contributors":[{"name":"trydofor","username":"trydofor","email":"trydofor@gmail.com","commits":9,"url":"https://github.com/trydofor"}]},"readingTime":{"minutes":3.41,"words":1023},"filePathRelative":"zh/9-example/9b.spring-boot/9b2.actuator-admin.md","autoDesc":true}');export{d as comp,k as data};
