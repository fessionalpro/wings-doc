import{_ as i}from"./batrider_icon-CCWCcrO6.js";import{_ as t}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as c,o as a,c as n,b as e,e as o,d as s,f as l}from"./app-mN42Vc4a.js";const d={},h=l('<h1 id="_5-batrider" tabindex="-1"><a class="header-anchor" href="#_5-batrider"><span>5.Batrider</span></a></h1><p><img src="'+i+'" alt="batrider"></p><blockquote><p>Once he takes to the skies, Batrider can strike from any direction.</p></blockquote><p>ServiceComb, a lightweight but full-stack microservice solution.</p><h2 id="_5-1-module-project" tabindex="-1"><a class="header-anchor" href="#_5-1-module-project"><span>5.1.Module Project</span></a></h2><ul><li>batrider - servicecomb basic setting</li><li>batrider-zero - registry-zero-config</li><li>batrider-test - testing utility (rest and rpc)</li></ul><h2 id="_5-2-microservice-convention" tabindex="-1"><a class="header-anchor" href="#_5-2-microservice-convention"><span>5.2.Microservice Convention</span></a></h2><ul><li>communication model, <code>RestOverServlet</code> when coexisting with SpringMvc</li><li>Programming model, <code>SpringMvc</code> for providers and <code>Rpc</code> for consumers</li><li>Authentication, as public-private key <code>handler-publickey-auth</code></li><li>rest.urlPattern is <code>/servcomber/*</code></li><li>Contract as pure <code>interface</code> with a <code>Contract</code> suffix (opposed to <code>Service</code>)</li><li>Provider with a suffix of <code>Contractor</code> (vs. <code>Controller</code>) and a package of <code>contractor</code></li><li>Consumer, with the <code>Contract</code> suffix for the interface and injected fields</li><li>default <code>registry-zero-config</code>, recommended <code>servicecomb-service-center</code></li><li>No external gateway by default, coexists with springMvc</li><li>Asynchronous is only implemented on the consumer side, providers are synchronous by default</li></ul><h2 id="_5-3-basic-demo-project" tabindex="-1"><a class="header-anchor" href="#_5-3-basic-demo-project"><span>5.3.Basic Demo Project</span></a></h2><p>start the <code>winx-api</code> and <code>batrider-test</code> projects, and then visit swagger</p>',10),p={href:"http://localhost:8085/swagger-ui/index.html#/batrider-controller",target:"_blank",rel:"noopener noreferrer"},u=e("li",null,"/batrider/batx-hello-pxy - access batrider service by Invoker",-1),m=e("li",null,"/batrider/winx-hello-cse - access winx service by Rest's cse",-1),b=e("li",null,"/batrider/winx-hello-rpc - access winx service by Rpc",-1);function f(_,v){const r=c("ExternalLinkIcon");return a(),n("div",null,[h,e("ul",null,[e("li",null,[e("a",p,[o("http://localhost:8085/swagger-ui/index.html#/batrider-controller"),s(r)]),o(" - swagger page")]),u,m,b])])}const y=t(d,[["render",f],["__file","index.html.vue"]]);export{y as default};
