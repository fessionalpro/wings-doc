import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,o as t,e as o}from"./app-DjJWubZm.js";const n={},i=o('<h1 id="_2c-separation-and-sharding" tabindex="-1"><a class="header-anchor" href="#_2c-separation-and-sharding"><span>2C.Separation and Sharding</span></a></h1><blockquote><p>Add a state to the inflated data, stop the time, divide and conquer, and combine.</p></blockquote><p>Use ShardingJdbc to handle RW separation, data sharding to handle large data smoothly. Wings uses shard to broadly represent DataSharding, ReadWrite Splitting/Separation.</p><h2 id="_2c-1-shortcoming-of-sharding" tabindex="-1"><a class="header-anchor" href="#_2c-1-shortcoming-of-sharding"><span>2C.1.Shortcoming of Sharding</span></a></h2><p>Because <code>ShardingJdbc</code> has some SQL parsing problems (index,trigger) when executing SCHEMA changes. So when doing SCHEMA and <code>journal</code> operation, use <code>plain</code> datasource and finish it with <code>flywave</code>. <a href="https://shardingsphere.apache.org/document/current/cn/features/sharding/principle/parse/" target="_blank" rel="noopener noreferrer">Reference SQL parsing engine</a></p><p>It may not be necessary to consider shard tables at the beginning of the business, when needed, you can use <code>flywave</code> to generate tables and migrate data.</p><p>By default, DDL, DCL use <code>plain</code> datasource, DML etc. use <code>shard</code> datasource to execute. You can also specify the datasource manually to accomplish customized data operations.</p><h2 id="_2c-2-things-in-sql-execution" tabindex="-1"><a class="header-anchor" href="#_2c-2-things-in-sql-execution"><span>2C.2.Things in SQL Execution</span></a></h2><p><a href="https://dev.mysql.com/doc/refman/8.0/en/sql-syntax-data-definition.html" target="_blank" rel="noopener noreferrer">DDL - Data Definition Statements</a></p><ul><li><code>ALTER TABLE</code></li><li><code>CREATE INDEX</code></li><li><code>CREATE TABLE</code></li><li><code>CREATE TRIGGER</code></li><li><code>DROP INDEX</code></li><li><code>DROP TABLE</code> can only be one table at a time</li><li><code>DROP TRIGGER</code> specify <code>plain</code> table manually, according to <code>shard</code> table naming rules to execute</li><li><code>TRUNCATE TABLE</code></li></ul><p>Among them, except for the system-generated trigger for <code>journal</code>, manual deletion will cause data inconsistency.</p><p><a href="https://dev.mysql.com/doc/refman/8.0/en/sql-syntax-data-manipulation.html" target="_blank" rel="noopener noreferrer">DML - Data Manipulation Statements</a></p><ul><li><code>DELETE</code></li><li><code>INSERT</code></li><li><code>REPLACE</code></li><li><code>UPDATE</code></li></ul><p>For SQL other than the above types, please use a comment to force to specify <code>datasource</code> and <code>plain</code> table to skip the SQL auto parsing. Theoretically, you should not use flywave to execute SQL other than DDL,DCL and DML, which is outside the scope of versioning.</p>',14),r=[i];function d(c,s){return t(),a("div",null,r)}const p=e(n,[["render",d],["__file","2c-shard.html.vue"]]),g=JSON.parse('{"path":"/2-faceless/2c-shard.html","title":"2C.Separation and Sharding","lang":"en-US","frontmatter":{"isOriginal":true,"icon":"layer-group","category":["Faceless","Sharding","Separation"],"description":"2C.Separation and Sharding Add a state to the inflated data, stop the time, divide and conquer, and combine. Use ShardingJdbc to handle RW separation, data sharding to handle la...","GIT_REPO_HEAD":"2024-08-31 14ebccb0d5142c697c8e1c26714477f1e205282c","head":[["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://wings.fessional.pro/zh/2-faceless/2c-shard.html"}],["meta",{"property":"og:url","content":"https://wings.fessional.pro/2-faceless/2c-shard.html"}],["meta",{"property":"og:site_name","content":"WingsBoot Win Sprint"}],["meta",{"property":"og:title","content":"2C.Separation and Sharding"}],["meta",{"property":"og:description","content":"2C.Separation and Sharding Add a state to the inflated data, stop the time, divide and conquer, and combine. Use ShardingJdbc to handle RW separation, data sharding to handle la..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-06-12T00:21:52.000Z"}],["meta",{"property":"article:author","content":"trydofor"}],["meta",{"property":"article:modified_time","content":"2024-06-12T00:21:52.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"2C.Separation and Sharding\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-06-12T00:21:52.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"trydofor\\",\\"url\\":\\"https://www.trydofor.com\\"}]}"]]},"headers":[{"level":2,"title":"2C.1.Shortcoming of Sharding","slug":"_2c-1-shortcoming-of-sharding","link":"#_2c-1-shortcoming-of-sharding","children":[]},{"level":2,"title":"2C.2.Things in SQL Execution","slug":"_2c-2-things-in-sql-execution","link":"#_2c-2-things-in-sql-execution","children":[]}],"git":{"createdTime":1655901635000,"updatedTime":1718151712000,"contributors":[{"name":"trydofor","email":"trydofor@gmail.com","commits":5}]},"readingTime":{"minutes":0.88,"words":265},"filePathRelative":"2-faceless/2c-shard.md","localizedDate":"June 22, 2022","autoDesc":true}');export{p as comp,g as data};
