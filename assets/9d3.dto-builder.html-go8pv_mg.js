import{_ as t}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as o,o as i,c as p,b as a,e as n,d as l,f as s}from"./app-RvkmO4dA.js";const c={},r=s(`<h1 id="_9d3-rw-separation-dto" tabindex="-1"><a class="header-anchor" href="#_9d3-rw-separation-dto"><span>9D3.RW-Separation Dto</span></a></h1><p>In Wings, to protect data and prevent method leak, the incoming Dto should be read-only.</p><h2 id="getter-and-builder" tabindex="-1"><a class="header-anchor" href="#getter-and-builder"><span>Getter and Builder</span></a></h2><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@Getter</span> <span class="token annotation punctuation">@Builder</span>
<span class="token annotation punctuation">@ToString</span> <span class="token annotation punctuation">@EqualsAndHashCode</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RwsDto</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">Long</span> id<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The simplest separation strategy, with lombok power, and very clean code.</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name">RwsDto</span> p <span class="token operator">=</span> <span class="token class-name">RwsDto</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                 <span class="token punctuation">.</span><span class="token function">id</span><span class="token punctuation">(</span><span class="token number">1L</span><span class="token punctuation">)</span>
                 <span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span>
                 <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="builder-plugin" tabindex="-1"><a class="header-anchor" href="#builder-plugin"><span>Builder Plugin</span></a></h2><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@Getter</span>
<span class="token annotation punctuation">@ToString</span> <span class="token annotation punctuation">@EqualsAndHashCode</span>
<span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">RwsDto</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">Long</span> id<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>
    <span class="token comment">// Alt + Insert &gt; Builder</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8),d={href:"https://plugins.jetbrains.com/plugin/7354-innerbuilder",target:"_blank",rel:"noopener noreferrer"},u=s(`<ul><li>Generate builder methods for final fields</li><li>Generate static newBuilder()method</li><li>Rename newBuilder()to builder()</li><li>Generate builder copy constructor</li></ul><p>In comparison to lombok, you can add your own code in the generated builder method.</p><h2 id="manual-inheritance" tabindex="-1"><a class="header-anchor" href="#manual-inheritance"><span>Manual Inheritance</span></a></h2><p>Builder pattern, mainly final + same field assignment pattern, the following is the inheritance way.</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@Getter</span>
<span class="token annotation punctuation">@ToString</span> <span class="token annotation punctuation">@EqualsAndHashCode</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RwsDto</span> <span class="token punctuation">{</span>
    <span class="token keyword">protected</span> <span class="token class-name">Long</span> id<span class="token punctuation">;</span>
    <span class="token keyword">protected</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>
    
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Builder</span> <span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">Builder</span> <span class="token keyword">extends</span> <span class="token class-name">RwsDto</span> <span class="token punctuation">{</span>
        <span class="token keyword">public</span> <span class="token class-name">Builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// int the fixed values</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token class-name">Builder</span> <span class="token function">id</span><span class="token punctuation">(</span><span class="token class-name">Long</span> id<span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token class-name">Objects</span><span class="token punctuation">.</span><span class="token function">requireNonNull</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">super</span><span class="token punctuation">.</span>id <span class="token operator">=</span> id<span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">public</span> <span class="token class-name">Builder</span> <span class="token function">name</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">super</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token class-name">RwsDto</span> <span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5);function k(m,v){const e=o("ExternalLinkIcon");return i(),p("div",null,[r,a("p",null,[n("In IDEA use "),a("a",d,[n("InnerBuilder"),l(e)]),n(", and check the following options,")]),u])}const g=t(c,[["render",k],["__file","9d3.dto-builder.html.vue"]]),y=JSON.parse('{"path":"/9-example/9d.wings-boot/9d3.dto-builder.html","title":"9D3.RW-Separation Dto","lang":"en-US","frontmatter":{"isOriginal":true,"icon":"note","category":["Practice","Manual"],"description":"9D3.RW-Separation Dto In Wings, to protect data and prevent method leak, the incoming Dto should be read-only. Getter and Builder The simplest separation strategy, with lombok p...","GIT_REPO_HEAD":"2024-02-16 3fdd45de377187002fd49a06332fb14346c10eb1","head":[["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://wings.fessional.pro/zh/9-example/9d.wings-boot/9d3.dto-builder.html"}],["meta",{"property":"og:url","content":"https://wings.fessional.pro/9-example/9d.wings-boot/9d3.dto-builder.html"}],["meta",{"property":"og:site_name","content":"WingsBoot Win Sprint"}],["meta",{"property":"og:title","content":"9D3.RW-Separation Dto"}],["meta",{"property":"og:description","content":"9D3.RW-Separation Dto In Wings, to protect data and prevent method leak, the incoming Dto should be read-only. Getter and Builder The simplest separation strategy, with lombok p..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-06-18T08:37:26.000Z"}],["meta",{"property":"article:author","content":"trydofor"}],["meta",{"property":"article:modified_time","content":"2023-06-18T08:37:26.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"9D3.RW-Separation Dto\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-06-18T08:37:26.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"trydofor\\",\\"url\\":\\"https://www.trydofor.com\\"}]}"]]},"headers":[{"level":2,"title":"Getter and Builder","slug":"getter-and-builder","link":"#getter-and-builder","children":[]},{"level":2,"title":"Builder Plugin","slug":"builder-plugin","link":"#builder-plugin","children":[]},{"level":2,"title":"Manual Inheritance","slug":"manual-inheritance","link":"#manual-inheritance","children":[]}],"git":{"createdTime":1680228107000,"updatedTime":1687077446000,"contributors":[{"name":"trydofor","email":"trydofor@gmail.com","commits":3}]},"readingTime":{"minutes":0.68,"words":204},"filePathRelative":"9-example/9d.wings-boot/9d3.dto-builder.md","localizedDate":"March 31, 2023","autoDesc":true}');export{g as comp,y as data};
