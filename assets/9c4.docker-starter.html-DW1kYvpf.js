import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as s,o as a,e}from"./app-BcJ4NaN5.js";const n={},l=e(`<h1 id="_9c4-use-docker-starter-sh" tabindex="-1"><a class="header-anchor" href="#_9c4-use-docker-starter-sh"><span>9C4.Use Docker/Starter.sh</span></a></h1><p>Wings provides two ways to publish and start the app.</p><ul><li>script - shell-based publishing and management</li><li>docker - docker-based publishing and management</li></ul><h2 id="_9c4-1-script-way" tabindex="-1"><a class="header-anchor" href="#_9c4-1-script-way"><span>9C4.1.Script Way</span></a></h2><ul><li>release.sh - script to pull, package and push</li><li>starter.sh - script to start, stop and monitor</li></ul><p>The scripts support the <code>&lt;same-name&gt;.env</code> to override the default config.</p><h3 id="_1a-release-sh" tabindex="-1"><a class="header-anchor" href="#_1a-release-sh"><span>1a.release.sh</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">## soft link script with app name</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">ln</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -s</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> wings-release.sh</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> winx-admin.sh</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">## create the same name env file</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">vi</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> winx-admin.env</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">## pull source code from git</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">./winx-admin.sh</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> pull</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">## build by mvn or web pack</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">./winx-admin.sh</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> pack</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">## push the result to app server</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">./winx-admin.sh</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> push</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">## for more help</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">./winx-admin.sh</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> help</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1b-starter-sh" tabindex="-1"><a class="header-anchor" href="#_1b-starter-sh"><span>1b.starter.sh</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">## soft link script with app name</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">ln</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -s</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> wings-starter.sh</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> winx-admin.sh</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">## create the same name env file</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">vi</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> winx-admin.env</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">## safely start</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">./winx-admin.sh</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> start</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">## check status</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">./winx-admin.sh</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> status</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">## safely stop</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">./winx-admin.sh</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> stop</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">## for more help</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">./winx-admin.sh</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> help</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_9c4-2-docker-way" tabindex="-1"><a class="header-anchor" href="#_9c4-2-docker-way"><span>9C4.2.Docker Way</span></a></h2><p>Docker management is simple and consistent without relying on env and conf of host. The following features/libs are optional and can be removed before building.</p><ul><li><code>spring-boot-devtools-*.jar</code></li><li><code>spring-boot-docker-compose-*.jar</code></li><li><code>spring-boot-admin-*.jar</code></li><li>spring <code>-actuator*</code></li></ul><h3 id="_2a-layered-build" tabindex="-1"><a class="header-anchor" href="#_2a-layered-build"><span>2a. Layered Build</span></a></h3><p>SpringBoot project after repackage, usually be about 100+M, and the libs more than 95+%. Therefore, in practice, docker is splited into 2 layers, <code>dep</code> and <code>app</code>.</p><ul><li>docker-dep - all <code>*.jar</code> exlude <code>*-SNAPSHOT.jar</code></li><li>docker-app - <code>*-SNAPSHOT.jar</code> and project files (<code>classes/</code>,<code>resources/</code>)</li></ul><p>Equivalent to <code>java -Djarmode=layertools -jar target/*.jar extract</code>,</p><ul><li>dependencies - docker-dep</li><li>spring-boot-loader - ignored, main-class starts faster then JarLauncher</li><li>snapshot-dependencies - docker-app</li><li>application - docker-app</li></ul><p>This way, <code>docker-dep</code> compiles once and <code>docker-app</code> compiles every time with a small size.</p><h3 id="_2b-build-practices" tabindex="-1"><a class="header-anchor" href="#_2b-build-practices"><span>2b.Build Practices</span></a></h3><p>In order to build Docker, there are roughly three practices,</p><ul><li>docker.sh - Dockerfile based builds, more flexible</li><li>jib maven - OCI format, no Dockerfile, optional docker</li><li>buildpack maven - OCI format, no Dockerfile, requires docker</li></ul><h3 id="_2c-docker-sh-build" tabindex="-1"><a class="header-anchor" href="#_2c-docker-sh-build"><span>2c.docker.sh Build</span></a></h3><p>Use <code>wings-docker.sh</code>, keep springboot structure, start it with JarLauncher.</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">## spring repackage to fatjar</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">mvn</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> clean</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> package</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">## unzip fatjar and build docker-dep</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">wings-docker.sh</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> unzip</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> dep</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> target/winx-admin-3.2.110-SNAPSHOT.jar</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">wings-docker.sh</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> build</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> dep</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> target/winx-admin-3.2.110-SNAPSHOT.jar</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">## build docker-app from docker-dep</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">wings-docker.sh</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> unzip</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> app</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> target/winx-admin-3.2.110-SNAPSHOT.jar</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">wings-docker.sh</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> build</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> app</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> target/winx-admin-3.2.110-SNAPSHOT.jar</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">## build docker-all in one step</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">wings-docker.sh</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> build</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> all</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> target/winx-admin-3.2.110-SNAPSHOT.jar</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>After build, the layout of <code>/app/</code> in docker is as follows,</p><ul><li><code>BOOT-INF/{classes,lib,...}</code> - code and deps</li><li><code>META-INF/{services,spring.components,...}</code> - Conf and Prop</li><li><code>org</code> - Spring JarLauncher</li><li><code>{conf,data,logs}</code> - VOLUME</li></ul><p>The springboot repackage is optimized for libs, for example</p><ul><li>Remove <code>spring-boot-autoconfigure-processor.jar</code><ul><li>gen spring-autoconfigure-metadata.properties when compile</li></ul></li><li>Remove <code>spring-boot-configuration-processor.jar</code><ul><li>gen spring-configuration-metadata.json when compile</li></ul></li><li>Remove <code>spring-boot-starter-*.jar</code><ul><li>empty package as springboot convention</li></ul></li><li>Add <code>spring-boot-jarmode-layertools.jar</code><ul><li>to unpack by <code>java -Djarmode=layertools</code></li></ul></li></ul><h3 id="_2d-docker-start" tabindex="-1"><a class="header-anchor" href="#_2d-docker-start"><span>2d.docker Start</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">## bridge network</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">WINGS_DOCKER_NET</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">wings-app</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">## create directory and config</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">mkdir</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> {data,conf,logs}</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">cat</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;"> &gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> conf/application.properties</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;"> &lt;&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#ABB2BF;">&#39;EOF&#39;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">## mysql host</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">winx.database.host=host.docker.internal:51487</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">## boot admin host</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">spring.boot.admin.client.url=http://host.docker.internal:8093</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">## jdbc debug</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">logging.level.com.zaxxer.hikari.HikariConfig=DEBUG</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#ABB2BF;">EOF</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">## docker options</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">WINGS_DOCKER_OPTS</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">--network</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> $WINGS_DOCKER_NET</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> -e</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66;"> TZ</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">Asia/Shanghai</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> -v</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> ./data:/app/data</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> -v</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> ./conf:/app/conf</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> -v</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> ./logs:/app/logs</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> 8091:8080</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> network</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> create</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> --driver</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> bridge</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> $WINGS_DOCKER_NET</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">## run into docker</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -it</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> --rm</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> \${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">WINGS_DOCKER_OPTS</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">]} </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">--user</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> root</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> --entrypoint</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> /bin/bash</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> winx-admin:3.2.110-SNAPSHOT</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">## start springboot app</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -it</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> --rm</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> \${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">WINGS_DOCKER_OPTS</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">]} </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">winx-admin:3.2.110-SNAPSHOT</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The above script takes <code>winx-admin</code> as an example and changes <code>8091</code> to <code>8093</code> if <code>winx-devops</code>. After starting the admin and devops docker containers separately, the following URLs can be accessed to test</p><ul><li>admin swagger <a href="http://localhost:8091/swagger-ui/index.html" target="_blank" rel="noopener noreferrer">http://localhost:8091/swagger-ui/index.html</a></li><li>devops boot-admin <a href="http://localhost:8093/login" target="_blank" rel="noopener noreferrer">http://localhost:8093/login</a><ul><li>The user is <code>boot-admin-server</code></li><li>Password is <code>$DING_TALK_TOKEN</code>,</li><li>or <code>!!!YOU_MUST_USE_STRONG_PASSWORD_HERE!!!</code></li></ul></li></ul><h3 id="_2e-jib-build-oci" tabindex="-1"><a class="header-anchor" href="#_2e-jib-build-oci"><span>2e.Jib Build OCI</span></a></h3><p><a href="https://github.com/GoogleContainerTools/jib/tree/master/jib-maven-plugin#quickstart" target="_blank" rel="noopener noreferrer">Jib</a> require docker optional, build OCI format by default</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">## mvn compile the devops</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">mvn</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> clean</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> install</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">## use docker daemon</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">mvn</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -P</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;docker,docker-dep&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> jib:dockerBuild</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -Ddocker.to.prefix=fessional/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">mvn</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -P</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;docker,docker-app&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> jib:dockerBuild</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -Ddocker.to.prefix=fessional/</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -Ddocker.from.prefix=docker://fessional/</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">#mvn -P&#39;docker,docker-app&#39; jib:build -Ddocker.to.prefix=fessional/ -Ddocker.from.prefix=fessional/</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">## use docker registry</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">mvn</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -P</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;docker,docker-dep&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> jib:dockerBuild</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -Ddocker.to.prefix=docker.io/fessional/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">mvn</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -P</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;docker,docker-app&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> jib:dockerBuild</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -Ddocker.to.prefix=docker.io/fessional/</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -Ddocker.from.prefix=docker.io/fessional/</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">## build docker-all in one step</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">mvn</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -P</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;docker&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> jib:dockerBuild</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -Ddocker.to.prefix=fessional/</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Additionally, the two build methods differ in the following ways.</p><ul><li><code>jib:dockerBuild</code> - depends on Docker</li><li><code>jib:build</code> - no Docker required, pushes to docker hub by default.</li></ul><p>After build, the layout of <code>/app/</code> in docker is as follows,</p><ul><li><code>{classes,libs}</code> - code and deps</li><li><code>resources/META-INF/spring.components</code> - conf and prop</li><li><code>jib-classpath-file</code> - java classpath</li><li><code>jib-main-class-file</code> - java main</li><li><code>{conf,data,logs}</code> - VOLUME</li></ul><h3 id="_2f-jib-start" tabindex="-1"><a class="header-anchor" href="#_2f-jib-start"><span>2f.Jib Start</span></a></h3><p>Same as docker startup, but with <code>professional</code> prefix to diff.</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">## docker options</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">WINGS_DOCKER_OPTS</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">--network</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> $WINGS_DOCKER_NET</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> -e</span><span style="--shiki-light:#6F42C1;--shiki-dark:#D19A66;"> TZ</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">Asia/Shanghai</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> -v</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> ./data:/app/data</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> -v</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> ./conf:/app/conf</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> -v</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> ./logs:/app/logs</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> 8093:8080</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">## run into docker</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -it</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> --rm</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> \${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">WINGS_DOCKER_OPTS</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">]} </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">--user</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> root</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> --entrypoint</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> /bin/bash</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> fessional/winx-devops:3.2.110-SNAPSHOT</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">## start springboot app</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -it</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> --rm</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> \${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">WINGS_DOCKER_OPTS</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">]} </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">fessional/winx-devops:3.2.110-SNAPSHOT</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2g-buildpack-build" tabindex="-1"><a class="header-anchor" href="#_2g-buildpack-build"><span>2g.buildpack Build</span></a></h3><p>It is necessary to customize the following properties of the CNB according to the actual needs of the project.</p><ul><li><code>builder</code> - default paketobuildpacks/builder-jammy-base:latest</li><li><code>runImage</code> - default unspecified</li><li><code>env</code> - build environment</li><li><code>buildpacks</code> - recommended customization</li></ul><p>The default build does not split into <code>dep</code> and <code>app</code>. it is only used as an example.</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">## mvn compile the devops</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">mvn</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> clean</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> install</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">## use docker daemon</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">mvn</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -P</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> &#39;image-paketo&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> spring-boot:build-image</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>After build, the layout of <code>/workspace/</code> (hard-code, how to change?) is same as fatjar,</p><ul><li><code>BOOT-INF/{classes,lib,...}</code> - code and deps</li><li><code>META-INF/{services,spring.components,...}</code> - Conf and Prop</li><li><code>org</code> - Spring JarLauncher</li><li><code>{conf,data,logs}</code> - VOLUME</li></ul>`,50),t=[l];function h(r,d){return a(),s("div",null,t)}const o=i(n,[["render",h],["__file","9c4.docker-starter.html.vue"]]),c=JSON.parse('{"path":"/9-example/9c.server-manual/9c4.docker-starter.html","title":"9C4.Use Docker/Starter.sh","lang":"en-US","frontmatter":{"isOriginal":true,"icon":"fab fa-dev","category":["Practice","Docker","Operation"],"description":"9C4.Use Docker/Starter.sh Wings provides two ways to publish and start the app. script - shell-based publishing and management docker - docker-based publishing and management 9C...","GIT_REPO_HEAD":"2024-07-07 fbb1f4817448a18f6c9bd497c9b5837508d2198e","head":[["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://wings.fessional.pro/zh/9-example/9c.server-manual/9c4.docker-starter.html"}],["meta",{"property":"og:url","content":"https://wings.fessional.pro/9-example/9c.server-manual/9c4.docker-starter.html"}],["meta",{"property":"og:site_name","content":"WingsBoot Win Sprint"}],["meta",{"property":"og:title","content":"9C4.Use Docker/Starter.sh"}],["meta",{"property":"og:description","content":"9C4.Use Docker/Starter.sh Wings provides two ways to publish and start the app. script - shell-based publishing and management docker - docker-based publishing and management 9C..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-06-12T00:21:52.000Z"}],["meta",{"property":"article:author","content":"trydofor"}],["meta",{"property":"article:modified_time","content":"2024-06-12T00:21:52.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"9C4.Use Docker/Starter.sh\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-06-12T00:21:52.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"trydofor\\",\\"url\\":\\"https://www.trydofor.com\\"}]}"]]},"headers":[{"level":2,"title":"9C4.1.Script Way","slug":"_9c4-1-script-way","link":"#_9c4-1-script-way","children":[{"level":3,"title":"1a.release.sh","slug":"_1a-release-sh","link":"#_1a-release-sh","children":[]},{"level":3,"title":"1b.starter.sh","slug":"_1b-starter-sh","link":"#_1b-starter-sh","children":[]}]},{"level":2,"title":"9C4.2.Docker Way","slug":"_9c4-2-docker-way","link":"#_9c4-2-docker-way","children":[{"level":3,"title":"2a. Layered Build","slug":"_2a-layered-build","link":"#_2a-layered-build","children":[]},{"level":3,"title":"2b.Build Practices","slug":"_2b-build-practices","link":"#_2b-build-practices","children":[]},{"level":3,"title":"2c.docker.sh Build","slug":"_2c-docker-sh-build","link":"#_2c-docker-sh-build","children":[]},{"level":3,"title":"2d.docker Start","slug":"_2d-docker-start","link":"#_2d-docker-start","children":[]},{"level":3,"title":"2e.Jib Build OCI","slug":"_2e-jib-build-oci","link":"#_2e-jib-build-oci","children":[]},{"level":3,"title":"2f.Jib Start","slug":"_2f-jib-start","link":"#_2f-jib-start","children":[]},{"level":3,"title":"2g.buildpack Build","slug":"_2g-buildpack-build","link":"#_2g-buildpack-build","children":[]}]}],"git":{"createdTime":1709342386000,"updatedTime":1718151712000,"contributors":[{"name":"trydofor","email":"trydofor@gmail.com","commits":3}]},"readingTime":{"minutes":3.25,"words":975},"filePathRelative":"9-example/9c.server-manual/9c4.docker-starter.md","localizedDate":"March 2, 2024","autoDesc":true}');export{o as comp,c as data};
