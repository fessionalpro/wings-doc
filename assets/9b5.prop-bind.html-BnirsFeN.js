import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as i,o as a,e as o}from"./app-Bq2ogDBv.js";const t={},n=o(`<h1 id="_9b5-properties-binding" tabindex="-1"><a class="header-anchor" href="#_9b5-properties-binding"><span>9B5.Properties Binding</span></a></h1><p>Lists common property binding in ConfigurationProperties.</p><p>Refer to <a href="https://docs.spring.io/spring-boot/docs/3.0.3/reference/htmlsingle/#features.external-config.typesafe-configuration-properties" target="_blank" rel="noopener noreferrer">Type-safe Configuration Properties</a></p><h2 id="_9b5-1-pojo-javabean" tabindex="-1"><a class="header-anchor" href="#_9b5-1-pojo-javabean"><span>9B5.1.Pojo JavaBean</span></a></h2><ul><li>Basic type fields, or use wrapper classes if null is need</li><li>Empty constructors, and good getters/setters specification</li><li>Setters can be omitted for the following types, which are not immutable <ul><li>Map, new is recommended, emptyMap is available, null is not recommended</li><li>Collection, new is recommended, emptySet is available, null is not recommended</li><li>Array, new is recommended, null is not recommended</li><li>nested POJO, new is recommended, null is not recommended</li></ul></li><li>null is not recommended because wings advocate NotNull and the default value</li><li>@ConstructorBinding is not recommended</li></ul><h2 id="_9b5-2-config-3rd-class" tabindex="-1"><a class="header-anchor" href="#_9b5-2-config-3rd-class"><span>9B5.2.Config 3rd Class</span></a></h2><p>Classes that are not able or convenient to directly @ConfigurationProperties, with @Bean annotation.</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#D73A49;--shiki-dark:#E5C07B;">Bean</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#D73A49;--shiki-dark:#E5C07B;">ConfigurationProperties</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">prefix</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> &quot;another&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;"> AnotherComponent</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> anotherComponent</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">() {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">    return</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> AnotherComponent</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">()</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_9b5-3-property-key-style" tabindex="-1"><a class="header-anchor" href="#_9b5-3-property-key-style"><span>9B5.3.Property Key Style</span></a></h2><p>Although Spring supports lax matching, for example,</p><ul><li>kebab - my.main-project.person.first-name</li><li>camel - my.main-project.person.firstName</li><li>underscore - my.main-project.person.first_name</li><li>UPPER - MY_MAINPROJECT_PERSON_FIRSTNAME</li></ul><p>In Wings, it is recommended to use all lowercase kebab for the config in properties. But for environment variables use all-caps UPPER.</p><p>The rules for environment variables are: ① replace <code>.</code>, ② remove <code>-</code>, ③ all-caps</p><ul><li><code>spring.main.log-startup-info</code> - <code>SPRING_MAIN_LOGSTARTUPINFO</code></li><li><code>my.service[0].other</code> - <code>MY_SERVICE_0_OTHER</code></li></ul><h2 id="_9b5-4-map-key-style" tabindex="-1"><a class="header-anchor" href="#_9b5-4-map-key-style"><span>9B5.4.Map Key Style</span></a></h2><p>Bind property <code>my.map</code> to the <code>Map&lt;String,String&gt;</code>, with the following key naming,</p><ul><li><code>key1</code> - <code>my.map.key1=value1</code></li><li><code>/key2</code> - <code>my.map.[/key2]=value2</code></li><li><code>key3</code> - <code>my.map./key3=value3</code></li><li><code>a.b</code> - <code>my.map.a.b=value4</code></li></ul><p>Spring supports <code>scalar</code> values, including <code>enum</code>, <code>java.lang.*</code> (except for Object), and You can omit <code>[]</code>, eg. in the <code>a.b</code>, and <code>spring.mail.properties.mail.debug</code>.</p><p>But Wings recommends</p><ul><li>keys that are not easily confused can be used directly, otherwise it is recommended to use <code>[]</code></li><li>within the spring system, follow the spring style, eg. spring.mail</li></ul><h2 id="_9b5-5-merge-or-overwrite-prop" tabindex="-1"><a class="header-anchor" href="#_9b5-5-merge-or-overwrite-prop"><span>9B5.5.Merge or Overwrite Prop</span></a></h2><p>If properties come from multiple config files, collections are completely overwritten and key-value pairs are merged by key</p><ul><li>Array/List/Set - do not merge, completely overwrite the contents with appearance priority</li><li>Map/Pojo - merge, overwrite value by key with appearance priority</li></ul><h2 id="_9b5-6-duration-and-period" tabindex="-1"><a class="header-anchor" href="#_9b5-6-duration-and-period"><span>9B5.6.Duration and Period</span></a></h2><p>Spring can handle java.time.Duration and Period with <code>all lowercase</code> units</p><ul><li><p><code>@DurationUnit</code> milliseconds by default</p></li><li><p><code>us</code> - microseconds</p></li><li><p><code>ms</code> - milliseconds, <code>PT0.5S</code> equals <code>500ms</code></p></li><li><p><code>s</code> - seconds</p></li><li><p><code>m</code> - minutes</p></li><li><p><code>h</code> - hours</p></li><li><p><code>d</code> - days</p></li><li><p><code>@PeriodUnit</code> days by default</p></li><li><p><code>y</code> - years</p></li><li><p><code>m</code> - months</p></li><li><p><code>w</code> - weeks</p></li><li><p><code>d</code> - days</p></li></ul><h2 id="_9b5-7-datasize" tabindex="-1"><a class="header-anchor" href="#_9b5-7-datasize"><span>9B5.7.DataSize</span></a></h2><p>Units are <code>All Caps</code></p><ul><li><code>@DataSizeUnit</code> bytes by default</li><li>&#39;B&#39; - bytes</li><li>&#39;KB&#39; - kilobytes</li><li>&#39;MB&#39; - megabytes</li><li>&#39;GB&#39; - gigabytes</li><li>&#39;TB&#39; - terabytes</li></ul><h2 id="_9b5-8-differ-from-value" tabindex="-1"><a class="header-anchor" href="#_9b5-8-differ-from-value"><span>9B5.8.Differ from @Value</span></a></h2><ul><li>@ConfigurationProperties - Relaxed binding, no SpEL support</li><li>@Value - only <code>kebab</code> format can use Relaxed binding, support SpEL</li></ul><p>Important, @Value does not support type-safe complex type injection in prefix style, only single key and simple types.</p>`,32),r=[n];function s(l,p){return a(),i("div",null,r)}const h=e(t,[["render",s],["__file","9b5.prop-bind.html.vue"]]),m=JSON.parse('{"path":"/9-example/9b.spring-boot/9b5.prop-bind.html","title":"9B5.Properties Binding","lang":"en-US","frontmatter":{"isOriginal":true,"icon":"leaf","category":["Practice","Property"],"description":"9B5.Properties Binding Lists common property binding in ConfigurationProperties. Refer to Type-safe Configuration Properties 9B5.1.Pojo JavaBean Basic type fields, or use wrappe...","GIT_REPO_HEAD":"2024-08-01 05107706255cba83dc5ec76e359d3302df867736","head":[["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://wings.fessional.pro/zh/9-example/9b.spring-boot/9b5.prop-bind.html"}],["meta",{"property":"og:url","content":"https://wings.fessional.pro/9-example/9b.spring-boot/9b5.prop-bind.html"}],["meta",{"property":"og:site_name","content":"WingsBoot Win Sprint"}],["meta",{"property":"og:title","content":"9B5.Properties Binding"}],["meta",{"property":"og:description","content":"9B5.Properties Binding Lists common property binding in ConfigurationProperties. Refer to Type-safe Configuration Properties 9B5.1.Pojo JavaBean Basic type fields, or use wrappe..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-06-26T00:40:09.000Z"}],["meta",{"property":"article:author","content":"trydofor"}],["meta",{"property":"article:modified_time","content":"2023-06-26T00:40:09.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"9B5.Properties Binding\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-06-26T00:40:09.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"trydofor\\",\\"url\\":\\"https://www.trydofor.com\\"}]}"]]},"headers":[{"level":2,"title":"9B5.1.Pojo JavaBean","slug":"_9b5-1-pojo-javabean","link":"#_9b5-1-pojo-javabean","children":[]},{"level":2,"title":"9B5.2.Config 3rd Class","slug":"_9b5-2-config-3rd-class","link":"#_9b5-2-config-3rd-class","children":[]},{"level":2,"title":"9B5.3.Property Key Style","slug":"_9b5-3-property-key-style","link":"#_9b5-3-property-key-style","children":[]},{"level":2,"title":"9B5.4.Map Key Style","slug":"_9b5-4-map-key-style","link":"#_9b5-4-map-key-style","children":[]},{"level":2,"title":"9B5.5.Merge or Overwrite Prop","slug":"_9b5-5-merge-or-overwrite-prop","link":"#_9b5-5-merge-or-overwrite-prop","children":[]},{"level":2,"title":"9B5.6.Duration and Period","slug":"_9b5-6-duration-and-period","link":"#_9b5-6-duration-and-period","children":[]},{"level":2,"title":"9B5.7.DataSize","slug":"_9b5-7-datasize","link":"#_9b5-7-datasize","children":[]},{"level":2,"title":"9B5.8.Differ from @Value","slug":"_9b5-8-differ-from-value","link":"#_9b5-8-differ-from-value","children":[]}],"git":{"createdTime":1672804479000,"updatedTime":1687740009000,"contributors":[{"name":"trydofor","email":"trydofor@gmail.com","commits":4}]},"readingTime":{"minutes":1.43,"words":428},"filePathRelative":"9-example/9b.spring-boot/9b5.prop-bind.md","localizedDate":"January 4, 2023","autoDesc":true}');export{h as comp,m as data};
