import{_ as r}from"./faceless_icon-WJtzrDUE.js";import{_ as d}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as s,o as c,c as m,b as t,e,d as a,w as i,f as n}from"./app-C4PFB2tF.js";const p={},h=n('<h1 id="_2-faceless-void" tabindex="-1"><a class="header-anchor" href="#_2-faceless-void"><span>2.Faceless Void</span></a></h1><p><img src="'+r+'" alt="faceless_void"></p><blockquote><p><code>Void</code> interface <code>public static void main</code><br> a visitor from Claszureme, a realm outside of time.</p></blockquote><p>Data layer (MySql compatible system, such as H2) utility. Support for table and data versioning, strong typesafe sql mapping, rw-split and data sharding.</p><h2 id="_2-1-module-project" tabindex="-1"><a class="header-anchor" href="#_2-1-module-project"><span>2.1.Module Project</span></a></h2><ul><li>faceless - Data access utilty: locker, typesafe, enum and i18n</li><li>faceless-flywave - Schema and data versioning</li><li>faceless-jooq - Data access via Jooq</li><li>faceless-jooqggen - jooq code generator</li><li>faceless-shard - shardingsphere&#39;s rw-split, sharding</li><li>faceless-test - testing utilty and config</li></ul><h2 id="_2-2-distributed-id-lightid" tabindex="-1"><a class="header-anchor" href="#_2-2-distributed-id-lightid"><span>2.2.Distributed Id (LightId)</span></a></h2>',7),u=t("code",null,"snowflake",-1),f=t("code",null,"LightId",-1),g={href:"https://github.com/trydofor/professional-mirana",target:"_blank",rel:"noopener noreferrer"},_=n('<p>The default implementation of LightId is JDBC based. the autogen code by jooq implements <code>LightIdAware</code> and can be used to get LightId. See the implementation of <code>LightIdService</code> for details.</p><h2 id="_2-3-enum-and-i18n-in-database" tabindex="-1"><a class="header-anchor" href="#_2-3-enum-and-i18n-in-database"><span>2.3.Enum and I18n in Database</span></a></h2><p>Revision 2019_0521_01 defines the enum and i18n tables for business-level codes, such as status. use <code>ConstantEnumGenerate</code> to autogen java code to keep the Db and java enum consistent.</p><p><code>CombinableMessageSource</code> can dynamically handle the i18n messages within service.</p><h2 id="_2-3-more-sections" tabindex="-1"><a class="header-anchor" href="#_2-3-more-sections"><span>2.3.More Sections</span></a></h2>',5);function y(b,v){const l=s("ExternalLinkIcon"),o=s("RouteLink");return c(),m("div",null,[h,t("p",null,[e("Unlike other distributed Id solutions, eg. "),u,e(", "),f,e(" provides CRC8 pseudo-random encoding. See "),t("a",g,[e("pro.fessioinal.mirana"),a(l)]),e(" project.")]),_,t("ul",null,[t("li",null,[a(o,{to:"/2-faceless/2a-flywave.html"},{default:i(()=>[e("Table/Data Versioning")]),_:1}),e(" - Sql-based and Git-like schema and data version management")]),t("li",null,[a(o,{to:"/2-faceless/2b-jooq.html"},{default:i(()=>[e("Typesafe DSL SqlMapping")]),_:1}),e(" - Generate strongly typed codes from database: pojo, dao")]),t("li",null,[a(o,{to:"/2-faceless/2c-shard.html"},{default:i(()=>[e("Separation and Sharding")]),_:1}),e(" - Separation and Sharding to smoothly handle large data")]),t("li",null,[a(o,{to:"/2-faceless/2d-mysql-h2.html"},{default:i(()=>[e("Mysql/H2 Knowledge")]),_:1}),e(" - Knowledge of Mysql-compatible database")]),t("li",null,[a(o,{to:"/2-faceless/2e-qa-flywave.html"},{default:i(()=>[e("Flywave Faq Topic")]),_:1}),e(" - Flywave schema revision and data journal")]),t("li",null,[a(o,{to:"/2-faceless/2f-qa-jooq.html"},{default:i(()=>[e("Jooq Faq Topic")]),_:1}),e(" - Jooq topic")]),t("li",null,[a(o,{to:"/2-faceless/2g-qa-shard.html"},{default:i(()=>[e("Sharding Faq Topic")]),_:1}),e(" - Sharding topic")]),t("li",null,[a(o,{to:"/2-faceless/2h-time-zone.html"},{default:i(()=>[e("Datetime and Timezone")]),_:1}),e(" - Datetime and timezone in database")])])])}const k=d(p,[["render",y],["__file","index.html.vue"]]),D=JSON.parse('{"path":"/2-faceless/","title":"2.Faceless Void","lang":"en-US","frontmatter":{"isOriginal":true,"icon":"time","category":["Faceless","Home"],"description":"2.Faceless Void faceless_void Void interface public static void main a visitor from Claszureme, a realm outside of time. Data layer (MySql compatible system, such as H2) utility...","GIT_REPO_HEAD":"2024-05-04 5f8d5046d9ba71ea39889145bdfcb0cec1b14a03","head":[["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://wings.fessional.pro/zh/2-faceless/"}],["meta",{"property":"og:url","content":"https://wings.fessional.pro/2-faceless/"}],["meta",{"property":"og:site_name","content":"WingsBoot Win Sprint"}],["meta",{"property":"og:title","content":"2.Faceless Void"}],["meta",{"property":"og:description","content":"2.Faceless Void faceless_void Void interface public static void main a visitor from Claszureme, a realm outside of time. Data layer (MySql compatible system, such as H2) utility..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://wings.fessional.pro/faceless_icon.png"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-12-11T04:24:49.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"2.Faceless Void"}],["meta",{"property":"article:author","content":"trydofor"}],["meta",{"property":"article:modified_time","content":"2023-12-11T04:24:49.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"2.Faceless Void\\",\\"image\\":[\\"https://wings.fessional.pro/faceless_icon.png\\"],\\"dateModified\\":\\"2023-12-11T04:24:49.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"trydofor\\",\\"url\\":\\"https://www.trydofor.com\\"}]}"]]},"headers":[{"level":2,"title":"2.1.Module Project","slug":"_2-1-module-project","link":"#_2-1-module-project","children":[]},{"level":2,"title":"2.2.Distributed Id (LightId)","slug":"_2-2-distributed-id-lightid","link":"#_2-2-distributed-id-lightid","children":[]},{"level":2,"title":"2.3.Enum and I18n in Database","slug":"_2-3-enum-and-i18n-in-database","link":"#_2-3-enum-and-i18n-in-database","children":[]},{"level":2,"title":"2.3.More Sections","slug":"_2-3-more-sections","link":"#_2-3-more-sections","children":[]}],"git":{"createdTime":1680228107000,"updatedTime":1702268689000,"contributors":[{"name":"trydofor","email":"trydofor@gmail.com","commits":4}]},"readingTime":{"minutes":0.92,"words":276},"filePathRelative":"2-faceless/README.md","localizedDate":"March 31, 2023","autoDesc":true}');export{k as comp,D as data};
