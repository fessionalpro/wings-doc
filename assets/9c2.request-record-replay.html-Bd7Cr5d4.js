import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as i,o as e,e as a}from"./app-BcJ4NaN5.js";const n={},l=a(`<h1 id="_9c2-request-record-replay" tabindex="-1"><a class="header-anchor" href="#_9c2-request-record-replay"><span>9C2.Request Record/Replay</span></a></h1><p>In the product environment, there is a need to log and replay certain http requests. Simple and easy way is Nginx&#39;s mirror replication to GoReplay or wiremock.</p><p>The reference is as follows, this manual uses mirror WeChat requests to mocklab service and Gor local server as an example,</p><ul><li><a href="https://nginx.org/en/docs/http/ngx_http_mirror_module.html" target="_blank" rel="noopener noreferrer">Nginx/mirror</a></li><li><a href="https://wiremock.org/" target="_blank" rel="noopener noreferrer">wiremock/mocklab</a></li><li><a href="https://github.com/buger/goreplay/wiki" target="_blank" rel="noopener noreferrer">GoReplay/Gor</a></li></ul><h2 id="_9c2-1-mocklab-service" tabindex="-1"><a class="header-anchor" href="#_9c2-1-mocklab-service"><span>9C2.1.Mocklab Service</span></a></h2><p>Use github to apply for a free account and get the URLs and Tokens of the Mock APIs, such as The curl in Settings/Usage examples has the appropriate fields, with the following features</p><ul><li><a href="https://xxxx.mocklab.io/" target="_blank" rel="noopener noreferrer">https://xxxx.mocklab.io/</a></li><li>Token 14ef56fxxxx24fba5</li></ul><p>Finally, you can get all the requests in the Request Log and Convert to stub for testing purposes.</p><h2 id="_9c2-2-gor-local-server" tabindex="-1"><a class="header-anchor" href="#_9c2-2-gor-local-server"><span>9C2.2.Gor Local Server</span></a></h2><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">wget</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> https://github.com/buger/goreplay/releases/download/1.3.3/gor_1.3.3_x64.tar.gz</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">tar</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -xzf</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> gor_1.3.3_x64.tar.gz</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># Open and listen on 18081, if attaching to another service port, don&#39;t need http-pprof</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">tee</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> gor.sh</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;"> &lt;&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#ABB2BF;"> &quot;EOF&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">#!/bin/bash</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">gor_file=weixin-%Y%m%d.gor</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">cur_file=$(date +$gor_file)</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">test -f &quot;$cur_file&quot; &amp;&amp; mv $cur_file $cur_file.$(date +%H%M%S)</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">./gor --http-pprof :18081 \\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">--input-raw :18081 \\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">--output-file $gor_file \\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">--output-file-append</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#ABB2BF;">EOF</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">chmod</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> +x</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> gor.sh</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> nohup</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> ./gor.sh</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> &amp;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># test</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">curl</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> http://127.0.0.1:18081/debug/pprof/</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Note that gor 2.0 is still in the rc stage, and there are some issues in the 1.3 live test, such as when saving files <a href="https://github.com/buger/goreplay/blob/master/output_file.go" target="_blank" rel="noopener noreferrer">https://github.com/buger/goreplay/blob/master/output_file.go</a></p><ul><li>output-file-append is invalid, restarting gor will overwrite gor file, should backup if needed</li><li>output-file does not flush automatically, only buff full or close gor</li><li>output-stdout is recommended if you need to watch in real time</li></ul><h2 id="_9c2-3-nginx-mirror" tabindex="-1"><a class="header-anchor" href="#_9c2-3-nginx-mirror"><span>9C2.3.Nginx Mirror</span></a></h2><blockquote><p>The ngx_http_mirror_module module (1.13.4) implements mirroring of an original request by creating background mirror subrequests. Responses to mirror subrequests are ignored.</p></blockquote><div class="language-nginx line-numbers-mode" data-highlighter="shiki" data-ext="nginx" data-title="nginx" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">location</span><span style="--shiki-light:#6F42C1;--shiki-dark:#ABB2BF;"> /weixin/geteway.api </span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">    mirror </span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">/__mirror_mock;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">    mirror </span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">/__mirror_gor;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">    proxy_pass </span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">http://xxxx;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">location</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#E06C75;"> /__mirror_mock </span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">    internal</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">    resolver </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">8.8.8.8</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">    proxy_pass </span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">https://xxx.mocklab.io$</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">request_uri</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">    proxy_set_header </span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">Authorization </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;Token 14exxxxxxxba5&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">    proxy_set_header </span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">X-Real-IP $</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">remote_addr</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">    proxy_set_header </span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">X-Forwarded-Host $</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">host</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">location</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#E06C75;"> /__mirror_gor </span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">    internal</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">    proxy_pass </span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">http://127.0.0.1:18081$</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">request_uri</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">    proxy_set_header </span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">X-Real-IP $</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">remote_addr</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">    proxy_set_header </span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">X-Forwarded-Host $</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">host</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_9c2-4-usage-suggestion" tabindex="-1"><a class="header-anchor" href="#_9c2-4-usage-suggestion"><span>9C2.4.Usage Suggestion</span></a></h2><p>One of gor or mocklab is enough, depending on the situation, mocklab is recommended for dev environment, it is easy to generate test.</p><p>If mirror does not forward, you can check the nginx error log, and the <code>resolver 8.8.8.8</code> in the above example solves the following problem.</p><p>no resolver defined to resolve xxx.mocklab.io, request: &quot;POST ...&quot;</p>`,19),t=[l];function r(p,h){return e(),i("div",null,t)}const k=s(n,[["render",r],["__file","9c2.request-record-replay.html.vue"]]),c=JSON.parse(`{"path":"/9-example/9c.server-manual/9c2.request-record-replay.html","title":"9C2.Request Record/Replay","lang":"en-US","frontmatter":{"isOriginal":true,"icon":"fab fa-dev","category":["Practice","Testing"],"description":"9C2.Request Record/Replay In the product environment, there is a need to log and replay certain http requests. Simple and easy way is Nginx's mirror replication to GoReplay or w...","GIT_REPO_HEAD":"2024-07-07 fbb1f4817448a18f6c9bd497c9b5837508d2198e","head":[["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://wings.fessional.pro/zh/9-example/9c.server-manual/9c2.request-record-replay.html"}],["meta",{"property":"og:url","content":"https://wings.fessional.pro/9-example/9c.server-manual/9c2.request-record-replay.html"}],["meta",{"property":"og:site_name","content":"WingsBoot Win Sprint"}],["meta",{"property":"og:title","content":"9C2.Request Record/Replay"}],["meta",{"property":"og:description","content":"9C2.Request Record/Replay In the product environment, there is a need to log and replay certain http requests. Simple and easy way is Nginx's mirror replication to GoReplay or w..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-06-12T00:21:52.000Z"}],["meta",{"property":"article:author","content":"trydofor"}],["meta",{"property":"article:modified_time","content":"2024-06-12T00:21:52.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"9C2.Request Record/Replay\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-06-12T00:21:52.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"trydofor\\",\\"url\\":\\"https://www.trydofor.com\\"}]}"]]},"headers":[{"level":2,"title":"9C2.1.Mocklab Service","slug":"_9c2-1-mocklab-service","link":"#_9c2-1-mocklab-service","children":[]},{"level":2,"title":"9C2.2.Gor Local Server","slug":"_9c2-2-gor-local-server","link":"#_9c2-2-gor-local-server","children":[]},{"level":2,"title":"9C2.3.Nginx Mirror","slug":"_9c2-3-nginx-mirror","link":"#_9c2-3-nginx-mirror","children":[]},{"level":2,"title":"9C2.4.Usage Suggestion","slug":"_9c2-4-usage-suggestion","link":"#_9c2-4-usage-suggestion","children":[]}],"git":{"createdTime":1656137116000,"updatedTime":1718151712000,"contributors":[{"name":"trydofor","email":"trydofor@gmail.com","commits":4}]},"readingTime":{"minutes":1.32,"words":397},"filePathRelative":"9-example/9c.server-manual/9c2.request-record-replay.md","localizedDate":"June 25, 2022","autoDesc":true}`);export{k as comp,c as data};
