import{_ as c}from"./plugin-vue_export-helper.21dcd24c.js";import{r as o,o as l,c as i,a as n,b as a,w as u,e as s,d as e}from"./app.1f74dd6f.js";const r={},d=n("h1",{id:"_2f-jooq\u4F7F\u7528\u8BDD\u9898",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_2f-jooq\u4F7F\u7528\u8BDD\u9898","aria-hidden":"true"},"#"),s(" 2F.Jooq\u4F7F\u7528\u8BDD\u9898")],-1),k=n("p",null,"Jooq\u6709\u5173\u7684\u8BDD\u9898",-1),m=n("h2",{id:"_2f-01-jooq\u6267\u884Cplain-sql",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_2f-01-jooq\u6267\u884Cplain-sql","aria-hidden":"true"},"#"),s(" 2F.01.jooq\u6267\u884Cplain sql")],-1),h=n("p",null,"\u5728\u6267\u884Cplain sql\u65F6\uFF0C\u53EF\u4EE5\u4F7F\u7528jdbcTemplate\u6216jooq\uFF0Cjooq\u7684\u597D\u5904\u662F\uFF0C\u4F1A\u8FDB\u884Cparse\uFF08\u6027\u80FD\uFF09\uFF0C\u8FDB\u884C\u517C\u5BB9\u6027\u8C03\u6574\uFF08\u5982\u679C\u9700\u8981\uFF09\uFF0C \u6240\u4EE5\uFF0C\u5728\u8FD0\u884C\u65F6\uFF0C\u4E0D\u8003\u8651\u517C\u5BB9\u6027\uFF0C\u63A8\u8350\u7528 jdbcTemplate\uFF0C\u5728\u9700\u8981\u8BED\u6CD5\u5206\u6790\u6216\u5408\u5E76\u7B49\u573A\u666F\uFF0C\u4F7F\u7528jooq\u3002",-1),g={href:"https://www.jooq.org/doc/3.12/manual/sql-building/plain-sql/",target:"_blank",rel:"noopener noreferrer"},v=s("https://www.jooq.org/doc/3.12/manual/sql-building/plain-sql/"),b={href:"https://www.jooq.org/doc/3.12/manual/sql-building/plain-sql-templating/",target:"_blank",rel:"noopener noreferrer"},f=s("https://www.jooq.org/doc/3.12/manual/sql-building/plain-sql-templating/"),_={href:"https://www.jooq.org/doc/3.12/manual/sql-building/queryparts/plain-sql-queryparts/",target:"_blank",rel:"noopener noreferrer"},q=s("https://www.jooq.org/doc/3.12/manual/sql-building/queryparts/plain-sql-queryparts/"),w={href:"https://www.jooq.org/doc/3.12/manual/sql-building/bind-values/",target:"_blank",rel:"noopener noreferrer"},O=s("https://www.jooq.org/doc/3.12/manual/sql-building/bind-values/"),y={href:"https://www.jooq.org/doc/3.12/manual/sql-building/sql-parser/sql-parser-grammar/",target:"_blank",rel:"noopener noreferrer"},j=s("https://www.jooq.org/doc/3.12/manual/sql-building/sql-parser/sql-parser-grammar/"),S={href:"https://blog.jooq.org/2020/03/05/using-java-13-text-blocks-for-plain-sql-with-jooq/",target:"_blank",rel:"noopener noreferrer"},T=s("https://blog.jooq.org/2020/03/05/using-java-13-text-blocks-for-plain-sql-with-jooq/"),B={href:"https://docs.oracle.com/cd/E13157_01/wlevs/docs30/jdbc_drivers/sqlescape.html",target:"_blank",rel:"noopener noreferrer"},L=s("https://docs.oracle.com/cd/E13157_01/wlevs/docs30/jdbc_drivers/sqlescape.html"),I=e(`<div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">SelectPlain</span> <span class="token punctuation">{</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token comment">// \u5176\u4E2D\u7684 {0}\u662F\uFF0C0-base\u7684\uFF0C\u76F4\u63A5\u5B57\u7B26\u4E32\u66FF\u6362\u7684\u3002\u4F7F\u7528\u4E0D\u5F53\u4F1A\u6784\u6210sql\u6CE8\u5165</span>
<span class="token class-name">Field</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> count <span class="token operator">=</span> <span class="token function">val</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Field</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> string <span class="token operator">=</span> <span class="token function">val</span><span class="token punctuation">(</span><span class="token string">&quot;abc&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">field</span><span class="token punctuation">(</span><span class="token string">&quot;replace(substr(quote(zeroblob(({0} + 1) / 2)), 3, {0}), &#39;0&#39;, {1})&quot;</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> count<span class="token punctuation">,</span> string<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//                                     ^                  ^          ^                   ^^^^^  ^^^^^^</span>
<span class="token comment">//                                     |                  |          |                     |       |</span>
<span class="token comment">// argument &quot;count&quot; is repeated twice: \\------------------+----------|---------------------/       |</span>
<span class="token comment">// argument &quot;string&quot; is used only once:                              \\-----------------------------/</span>

<span class="token comment">// Plain SQL using bind values. The value 5 is bound to the first variable, &quot;Animal Farm&quot; to the second variable:</span>
create<span class="token punctuation">.</span><span class="token function">selectFrom</span><span class="token punctuation">(</span>BOOK<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span>
    <span class="token string">&quot;BOOK.ID = ? AND TITLE = ?&quot;</span><span class="token punctuation">,</span>     <span class="token comment">// The SQL string containing bind value placeholders (&quot;?&quot;) </span>
    <span class="token number">5</span><span class="token punctuation">,</span>                               <span class="token comment">// The bind value at index 1</span>
    <span class="token string">&quot;Animal Farm&quot;</span>                    <span class="token comment">// The bind value at index 2</span>
<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fetch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Plain SQL using embeddable QueryPart placeholders (counting from zero).</span>
<span class="token comment">// The QueryPart &quot;index&quot; is substituted for the placeholder {0}, the QueryPart &quot;title&quot; for {1}</span>
<span class="token class-name">Field</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> id   <span class="token operator">=</span> <span class="token function">val</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Field</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> title <span class="token operator">=</span> <span class="token function">val</span><span class="token punctuation">(</span><span class="token string">&quot;Animal Farm&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
create<span class="token punctuation">.</span><span class="token function">selectFrom</span><span class="token punctuation">(</span>BOOK<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span>
    <span class="token string">&quot;BOOK.ID = {0} AND TITLE = {1}&quot;</span><span class="token punctuation">,</span> <span class="token comment">// The SQL string containing QueryPart placeholders (&quot;{N}&quot;)</span>
    id<span class="token punctuation">,</span>                              <span class="token comment">// The QueryPart at index 0</span>
    title                            <span class="token comment">// The QueryPart at index 1</span>
<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fetch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u6A21\u677F\u4E2D\u652F\u6301\uFF0Cjava\u548Csql\u6CE8\u91CA\uFF0Cplaceholder\u548Cvariable-binding</span>
<span class="token function">query</span><span class="token punctuation">(</span>
  <span class="token string">&quot;SELECT /* In a comment, this is not a placeholder: {0}. And this is not a bind variable: ? */ title AS \`title {1} ?\` &quot;</span> <span class="token operator">+</span>
  <span class="token string">&quot;-- Another comment without placeholders: {2} nor bind variables: ?&quot;</span> <span class="token operator">+</span>
  <span class="token string">&quot;FROM book &quot;</span> <span class="token operator">+</span>
  <span class="token string">&quot;WHERE title = &#39;In a string literal, this is not a placeholder: {3}. And this is not a bind variable: ?&#39;&quot;</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Plain SQL templating specification Templating with QueryPart placeholders (or bind value placeholders) requires a simple parsing logic to be applied to SQL strings. The jOOQ template parser behaves according to the following rules:</p><ul><li><p>Single-line comments (starting with <code>--</code> in all databases (or #) in MySQL) are rendered without modification. Any bind variable or QueryPart placeholders in such comments are ignored.</p></li><li><p>Multi-line comments (starting with <code>/*</code> and ending with <code>*/</code> in all databases) are rendered without modification. Any bind variable or QueryPart placeholders in such comments are ignored.</p></li><li><p>String literals (starting and ending with <code>&#39;</code> in all databases, where all databases support escaping of the quote character by duplication as such: <code>&#39;&#39;</code>, or in MySQL by escaping as such: <code>\\&#39;</code> (if Settings.backslashEscaping is turned on)) are rendered without modification. Any bind variable or QueryPart placeholders in such comments are ignored.</p></li><li><p>Quoted names (starting and ending with <code>&quot;</code> in most databases, with \` in MySQL, or with <code>[</code> and <code>]</code> in T-SQL databases) are rendered without modification. Any bind variable or QueryPart placeholders in such comments are ignored.</p></li><li><p>JDBC escape syntax (<code>{fn ...}</code>, <code>{d ...}</code>, <code>{t ...}</code>, <code>{ts ...}</code>) is rendered without modification. Any bind variable or QueryPart placeholders in such comments are ignored.</p></li><li><p>Bind variable placeholders (? or :name for named bind variables) are replaced by the matching bind value in case inlining is activated, e.g. through Settings.statementType == STATIC_STATEMENT.</p></li><li><p>QueryPart placeholders (<code>{number}</code>) are replaced by the matching QueryPart.</p></li><li><p>Keywords (<code>{identifier}</code>) are treated like keywords and rendered in the correct case according to Settings.renderKeywordStyle.</p></li></ul><h2 id="_2f-02-\u5982\u4F55\u7981\u7528jooq\u529F\u80FD" tabindex="-1"><a class="header-anchor" href="#_2f-02-\u5982\u4F55\u7981\u7528jooq\u529F\u80FD" aria-hidden="true">#</a> 2F.02.\u5982\u4F55\u7981\u7528Jooq\u529F\u80FD</h2><p>\u7981\u7528jooq\u6CA1\u6709\u4EFB\u4F55\u5F71\u54CD\uFF0C\u4E0D\u5F71\u54CDflywave\uFF0Clightid\uFF0Cenum, i18n\u7684\u4F7F\u7528\u3002</p><p>\u8FD0\u884C\u65F6\u7981\u7528\uFF0C\u8BBE\u7F6Espring.wings \u5F00\u5173\uFF0C<code>spring.wings.faceless.jooq.enabled.module=false</code> \u4F46\u5982\u679C\u6709jooq\u81EA\u52A8\u751F\u6210\u7684\u4EE3\u7801\uFF0C\u662F\u5E26\u6709<code>@Repository</code>\uFF0C\u9700\u8981\u7981\u6B62spring\u6CE8\u5165\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@ComponentScan</span><span class="token punctuation">(</span>excludeFilters <span class="token operator">=</span> 
<span class="token annotation punctuation">@Filter</span><span class="token punctuation">(</span>type <span class="token operator">=</span> <span class="token class-name">FilterType</span><span class="token punctuation">.</span>ASSIGNABLE_TYPE<span class="token punctuation">,</span> classes <span class="token operator">=</span> <span class="token class-name">WingsJooqDaoImpl</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2f-03-\u5E38\u89C1\u7684jooq\u67E5\u8BE2\u64CD\u4F5C" tabindex="-1"><a class="header-anchor" href="#_2f-03-\u5E38\u89C1\u7684jooq\u67E5\u8BE2\u64CD\u4F5C" aria-hidden="true">#</a> 2F.03.\u5E38\u89C1\u7684jooq\u67E5\u8BE2\u64CD\u4F5C</h2>`,8),Q=s("\u66F4\u591A\u4FE1\u606F\uFF0C\u53C2\u8003"),x=n("code",null,"\u5B98\u65B9\u6587\u6863",-1),F=s("\u548Csample\u4EE3\u7801"),K=n("code",null,"pro.fessional.wings.faceless.sample",-1),D={href:"https://www.jooq.org/doc/latest/manual/sql-execution/fetching/",target:"_blank",rel:"noopener noreferrer"},E=s("https://www.jooq.org/doc/latest/manual/sql-execution/fetching/"),A=s("\u5728wings\u4E2D\uFF0C"),M=s("\u63A8\u8350"),P=s("\u4F7F\u7528Dao\u505A\u5404\u79CD\u67E5\u8BE2\uFF0C\u907F\u514D\u4F7F\u7528\u9759\u6001\u8868\u6216\u6CE8\u5165DSL\u3002"),C=e(`<div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">SelectFetch</span> <span class="token punctuation">{</span>
<span class="token comment">// Fetching only book titles (the two calls are equivalent):</span>
<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> titles1 <span class="token operator">=</span> create<span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>BOOK<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fetch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getValues</span><span class="token punctuation">(</span>BOOK<span class="token punctuation">.</span>TITLE<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> titles2 <span class="token operator">=</span> create<span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>BOOK<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fetch</span><span class="token punctuation">(</span>BOOK<span class="token punctuation">.</span>TITLE<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span>     titles3 <span class="token operator">=</span> create<span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>BOOK<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fetchArray</span><span class="token punctuation">(</span>BOOK<span class="token punctuation">.</span>TITLE<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Fetching only book IDs, converted to Long</span>
<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">&gt;</span></span> ids1 <span class="token operator">=</span> create<span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>BOOK<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fetch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getValues</span><span class="token punctuation">(</span>BOOK<span class="token punctuation">.</span>ID<span class="token punctuation">,</span> <span class="token class-name">Long</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">&gt;</span></span> ids2 <span class="token operator">=</span> create<span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>BOOK<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fetch</span><span class="token punctuation">(</span>BOOK<span class="token punctuation">.</span>ID<span class="token punctuation">,</span> <span class="token class-name">Long</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Long</span><span class="token punctuation">[</span><span class="token punctuation">]</span>     ids3 <span class="token operator">=</span> create<span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>BOOK<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fetchArray</span><span class="token punctuation">(</span>BOOK<span class="token punctuation">.</span>ID<span class="token punctuation">,</span> <span class="token class-name">Long</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Fetching book IDs and mapping each ID to their records or titles</span>
<span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">BookRecord</span><span class="token punctuation">&gt;</span></span> map1 <span class="token operator">=</span> create<span class="token punctuation">.</span><span class="token function">selectFrom</span><span class="token punctuation">(</span>BOOK<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fetch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">intoMap</span><span class="token punctuation">(</span>BOOK<span class="token punctuation">.</span>ID<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">BookRecord</span><span class="token punctuation">&gt;</span></span> map2 <span class="token operator">=</span> create<span class="token punctuation">.</span><span class="token function">selectFrom</span><span class="token punctuation">(</span>BOOK<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fetchMap</span><span class="token punctuation">(</span>BOOK<span class="token punctuation">.</span>ID<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span>     map3 <span class="token operator">=</span> create<span class="token punctuation">.</span><span class="token function">selectFrom</span><span class="token punctuation">(</span>BOOK<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fetch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">intoMap</span><span class="token punctuation">(</span>BOOK<span class="token punctuation">.</span>ID<span class="token punctuation">,</span> BOOK<span class="token punctuation">.</span>TITLE<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span>     map4 <span class="token operator">=</span> create<span class="token punctuation">.</span><span class="token function">selectFrom</span><span class="token punctuation">(</span>BOOK<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fetchMap</span><span class="token punctuation">(</span>BOOK<span class="token punctuation">.</span>ID<span class="token punctuation">,</span> BOOK<span class="token punctuation">.</span>TITLE<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Group by AUTHOR_ID and list all books written by any author:</span>
<span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">Result</span><span class="token punctuation">&lt;</span><span class="token class-name">BookRecord</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> group1 <span class="token operator">=</span> create<span class="token punctuation">.</span><span class="token function">selectFrom</span><span class="token punctuation">(</span>BOOK<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fetch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">intoGroups</span><span class="token punctuation">(</span>BOOK<span class="token punctuation">.</span>AUTHOR_ID<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">Result</span><span class="token punctuation">&lt;</span><span class="token class-name">BookRecord</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> group2 <span class="token operator">=</span> create<span class="token punctuation">.</span><span class="token function">selectFrom</span><span class="token punctuation">(</span>BOOK<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fetchGroups</span><span class="token punctuation">(</span>BOOK<span class="token punctuation">.</span>AUTHOR_ID<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span>       group3 <span class="token operator">=</span> create<span class="token punctuation">.</span><span class="token function">selectFrom</span><span class="token punctuation">(</span>BOOK<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fetch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">intoGroups</span><span class="token punctuation">(</span>BOOK<span class="token punctuation">.</span>AUTHOR_ID<span class="token punctuation">,</span> BOOK<span class="token punctuation">.</span>TITLE<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span>       group4 <span class="token operator">=</span> create<span class="token punctuation">.</span><span class="token function">selectFrom</span><span class="token punctuation">(</span>BOOK<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fetchGroups</span><span class="token punctuation">(</span>BOOK<span class="token punctuation">.</span>AUTHOR_ID<span class="token punctuation">,</span> BOOK<span class="token punctuation">.</span>TITLE<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2f-04-\u5206\u9875\u67E5\u8BE2jooq" tabindex="-1"><a class="header-anchor" href="#_2f-04-\u5206\u9875\u67E5\u8BE2jooq" aria-hidden="true">#</a> 2F.04.\u5206\u9875\u67E5\u8BE2jooq</h2><p>\u5206\u9875\u67E5\u8BE2\u4E2D\uFF0Ccount\u7ED3\u679C\u6839\u636E\u9700\u8981\uFF0C\u53EF\u4EE5\u8FDB\u884C\u7F13\u5B58\uFF0C\u6216\u4E1A\u52A1\u4FA7\u4E0D\u8981\u6C42\u5FC5\u987B\u7CBE\u786E\uFF0C\u8FD9\u6837\u53EF\u4EE5\u907F\u514D\u6BCF\u6B21\u6267\u884C\u3002 \u901A\u8FC7WingsPageHelper\u5DE5\u5177\u7C7B\uFF0C\u53EF\u4EE5\u6784\u90202\u7C7B\u5206\u9875\u67E5\u8BE2\uFF0Ccount+select \u548C wrap select\uFF0C\u53C2\u8003</p>`,3),N=n("li",null,"JooqMostSelectSample #test6PageJooq, #test7PageJdbc",-1),R={href:"https://blog.jooq.org/2019/09/19/whats-faster-count-or-count1/",target:"_blank",rel:"noopener noreferrer"},J=s("count(*)\u548Ccount(1)\u8C01\u5FEB"),H=e('<p>\u5728SpringMvc\u7684<code>@RequestMapping</code>\u4E2D\u6784\u5EFA<code>PageQuery</code>\uFF0C\u53EF\u4EE5\u628A<code>@ModelAttribute</code>\u653E\u5728\u53C2\u6570\u4E0A\uFF0C</p><ul><li>pageNumber\uFF0C\u5927\u4E8E\u7B49\u4E8E1\u7684\u6574\u6570</li><li>pageSize\uFF0C\u5927\u4E8E\u7B49\u4E8E1\u7684\u6574\u6570</li><li>sortBy\uFF0C\u5B57\u7B26\u4E32</li></ul><p>\u53C2\u8003Spring\u7684<code>Pageable</code>\u548CSQL\u7684 order by\uFF0C\u4EE5\u4E0B\u53C2\u6570\u662F\u6548\u679C\u76F8\u540C\u7684</p><ul><li>PageQuery - pageSize=100&amp;pageNumber=3&amp;sortBy=id,-name</li><li>Pageable - size=100&amp;page=3&amp;sort=id,asc&amp;sort=name,desc</li><li>SQL - order by id asc, name desc</li></ul><h2 id="_2f-05-\u5982\u4F55\u8F6C\u6362sql\u8BED\u6CD5" tabindex="-1"><a class="header-anchor" href="#_2f-05-\u5982\u4F55\u8F6C\u6362sql\u8BED\u6CD5" aria-hidden="true">#</a> 2F.05.\u5982\u4F55\u8F6C\u6362sql\u8BED\u6CD5</h2>',5),G=s("sql\u5230sql\uFF0C\u4E0D\u540C\u8BED\u6CD5\u95F4\u8F6C\u6362\uFF0C"),U={href:"https://www.jooq.org/translate/",target:"_blank",rel:"noopener noreferrer"},V=s("https://www.jooq.org/translate/"),z=s(" (\u9700\u8981\u7FFB\u5899)"),Y=n("li",null,"sql\u5230jooq\uFF0C\u53EF\u4EE5\u4F7F\u7528any2dto\u63D2\u4EF6\uFF0C\u505A\u4E86\u7B80\u5355\u7684select\u8BED\u6CD5\u6620\u5C04\u3002",-1),W=n("li",null,"jooq\u5230sql\uFF0C\u8C03\u7528toSql\u65B9\u6CD5\uFF0C\u6216\u5F00\u542Fdebug\uFF0C\u5728\u65E5\u5FD7\u4E2D\u67E5\u770B\u3002",-1),X=n("h2",{id:"_2f-06-tinyint\u6620\u5C04boolean-byte-integer",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_2f-06-tinyint\u6620\u5C04boolean-byte-integer","aria-hidden":"true"},"#"),s(" 2F.06.TINYINT\u6620\u5C04Boolean,Byte,Integer")],-1),Z=n("li",null,"\u5728mysql\u4E2DTINYINT\u662F1byte\u7A7A\u95F4\uFF0C\u8303\u56F4\u662F-128\u5230127\uFF0C\u5728jooq\u4E2D\uFF0C\u9ED8\u8BA4\u6620\u5C04\u4E3AByte\u7C7B\u578B\u3002",-1),$=s("\u5728"),nn={href:"https://dev.mysql.com/doc/connector-j/8.0/en/connector-j-reference-type-conversions.html",target:"_blank",rel:"noopener noreferrer"},sn=s("jdbc\u6587\u6863"),an=s(" \u4E2D\u5176\u7C7B\u578B\u662FBoolean\uFF0CInteger"),tn=n("li",null,"\u800C\u5728jooq-codegen-faceless.xml\u4E2D\uFF0CTINYINT(1)\u4E3ABoolean\uFF0C\u5176\u4ED6\u4E3AInteger",-1),en=e(`<p>\u82E5\u8981\u8C03\u6574\uFF0C\u53EF\u4EE5WingsCodeGenerator.forcedType()</p><h2 id="_2f-07-\u679A\u4E3E\u7C7B\u7684\u6620\u5C04" tabindex="-1"><a class="header-anchor" href="#_2f-07-\u679A\u4E3E\u7C7B\u7684\u6620\u5C04" aria-hidden="true">#</a> 2F.07.\u679A\u4E3E\u7C7B\u7684\u6620\u5C04</h2><p>\u5728wings\u5B9E\u8DF5\u4E2D\uFF0C\u4EE5\u5F3A\u7C7B\u578B\u4E3A\u57FA\u7840\uFF0C\u56E0\u6B64\u6570\u636E\u5E93\u4E2D\u7684\u7C7B\u522B\u7C7B\u578B\uFF0C\u901A\u5E38\u5728service\u5C42\u4F7F\u7528enum\u7C7B\u3002 \u5728jooq\u4E2D\uFF0C\u53EF\u4EE5\u901A\u8FC7forcedType\uFF0C\u4F7F\u7528converter\u81EA\u52A8\u6620\u5C04\u7C7B\u578B\uFF0C\u5728MapStruct\u4E2D\u4E5F\u53EF\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// \u6BCF\u4E2A\u8868\uFF0C\u6BCF\u4E2A\u5B57\u6BB5\u6620\u5C04\uFF0C\u53D8\u66F4\u6570\u636E\u7C7B\u578B</span>
<span class="token punctuation">.</span><span class="token function">forcedType</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ForcedType</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">withUserType</span><span class="token punctuation">(</span><span class="token string">&quot;pro.fessional.wings.faceless.enums.autogen.StandardLanguage&quot;</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">withConverter</span><span class="token punctuation">(</span><span class="token string">&quot;pro.fessional.wings.faceless.database.jooq.StandardLanguageConverter&quot;</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">withExpression</span><span class="token punctuation">(</span><span class="token string">&quot;tst_\u4E2D\u6587\u4E5F\u5206\u8868.language&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F46\u5BF9\u4E8E\u67D0\u4E9B\u60C5\u51B5\uFF0C\u5E76\u4E0D\u80FD\u5728code generate\u65F6\u505A\u7C7B\u578B\u8F6C\u6362\uFF0C\u5168\u5C40\u6216\u5C40\u90E8\u7684ConverterProvider\u3002 \u53EF\u4EE5\u4F7F\u7528wings\u7684\u914D\u7F6E\u7EA6\u5B9A\uFF0C\u58F0\u660EConverterProvider\u6216Converter\u7684bean\uFF0C\u5373\u53EF\u5B8C\u6210\u5168\u5C40\u6CE8\u5165\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// \u5355select\uFF0C\u5C40\u90E8\u7C7B\u578B\u8F6C\u6362</span>
<span class="token class-name">DataType</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">StandardLanguage</span><span class="token punctuation">&gt;</span></span> lang <span class="token operator">=</span> <span class="token class-name">SQLDataType</span><span class="token punctuation">.</span>INTEGER<span class="token punctuation">.</span><span class="token function">asConvertedDataType</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">StandardLanguageConverter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
dao<span class="token punctuation">.</span><span class="token function">ctx</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
   <span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">t<span class="token punctuation">.</span></span>Id</span><span class="token punctuation">,</span> DSL<span class="token punctuation">.</span><span class="token function">field</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">t<span class="token punctuation">.</span></span>Language</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> lang<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Mapper</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">Record22EnumDto</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Named</span><span class="token punctuation">(</span><span class="token string">&quot;languageConverter&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">static</span> <span class="token class-name">StandardLanguage</span> <span class="token function">int2Enum</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> id<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">ConstantEnumUtil</span><span class="token punctuation">.</span><span class="token function">idOrNull</span><span class="token punctuation">(</span>id<span class="token punctuation">,</span> <span class="token class-name">StandardLanguage</span><span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7),on={href:"https://blog.jooq.org/tag/converter/",target:"_blank",rel:"noopener noreferrer"},pn=s("https://blog.jooq.org/tag/converter/"),cn=n("h2",{id:"_2f-08-h2database\u7684\u517C\u5BB9\u6027",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_2f-08-h2database\u7684\u517C\u5BB9\u6027","aria-hidden":"true"},"#"),s(" 2F.08.H2Database\u7684\u517C\u5BB9\u6027")],-1),ln=n("ul",null,[n("li",null,"\u624B\u52A8\u6307\u5B9A spring.jooq.sql-dialect=mysql"),n("li",null,"\u6570\u636E\u5E93\u6307\u5B9A jdbc:h2:~/studies;MODE=MySQL")],-1),un=n("h2",{id:"_2f-09-oss\u7248jooq\u7684\u6388\u6743\u548C\u6CE8\u610F\u70B9",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_2f-09-oss\u7248jooq\u7684\u6388\u6743\u548C\u6CE8\u610F\u70B9","aria-hidden":"true"},"#"),s(" 2F.09.OSS\u7248Jooq\u7684\u6388\u6743\u548C\u6CE8\u610F\u70B9")],-1),rn=s("Jooq\u6709"),dn={href:"https://www.jooq.org/download/",target:"_blank",rel:"noopener noreferrer"},kn=s("\u5F00\u6E90\u7248\u548C\u5546\u4E1A\u7248"),mn=s("\uFF0C\u4E24\u8005\u7684\u533A\u522B\u5728\u4E8E\u529F\u80FD\u591A\u5BE1\u548C\u5F3A\u5F31\u4E0A\u3002 \u5982 Lukas Eder \u2013 Founder and CEO \u5728\u90AE\u4EF6\u4E2D\u56DE\u590D\u5230\uFF0C"),hn=n("blockquote",null,[n("p",null,"You can use the jOOQ Open Source Edition for anything you like, including for MySQL 5.7. There are no legal limitations to such usage, as it is all ASL 2.0 licensed. However, unlike the jOOQ Professional Edition, we do not integration test that edition with MySQL 5.7, so there are likely limitations that you will run into.")],-1),gn=n("p",null,[s("\u4EE5MySql\u4E3A\u4F8B\uFF0COSS\u7248\u4EC5\u63D0\u4F9B\u4E86\u6700\u65B0\u7248(8.0)\u7684Dialect\uFF0C\u800C\u5546\u4E1A\u7248\u63D0\u4F9B\u4E865.6, 5.7, 8.0\u4E09\u4E2A\u7248\u672C\u3002 \u800C8.0\u7684Dialect\u5BF9\u4E8E5.7\u5B58\u5728\u4E00\u5B9A\u7684\u5411\u540E\u517C\u5BB9\uFF0C\u6BD4\u5982"),n("code",null,"FROM DUAL"),s("\u79FB\u9664\u3002\u8BE6\u89C1\u4E00\u4E0Bissue")],-1),vn={href:"https://github.com/jOOQ/jOOQ/issues/7421",target:"_blank",rel:"noopener noreferrer"},bn=s("https://github.com/jOOQ/jOOQ/issues/7421"),fn={href:"https://github.com/jOOQ/jOOQ/issues/11827",target:"_blank",rel:"noopener noreferrer"},_n=s("https://github.com/jOOQ/jOOQ/issues/11827"),qn=s("\u56E0\u6B64\uFF0C\u82E5\u5F00\u53D1\u4E2D\u5B58\u5728\u517C\u5BB9\u95EE\u9898\uFF0C\u6216\u9700\u8981\u66F4\u591A\u529F\u80FD\u6216\u4FBF\u5229\uFF0C\u63A8\u8350\u4F7F\u7528\u5546\u4E1A\u6388\u6743\uFF0C\u4ECE"),wn={href:"https://www.jooq.org/legal/licensing",target:"_blank",rel:"noopener noreferrer"},On=s("FAQ: Commercial Licensing"),yn=s(" \u4E2D\u53EF\u89C1\uFF08\u672C\u4EBA\u4EC5\u505AFAQ\u7684\u90E8\u5206\u8282\u9009\uFF0C\u4E0D\u5BF9\u5176\u6B63\u786E\u6027\u8D1F\u4EFB\u4F55\u8D23\u4EFB\uFF09"),jn=n("ul",null,[n("li",null,"One for every developer workstation which is used to write jOOQ code."),n("li",null,"only charge for developer workstations, not server workstations."),n("li",null,"This does not affect your build, test, and production servers, however, which will be licensed for free forever, in any price plan.")],-1),Sn=n("h2",{id:"_2f-10-jooq\u7684\u6027\u80FD\u53CA\u7EBF\u7A0B\u5B89\u5168",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_2f-10-jooq\u7684\u6027\u80FD\u53CA\u7EBF\u7A0B\u5B89\u5168","aria-hidden":"true"},"#"),s(" 2F.10.Jooq\u7684\u6027\u80FD\u53CA\u7EBF\u7A0B\u5B89\u5168")],-1),Tn=n("p",null,"jOOQ's overhead compared to plain JDBC is typically less than 1ms per query. \u4EE5\u4E0A\u4E0E\u7EAFJDBC\u5BF9\u6BD4\uFF0C\u800C\u4EFB\u4F55SqlMapping\u90FD\u5177\u6709\u52A8\u6001\u6027\uFF0C\u79BB\u4E0D\u5F00\u5B57\u7B26\u4E32\u89E3\u6790\u548C\u62FC\u63A5\uFF0C\u53CD\u5C04\u6784\u9020\u7B49\u635F\u8017\uFF0C\u4F30\u76F8\u5DEE\u4E0D\u5927\u3002",-1),Bn=n("p",null,"Configuration \u521D\u59CB\u5316\u540E\u5C31\u4E0D\u8981\u52A8\u4E86\u3002 DSLContext \u5728spring\u4E2DAutowired\u548CDao\u4E2D\u83B7\u53D6\u90FD\u53EF\u5B89\u5168\u4F7F\u7528\u3002",-1),Ln={href:"https://www.jooq.org/doc/3.14/manual/sql-execution/performance-considerations/",target:"_blank",rel:"noopener noreferrer"},In=s("https://www.jooq.org/doc/3.14/manual/sql-execution/performance-considerations/"),Qn={href:"https://www.jooq.org/doc/3.14/manual/sql-building/dsl-context/thread-safety/",target:"_blank",rel:"noopener noreferrer"},xn=s("https://www.jooq.org/doc/3.14/manual/sql-building/dsl-context/thread-safety/");function Fn(Kn,Dn){const t=o("ExternalLinkIcon"),p=o("Badge");return l(),i("div",null,[d,k,m,h,n("ul",null,[n("li",null,[n("a",g,[v,a(t)])]),n("li",null,[n("a",b,[f,a(t)])]),n("li",null,[n("a",_,[q,a(t)])]),n("li",null,[n("a",w,[O,a(t)])]),n("li",null,[n("a",y,[j,a(t)])]),n("li",null,[n("a",S,[T,a(t)])]),n("li",null,[n("a",B,[L,a(t)])])]),I,n("p",null,[Q,x,F,K,n("a",D,[E,a(t)])]),n("p",null,[A,a(p,{type:"tip",vertical:"top"},{default:u(()=>[M]),_:1}),P]),C,n("ul",null,[N,n("li",null,[n("a",R,[J,a(t)])])]),H,n("ul",null,[n("li",null,[G,n("a",U,[V,a(t)]),z]),Y,W]),X,n("ul",null,[Z,n("li",null,[$,n("a",nn,[sn,a(t)]),an]),tn]),en,n("p",null,[n("a",on,[pn,a(t)])]),cn,ln,un,n("p",null,[rn,n("a",dn,[kn,a(t)]),mn]),hn,gn,n("ul",null,[n("li",null,[n("a",vn,[bn,a(t)])]),n("li",null,[n("a",fn,[_n,a(t)])])]),n("p",null,[qn,n("a",wn,[On,a(t)]),yn]),jn,Sn,Tn,Bn,n("ul",null,[n("li",null,[n("a",Ln,[In,a(t)])]),n("li",null,[n("a",Qn,[xn,a(t)])])])])}var Mn=c(r,[["render",Fn],["__file","2f-qa-jooq.html.vue"]]);export{Mn as default};
