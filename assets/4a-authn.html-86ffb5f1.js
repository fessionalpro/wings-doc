import{_ as i,X as s,Y as r,$ as e,a1 as t,a0 as n,a3 as o,C as c}from"./framework-a66c2b6a.js";const l={},d=o('<h1 id="_4a-integrated-authn" tabindex="-1"><a class="header-anchor" href="#_4a-integrated-authn" aria-hidden="true">#</a> 4A.Integrated Authn</h1><p>支持多种登录，如用户名密码，Basic扩展，Oauth第三方等，可以安全且方便的控制用户来源。</p><h2 id="_4a-1-集成github" tabindex="-1"><a class="header-anchor" href="#_4a-1-集成github" aria-hidden="true">#</a> 4A.1.集成Github</h2><p>因为Github最广泛也最简单，以其作为Oauth登录的演示。</p><p>在Github上设置并记下<code>App ID</code>，<code>Client ID</code>和<code>Client secret</code>，注意不要外泄。 设置入口为 <code>Settings</code> | <code>Developer settings</code> | <code>GitHub Apps</code></p>',5),p={href:"http://localhost:8084",target:"_blank",rel:"noopener noreferrer"},h={href:"http://localhost:8084/auth/github/login.json",target:"_blank",rel:"noopener noreferrer"},u=o('<h2 id="_4a-2-是401还是302" tabindex="-1"><a class="header-anchor" href="#_4a-2-是401还是302" aria-hidden="true">#</a> 4A.2.是401还是302</h2><p>当发生禁止访问<code>UNAUTHORIZED</code>时，spring会抛出AccessDeniedException， 再由ExceptionTranslationFilter选择合适的AuthenticationEntryPoint。</p><p>wings中，默认存在2个AuthenticationEntryPoint，</p><ul><li>LoginUrlAuthenticationEntryPoint - 用户侧的通常登录</li><li>BasicAuthenticationEntryPoint - 监控侧的basic验证</li></ul><p>LoginUrl可以通过设置login-forward，选择以何种形式提供给用户端登录。</p><p>在EntryPoint的选择上，可以设置<code>http header</code>来满足特定的匹配规则。 以下设置可跳过basic验证规则，详见 HttpBasicConfigurer.registerDefaults</p><ul><li>不含<code>X-Requested-With: XMLHttpRequest</code> header</li><li><code>Accept</code>中包括以下任意值 <ul><li>application/xhtml+xml</li><li>image/*</li><li>text/html</li><li>text/plain</li></ul></li></ul><h2 id="_4a-3-openapi3特点" tabindex="-1"><a class="header-anchor" href="#_4a-3-openapi3特点" aria-hidden="true">#</a> 4A.3.OpenAPI3特点</h2><p>在OpenAPI3的规范中 不允许修改<code>Accept</code>，<code>Content-Type</code>和<code>Authorization</code></p>',9),g={href:"https://swagger.io/docs/specification/describing-parameters/#header-parameters",target:"_blank",rel:"noopener noreferrer"},_=o(`<blockquote><p>Note: Header parameters named Accept, Content-Type and Authorization are not allowed. To describe these headers, use the corresponding OpenAPI keywords:</p></blockquote><p>wings默认配置swagger，提供了text和json类型，分别对应LoginUrl和Basic的EntryPoint。</p><p>swagger在302时会自动导向目标页面，最终以200显示。此过程可以debug或curl看到。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">curl</span> <span class="token parameter variable">-vX</span> <span class="token string">&#39;POST&#39;</span> <span class="token punctuation">\\</span>
  <span class="token string">&#39;http://localhost:8084/user/authed-user.json&#39;</span> <span class="token punctuation">\\</span>
  <span class="token parameter variable">-H</span> <span class="token string">&#39;accept: text/html&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4);function b(m,f){const a=c("ExternalLinkIcon");return s(),r("div",null,[d,e("ul",null,[e("li",null,[t("Homepage URL - "),e("a",p,[t("http://localhost:8084"),n(a)])]),e("li",null,[t("Callback URL - "),e("a",h,[t("http://localhost:8084/auth/github/login.json"),n(a)])])]),u,e("p",null,[e("a",g,[t("https://swagger.io/docs/specification/describing-parameters/#header-parameters"),n(a)])]),_])}const k=i(l,[["render",b],["__file","4a-authn.html.vue"]]);export{k as default};
