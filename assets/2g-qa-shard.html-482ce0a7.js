import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as t,c as r,b as e,e as i,d as s,f as d}from"./app-371aab79.js";const h={},c=d('<h1 id="_2g-sharding-faq-topic" tabindex="-1"><a class="header-anchor" href="#_2g-sharding-faq-topic" aria-hidden="true">#</a> 2G.Sharding Faq Topic</h1><p>Topics about database sharding and splitting.</p><h2 id="_2g-01-no-implementation-spi" tabindex="-1"><a class="header-anchor" href="#_2g-01-no-implementation-spi" aria-hidden="true">#</a> 2G.01. No implementation SPI</h2><p>No implementation class load from SPI with type <code>null</code></p><p>Avoid using Chinese in naming, for boundary test, find shardingsphere can directly handle Chinese table name, but for other naming will cause some parsing error.</p><p>Such as <code>sharding-algorithms.[sharding-inline]</code>, it will fail and make its <code>.type=null</code>, thus reporting an error.</p><p>No implementation class load from SPI <code>org.apache.shardingsphere.sharding.spi.ShardingAlgorithm</code> with type <code>null</code></p><h2 id="_2g-02-on-duplicate-key-update" tabindex="-1"><a class="header-anchor" href="#_2g-02-on-duplicate-key-update" aria-hidden="true">#</a> 2G.02.ON DUPLICATE KEY UPDATE</h2><p>INSERT INTO ... ON DUPLICATE KEY UPDATE can not support update for sharding column</p><p>then append sharding column and value to WHERE Clause</p>',10),p={href:"https://github.com/apache/shardingsphere/issues/14025",target:"_blank",rel:"noopener noreferrer"},l=e("p",null,"This feature was released around 5.1.0",-1);function u(g,m){const a=o("ExternalLinkIcon");return t(),r("div",null,[c,e("p",null,[e("a",p,[i("https://github.com/apache/shardingsphere/issues/14025"),s(a)])]),l])}const b=n(h,[["render",u],["__file","2g-qa-shard.html.vue"]]);export{b as default};
