import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as e,o as s,e as n}from"./app-BT4uJ8Vu.js";const a={},t=n(`<h1 id="_0e-config-topic" tabindex="-1"><a class="header-anchor" href="#_0e-config-topic"><span>0E.Config Topic</span></a></h1><p>Project configuration, such as maven, properties, spring and other settings.</p><h2 id="_0e-01-where-are-enabled-configs" tabindex="-1"><a class="header-anchor" href="#_0e-01-where-are-enabled-configs"><span>0E.01.Where are Enabled Configs</span></a></h2><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">## find all enabled properties files</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">find</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> .</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -name</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;wings-enabled*.properties&#39;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">| </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">egrep</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -v</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -E</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;target/|example/|-test/&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">## find all enabled java</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">find</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> .</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -name</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;*EnabledProp.java&#39;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">| </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">egrep</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -v</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -E</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;example/&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">## find all qualified properties</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">find</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> .</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -name</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;additional-spring-configuration-metadata.json&#39;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">| </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">egrep</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -v</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -E</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;target/|example/&#39;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_0e-02-customize-springboot-version-and-dependency" tabindex="-1"><a class="header-anchor" href="#_0e-02-customize-springboot-version-and-dependency"><span>0E.02.Customize Springboot version and dependency</span></a></h2><p>Wings only handles the loading of configuration files, in the SpringBoot standard lifecycle, without relying on a specific version. For those who do not want to follow along with wings to upgrade spring and its dependencies, just make wings as a dependency, not a parent and import.</p><p>Wings always follows the upgrade to the next level stable version of SpringBoot for the purpose of testing sharding-jdbc and jooq compatibility. And for binary compatibility, wings version 210 is compiled with a target of java=11, kotlin=1.6</p><p>For maven inheritance dependencies there are parent and import two, the important difference is the property override.</p><ul><li>parent - you can also override individual dependencies by overriding a property in your own project</li><li>import - does not let you override individual dependencies by using properties, as explained above. To achieve the same result, you need to add entries in the dependencyManagement section of your project before the spring-boot-dependencies entry.</li><li><a href="https://docs.spring.io/spring-boot/docs/3.0.3/maven-plugin/reference/htmlsingle/#using.parent-pom" target="_blank" rel="noopener noreferrer">https://docs.spring.io/spring-boot/docs/3.0.3/maven-plugin/reference/htmlsingle/#using.parent-pom</a></li><li><a href="https://docs.spring.io/spring-boot/docs/3.0.3/maven-plugin/reference/htmlsingle/#using-import" target="_blank" rel="noopener noreferrer">https://docs.spring.io/spring-boot/docs/3.0.3/maven-plugin/reference/htmlsingle/#using-import</a></li></ul><p>For spring-boot versions lower than wings, generally, specify the jooq version to completely work.</p><h2 id="_0e-03-the-difference-between-lib-and-boot-projects" tabindex="-1"><a class="header-anchor" href="#_0e-03-the-difference-between-lib-and-boot-projects"><span>0E.03.The Difference Between Lib and Boot projects</span></a></h2><p>The SpringBoot package executable boot.jar, not the normal lib.jar</p><div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" data-title="xml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">plugin</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;org.springframework.boot&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;spring-boot-maven-plugin&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">configuration</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">executable</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;true&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">executable</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">configuration</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">plugin</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>For the lib project configuration, skip the <code>repackage</code> and refer to the example project.</p><div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" data-title="xml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">plugin</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;org.springframework.boot&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;spring-boot-maven-plugin&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">executions</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">execution</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;repackage&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">goals</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">goal</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;repackage&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">goal</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">goals</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">configuration</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">skip</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;true&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">skip</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">configuration</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">execution</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">executions</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">plugin</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Wings recommended project structure is the <code>project/build/plugins</code> entry in the parent&#39;s pom.xml. Default settings for <code>configuration</code> of the following <code>plugin</code>.</p><ul><li>spring-boot-maven-plugin - executable=true</li><li>maven-deploy-plugin - skip=true</li><li>maven-install-plugin - skip=true</li></ul><p>In this way, all submodules, with boot project provide default build (boot packing, no deploy, no install). Skip boot packaging in the lib submodule, ie. skip=true in repackage.</p><h2 id="_0e-04-missing-mirana-and-meepo-dependency" tabindex="-1"><a class="header-anchor" href="#_0e-04-missing-mirana-and-meepo-dependency"><span>0E.04.Missing Mirana and Meepo dependency</span></a></h2><p>Due to The Big Wing Project for Non-Foodies (once named), some <code>SNAPSHOT</code> dependencies need to be compiled and installed locally by yourself. Occasionally can be found on <code>sonatype</code>, you need to add your own <code>repository</code>, such as <code>~/.m2/settings.xml</code></p><div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" data-title="xml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">repository</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;ossrh-snapshots&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">url</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;https://oss.sonatype.org/content/repositories/snapshots&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">url</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">snapshots</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">enabled</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;true&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">enabled</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">snapshots</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">releases</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">enabled</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;false&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">enabled</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">releases</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">repository</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_0e-05-placeholder-for-config-and-inject" tabindex="-1"><a class="header-anchor" href="#_0e-05-placeholder-for-config-and-inject"><span>0E.05.Placeholder for Config and Inject</span></a></h2><ul><li>In Hard code, @Autowired <ul><li>PropertyResolver - Get or parse a string value by key</li><li>StringValueResolver - parse a value string</li></ul></li><li>In properties, use <code>\${VAR}</code></li><li>In @Value and @RequestMapping, use <code>\${VAR}</code></li></ul><h2 id="_0e-06-removing-tomcat-or-hazelcast" tabindex="-1"><a class="header-anchor" href="#_0e-06-removing-tomcat-or-hazelcast"><span>0E.06.Removing Tomcat or Hazelcast</span></a></h2><p>When using wings as a parent through dependencyManagement, the default inheritance of wings does not need to be changed. However, if you dont inherit the wings, the following two items may be changed by yourself depending on the situation.</p><ul><li>spring-boot-starter-web/spring-boot-starter-tomcat, because the default use of undertow</li><li>spring-session-hazelcast/hazelcast, use the latest version</li></ul><h2 id="_0e-07-java-and-kotlin-version" tabindex="-1"><a class="header-anchor" href="#_0e-07-java-and-kotlin-version"><span>0E.07.Java and Kotlin Version</span></a></h2><p>Set the compilation version of java and kotlin by pom, if there is compilation failure in IDE, it is likely that the compilation version is not correct. Since 210, wings is fully adapted to java 11, kotlin is automatically updated to 1.6, but no java8 certificate compatibility test is done.</p><h2 id="_0e-08-config-logger-and-log-groups" tabindex="-1"><a class="header-anchor" href="#_0e-08-config-logger-and-log-groups"><span>0E.08.Config logger and log groups</span></a></h2><p>SpringBoot built-in <a href="https://docs.spring.io/spring-boot/docs/3.0.3/reference/htmlsingle/#features.logging.log-groups" target="_blank" rel="noopener noreferrer">Log Groups</a></p><ul><li>org.springframework.core.codec</li><li>org.springframework.http</li><li>org.springframework.web</li><li>org.springframework.boot.actuate.endpoint.web</li><li>org.springframework.boot.web.servlet.ServletContextInitializerBeans</li><li>org.springframework.jdbc.core</li><li>org.jooq.tools.LoggerListener</li></ul><blockquote><p>Spring Boot uses Commons Logging for all internal logging but leaves the underlying log implementation open</p></blockquote><p>Wings follows this practice, <code>@Configuration</code> and other spring feature use CommonsLogging, And the business code using lombok <code>@Slf4j</code> configured as <code>static</code> <code>log</code></p><h2 id="_0e-09-mvn-resources-filtering" tabindex="-1"><a class="header-anchor" href="#_0e-09-mvn-resources-filtering"><span>0E.09.Mvn Resources Filtering</span></a></h2><p>Note: After version 210, the mvn variable is replaced by the spring variable and the filter is no longer needed.</p><p>Because the variable <code>@project.version@</code> is used in the swagger configuration, it will be configured build/resources/resource/filtering=true so that mvn replaces it automatically.</p><p>However, enabling filter can cause replacement to fail, such as binary files, and wings ignores some binaries by default.</p><h2 id="_0e-10-spa-and-reverse-proxy-cache-settings" tabindex="-1"><a class="header-anchor" href="#_0e-10-spa-and-reverse-proxy-cache-settings"><span>0E.10.SPA and Reverse Proxy Cache Settings</span></a></h2><p>By default, Springboot automatically adds the following Response Header, <code>Cache-Control</code>=<code>no-cache,no-store,max-age=0,must-revalidate</code> so that the reverse proxy does not need to be set. However, for SPA pages, manual settings are required, such as nginx configuration.</p><div class="language-nginx line-numbers-mode" data-highlighter="shiki" data-ext="nginx" data-title="nginx" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">location</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> / {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">    #add_header &#39;Access-Control-Allow-Origin&#39; &#39;*&#39;; #CORS</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    root </span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/data/static/demo-admin-spa/;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ($</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">request_filename</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ~* \\.(html|htm)$){</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        add_header </span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">Cache-Control no-cache,no-store,max-age=0,must-revalidate;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_0e-11-how-to-ignore-a-config-entry" tabindex="-1"><a class="header-anchor" href="#_0e-11-how-to-ignore-a-config-entry"><span>0E.11.How to Ignore a Config Entry</span></a></h2><p>In wings principle, the config entry must have default value, and sometimes the default key or value need to be ignored.</p><ul><li><code>String</code> invalid value - <code>empty</code> or <code>-</code> is the default invalid value</li><li><code>Map&lt;String, String&gt;</code> - the value of the invalid key</li><li><code>Map&lt;String, Set&lt;String&gt;&gt;</code> - the value of override key</li></ul><h2 id="_0e-12-execution-order-in-spring" tabindex="-1"><a class="header-anchor" href="#_0e-12-execution-order-in-spring"><span>0E.12.Execution Order in Spring</span></a></h2><p>In the Spring lifecycle, using TestSilencerCurseApplication as an example, the following order of execution is as follows, where <code>spring.facts</code> means spring boot <a href="https://docs.spring.io/spring-boot/docs/3.0.3/reference/htmlsingle/#features.spring-application.application-events-and-listeners" target="_blank" rel="noopener noreferrer">lifecycle events</a></p><ul><li>#01, 244ms, (spring.factories): ApplicationStartingEvent</li><li>#02, 2209ms, (spring.factories): ApplicationEnvironmentPreparedEvent</li><li>#03, 2758ms, (spring.factories): ApplicationContextInitializedEvent</li><li>#04, 2809ms, (spring.factories): ApplicationPreparedEvent</li><li>#05, 3365ms, @PostConstruct: TestSpringOrderService</li><li>#06, 3365ms, @Override: InitializingBean TestSpringOrderService</li><li>#07, 3381ms, (constructor): can inject para, autoconf=true</li><li>#08, 3384ms, @Autowired: testAutowired1 can inject para, autoconf=true</li><li>#09, 3384ms, @PostConstruct: postConstruct1</li><li>#10, 3384ms, @PostConstruct: postConstruct2</li><li>#11, 3385ms, @Override: InitializingBean TestSpringOrderConfiguration</li><li>#12, 3385ms, @Bean: testBean1 can inject para, autoconf=true</li><li>#13, 3386ms, @Bean: testBean2 can inject para, autoconf=true</li><li>#14, 3657ms, (spring.factories): ContextRefreshedEvent</li><li>#15, 3662ms, (spring.factories): ApplicationStartedEvent</li><li>#16, 3664ms, @EventListener: ApplicationStartedEvent</li><li>#17, 3665ms, (spring.factories): AvailabilityChangeEvent</li><li>#18, 3669ms, CommandLineRunner: CommandLineRunner1</li><li>#19, 3673ms, CommandLineRunner: CommandLineRunner2</li><li>#20, 3674ms, (spring.factories): ApplicationReadyEvent</li><li>#21, 3675ms, @EventListener: ApplicationReadyEvent</li><li>#22, 3676ms, (spring.factories): AvailabilityChangeEvent</li><li>#23, 3678ms, Jvm ShutdownHook</li><li>#24, 3679ms, (spring.factories): ContextClosedEvent</li><li>#25, 3679ms, @EventListener: ContextClosedEvent</li><li>#26, 3682ms, @PreDestroy: TestSpringOrderConfiguration</li><li>#27, 3682ms, @Override: DisposableBean TestSpringOrderConfiguration</li><li>#28, 3682ms, @PreDestroy: TestSpringOrderService</li><li>#29, 3682ms, @Override: DisposableBean TestSpringOrderService</li></ul><p>The common configuration methods and order in Wings are as follows.</p><ul><li>Constructor - global, required dependency, injected as a final by constructor</li><li>@Autowired - local, optional dependency, injected as a setter</li><li>InitializingBean/@PostConstruct - Executes the end of the current configuration, without parameters.</li><li>ApplicationStartedEventRunner - before app/cmd runners initialize Helper</li><li>ApplicationRunnerOrdered - custom ordered ApplicationRunner</li><li>CommandLineRunnerOrdered - custom ordered CommandLineRunner</li><li>ApplicationInspectRunner - LOWEST_PRECEDENCE ApplicationRunner</li><li>ApplicationReadyEventRunner - after app/cmd runners called</li><li>DisposableBean/@PreDestroy - stop service, without parameters.</li></ul><p>Helper will be initialized when ApplicationStartedEvent. configuration and common beans are defined by constants</p><ul><li>WingsBeanNaming - name of important bean</li><li>WingsBeanOrdered - Order and cascading</li></ul><h2 id="_0e-13-log-format-in-spring-config" tabindex="-1"><a class="header-anchor" href="#_0e-13-log-format-in-spring-config"><span>0E.13.Log Format in Spring Config</span></a></h2><p>In Configuration&#39;s CommonsLogging, the log follows the following common log.info format</p><ul><li><code>@Bean</code> - {ModuleName} spring-bean {BeanName}</li><li><code>@Autowired</code> - {ModuleName} spring-auto {MethodName}</li><li><code>@PostConstruct</code> - {ModuleName} spring-auto {MethodName}</li><li><code>CommandLineRunner</code> - {ModuleName} spring-runs {BeanName}</li><li><code>Bean*PostProcessor</code> - {ModuleName} spring-proc {BeanName}</li><li>Process log - {ModuleName} conf</li></ul>`,53),l=[t];function r(o,p){return s(),e("div",null,l)}const g=i(a,[["render",r],["__file","0e-qa-config.html.vue"]]),c=JSON.parse('{"path":"/0-wings/0e-qa-config.html","title":"0E.Config Topic","lang":"en-US","frontmatter":{"isOriginal":true,"icon":"gear","category":["WingsGod","Config"],"description":"0E.Config Topic Project configuration, such as maven, properties, spring and other settings. 0E.01.Where are Enabled Configs 0E.02.Customize Springboot version and dependency Wi...","GIT_REPO_HEAD":"2025-01-28 900f8d7f901cad2172a025862418812b0d068d29","head":[["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://wings.fessional.pro/zh/0-wings/0e-qa-config.html"}],["meta",{"property":"og:url","content":"https://wings.fessional.pro/0-wings/0e-qa-config.html"}],["meta",{"property":"og:site_name","content":"WingsBoot Win Sprint"}],["meta",{"property":"og:title","content":"0E.Config Topic"}],["meta",{"property":"og:description","content":"0E.Config Topic Project configuration, such as maven, properties, spring and other settings. 0E.01.Where are Enabled Configs 0E.02.Customize Springboot version and dependency Wi..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-01-09T11:57:11.000Z"}],["meta",{"property":"article:author","content":"trydofor"}],["meta",{"property":"article:modified_time","content":"2025-01-09T11:57:11.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"0E.Config Topic\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-01-09T11:57:11.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"trydofor\\",\\"url\\":\\"https://www.trydofor.com\\"}]}"]]},"headers":[{"level":2,"title":"0E.01.Where are Enabled Configs","slug":"_0e-01-where-are-enabled-configs","link":"#_0e-01-where-are-enabled-configs","children":[]},{"level":2,"title":"0E.02.Customize Springboot version and dependency","slug":"_0e-02-customize-springboot-version-and-dependency","link":"#_0e-02-customize-springboot-version-and-dependency","children":[]},{"level":2,"title":"0E.03.The Difference Between Lib and Boot projects","slug":"_0e-03-the-difference-between-lib-and-boot-projects","link":"#_0e-03-the-difference-between-lib-and-boot-projects","children":[]},{"level":2,"title":"0E.04.Missing Mirana and Meepo dependency","slug":"_0e-04-missing-mirana-and-meepo-dependency","link":"#_0e-04-missing-mirana-and-meepo-dependency","children":[]},{"level":2,"title":"0E.05.Placeholder for Config and Inject","slug":"_0e-05-placeholder-for-config-and-inject","link":"#_0e-05-placeholder-for-config-and-inject","children":[]},{"level":2,"title":"0E.06.Removing Tomcat or Hazelcast","slug":"_0e-06-removing-tomcat-or-hazelcast","link":"#_0e-06-removing-tomcat-or-hazelcast","children":[]},{"level":2,"title":"0E.07.Java and Kotlin Version","slug":"_0e-07-java-and-kotlin-version","link":"#_0e-07-java-and-kotlin-version","children":[]},{"level":2,"title":"0E.08.Config logger and log groups","slug":"_0e-08-config-logger-and-log-groups","link":"#_0e-08-config-logger-and-log-groups","children":[]},{"level":2,"title":"0E.09.Mvn Resources Filtering","slug":"_0e-09-mvn-resources-filtering","link":"#_0e-09-mvn-resources-filtering","children":[]},{"level":2,"title":"0E.10.SPA and Reverse Proxy Cache Settings","slug":"_0e-10-spa-and-reverse-proxy-cache-settings","link":"#_0e-10-spa-and-reverse-proxy-cache-settings","children":[]},{"level":2,"title":"0E.11.How to Ignore a Config Entry","slug":"_0e-11-how-to-ignore-a-config-entry","link":"#_0e-11-how-to-ignore-a-config-entry","children":[]},{"level":2,"title":"0E.12.Execution Order in Spring","slug":"_0e-12-execution-order-in-spring","link":"#_0e-12-execution-order-in-spring","children":[]},{"level":2,"title":"0E.13.Log Format in Spring Config","slug":"_0e-13-log-format-in-spring-config","link":"#_0e-13-log-format-in-spring-config","children":[]}],"git":{"createdTime":1655901635000,"updatedTime":1736423831000,"contributors":[{"name":"trydofor","email":"trydofor@gmail.com","commits":7}]},"readingTime":{"minutes":3.95,"words":1185},"filePathRelative":"0-wings/0e-qa-config.md","localizedDate":"June 22, 2022","autoDesc":true}');export{g as comp,c as data};
