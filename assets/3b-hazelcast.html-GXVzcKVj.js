import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{e as i,g as s,o as t}from"./app-BkDpWcXQ.js";const n={};function l(r,e){return t(),i("div",null,e[0]||(e[0]=[s(`<h1 id="_3b-hazelcast-middleware" tabindex="-1"><a class="header-anchor" href="#_3b-hazelcast-middleware"><span>3B.Hazelcast Middleware</span></a></h1><p>Using hazelcast as session, cache and messaging middleware, including,</p><ul><li>spring session - Hazelcast4IndexedSessionRepository</li><li>server cache - WingsHazelcast</li><li>global lock - HazelcastGlobalLock</li><li>global event - HazelcastSyncPublisher</li><li>snowflake id - FlakeIdHazelcastImpl</li></ul><h2 id="_3b-1-default-configuration" tabindex="-1"><a class="header-anchor" href="#_3b-1-default-configuration"><span>3B.1.Default Configuration</span></a></h2><ul><li>ClassNotFound - user-code-deployment must be set</li><li>Reconnection mechanism, set the reconnection time on the client side</li><li>Data persistence, the community version requires DIY MapStore and MapLoader</li><li>Multicast is enabled by default, address is 224.0.0.1</li></ul><p>In the actual, it is recommended to deploy hazelcast cluster independently and use the client to connect. Cluster configuration should be <code>app+1</code>, so that at least one survives.</p><p>Generally in the same network, you can use multicast between intranets, but it is recommended to use the tcp-ip method of networking. Choose a different configuration file via spring.hazelcast.config, xml is recommended.</p><p>hazelcast 3 and 4 are very different and are not compatible in SpringBoot 2.2 and 2.4.</p><h2 id="_3b-2-distributed-lock" tabindex="-1"><a class="header-anchor" href="#_3b-2-distributed-lock"><span>3B.2.Distributed Lock</span></a></h2><p>Hazelcast provides 3 types of locks, CP system is recommended, but the cluster needs at least 3 units, the default 0 is single unsafe mode.</p><ul><li>FencedLock - Raft&#39;s distributed lock, in CP system (4.x)</li><li>IMap.lock - automatic GC, clean and simple</li><li>ILock.lock - follow j.u.c.Lock convention (removed in 3.12)</li></ul><p>Different projects need to set cluster-name separately to avoid interference from caches with the same name in different projects. slardar uses the default springboot configuration, the client and server configuration files are as follows.</p><ul><li>extra-conf/hazelcast-client.xml</li><li>extra-conf/hazelcast-server.xml</li></ul><p>If independent customization is required, the ClientConfig or Config bean can be exposed programmatically, See the following.</p><ul><li><a href="https://hazelcast.com/blog/hazelcast-imdg-3-12-introduces-cp-subsystem/" target="_blank" rel="noopener noreferrer">https://hazelcast.com/blog/hazelcast-imdg-3-12-introduces-cp-subsystem/</a></li><li><a href="https://hazelcast.com/blog/long-live-distributed-locks/" target="_blank" rel="noopener noreferrer">https://hazelcast.com/blog/long-live-distributed-locks/</a></li></ul><h2 id="_3b-3-distributed-cache" tabindex="-1"><a class="header-anchor" href="#_3b-3-distributed-cache"><span>3B.3.Distributed Cache</span></a></h2><p>Implement ServerCacheManager with hazelcast through hazelcastCacheManager</p><p>For hazelcast&#39;s MapConfig, if there is no configuration, wings will automatically configure the following MapConf according to the level.</p><div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">time-to-live-seconds</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;3600&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">time-to-live-seconds</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">max-idle-seconds</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;0&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">max-idle-seconds</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">eviction</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> size</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;5000&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3b-4-message-subscription" tabindex="-1"><a class="header-anchor" href="#_3b-4-message-subscription"><span>3B.4.Message Subscription</span></a></h2><p>Hazelcast&#39;s topic (#HazelcastTopic) is wrapped in the SpringEvent pattern for easy navigation between code in the IDE, and</p><ul><li>What producers/publishers does the Event has</li><li>What consumers/subscribers the Event has</li></ul>`,22)]))}const d=a(n,[["render",l],["__file","3b-hazelcast.html.vue"]]),h=JSON.parse('{"path":"/3-slardar/3b-hazelcast.html","title":"3B.Hazelcast Middleware","lang":"en-US","frontmatter":{"isOriginal":true,"icon":"layer-group","category":["Slardar","Caching","Event"],"description":"3B.Hazelcast Middleware Using hazelcast as session, cache and messaging middleware, including, spring session - Hazelcast4IndexedSessionRepository server cache - WingsHazelcast ...","GIT_REPO_HEAD":"2025-03-19 e70b762ba982770a7e8c5503035bb9caa61ba629","head":[["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://wings.fessional.pro/zh/3-slardar/3b-hazelcast.html"}],["meta",{"property":"og:url","content":"https://wings.fessional.pro/3-slardar/3b-hazelcast.html"}],["meta",{"property":"og:site_name","content":"WingsBoot Win Sprint"}],["meta",{"property":"og:title","content":"3B.Hazelcast Middleware"}],["meta",{"property":"og:description","content":"3B.Hazelcast Middleware Using hazelcast as session, cache and messaging middleware, including, spring session - Hazelcast4IndexedSessionRepository server cache - WingsHazelcast ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-06-12T00:21:52.000Z"}],["meta",{"property":"article:modified_time","content":"2024-06-12T00:21:52.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"3B.Hazelcast Middleware\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-06-12T00:21:52.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"trydofor\\",\\"url\\":\\"https://www.trydofor.com\\"}]}"]]},"git":{"createdTime":1655901635000,"updatedTime":1718151712000,"contributors":[{"name":"trydofor","username":"trydofor","email":"trydofor@gmail.com","commits":7,"url":"https://github.com/trydofor"}]},"readingTime":{"minutes":1.17,"words":351},"filePathRelative":"3-slardar/3b-hazelcast.md","localizedDate":"June 22, 2022","autoDesc":true}');export{d as comp,h as data};
