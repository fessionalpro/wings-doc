import{_ as l}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as o,o as i,c,b as e,e as n,d as s,f as t}from"./app-C4PFB2tF.js";const p={},r=t('<h1 id="b2-usage-example" tabindex="-1"><a class="header-anchor" href="#b2-usage-example"><span>B2.Usage Example</span></a></h1><p>The translation of the Meepo template does NOT depend on any other template. <code>Pebble</code> is here for testing and demo only, as its benchmark and syntax are better.</p><p>Templates like <code>Pebble</code>, <code>FreeMarker</code>, and <code>Velocity</code> have their own syntax and are widely used in web services. Some IDEs have plug-in support, but it&#39;s all for the template language, not the target file language, including syntax highlighting, autocompelet.</p><p>The <code>Thymeleaf</code> (recently discontinued) templates do not break the target file syntax and the application area is bound to specific language features.</p>',4),d={href:"https://www.thymeleaf.org/",target:"_blank",rel:"noopener noreferrer"},u={href:"https://pebbletemplates.io/",target:"_blank",rel:"noopener noreferrer"},m={href:"https://github.com/trydofor/template-benchmark",target:"_blank",rel:"noopener noreferrer"},h=t('<p>The intention of Meepo is NOT the dynamic capabilities of the template, but the <code>execution engines</code> (such as js and java) can do very complex functional operations.</p><p>Although its performance is better than <code>Freemarker</code>, <code>Velocity</code> and 3 times better than <code>thymeleaf</code> in the <code>jmh</code> benchmark. It is not recommended to use Meepo for engineering view layer rendering, it is suitable for template middle layer, or called template translator.</p><p>Because markdown has its own understanding of spaces and empty lines, please see the source code in the link for precise identification of spaces and empty lines.</p><h2 id="b2-1-ignore-blank-in-directive-readability-first" tabindex="-1"><a class="header-anchor" href="#b2-1-ignore-blank-in-directive-readability-first"><span>B2.1.Ignore Blank in Directive, Readability First</span></a></h2>',4),b={href:"https://github.com/trydofor/professional-meepo/tree/master/meepo/src/test/resources/template/blog/blog-trim.peb",target:"_blank",rel:"noopener noreferrer"},v=e("code",null,"html",-1),g=e("code",null,"js",-1),k=e("code",null,"pebble",-1),f=t(`<div class="language-pebble line-numbers-mode" data-ext="pebble" data-title="pebble"><pre class="language-pebble"><code>&lt;body&gt;
  {% for article in articles %}
  &lt;h3&gt;{{ article.title }}&lt;/h3&gt;
  &lt;p&gt;{{ article.content }}&lt;/p&gt;
  {% endfor %}
  &lt;script type=&quot;text/javascript&quot;&gt;
    var machineId = {{machineId}}
  &lt;/script&gt;
&lt;/body&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),y={href:"https://github.com/trydofor/professional-meepo/tree/master/meepo/src/test/resources/template/blog/blog-trim.htm",target:"_blank",rel:"noopener noreferrer"},_=t(`<p>Without using <code>!</code>, if the directive takes the entire line and other chars in the line are all whitespace, then that line will not be printed. The first line has a space for testing purposes.</p><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code> <span class="token comment">&lt;!-- HI-MEEPO --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
  <span class="token comment">&lt;!-- DNA:RAW {% for article in articles %} --&gt;</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">&gt;</span></span>{{ article.title }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>{{ article.content }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
  <span class="token comment">&lt;!-- DNA:RAW {% endfor %} --&gt;</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text/javascript<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
    <span class="token comment">// HI-MEEPO</span>
    <span class="token comment">// DNA:SET /&quot;machine-id&quot;/{{machineId}}/</span>
    <span class="token keyword">var</span> machineId <span class="token operator">=</span> <span class="token string">&quot;machine-id&quot;</span>
  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="b2-2-keep-blank-in-directive-consistency-first" tabindex="-1"><a class="header-anchor" href="#b2-2-keep-blank-in-directive-consistency-first"><span>B2.2.Keep Blank in Directive, Consistency First</span></a></h2>`,3),x={href:"https://github.com/trydofor/professional-meepo/tree/master/meepo/src/test/resources/template/blog/blog-pure.peb",target:"_blank",rel:"noopener noreferrer"},w=e("code",null,"<body>",-1),T=e("code",null,"var",-1),E=t(`<div class="language-pebble line-numbers-mode" data-ext="pebble" data-title="pebble"><pre class="language-pebble"><code>
&lt;body&gt;
  {% for article in articles %}
  &lt;h3&gt;{{ article.title }}&lt;/h3&gt;
  &lt;p&gt;{{ article.content }}&lt;/p&gt;
  {% endfor %}
  &lt;script type=&quot;text/javascript&quot;&gt;
            var machineId = {{machineId}}
  &lt;/script&gt;
&lt;/body&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The use of <code>!</code> makes Meepo handle only the content between the beginning and the end of the comment, leaving out newlines and whitespace (4 spaces each for the first 2 lines of var).</p><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token comment">&lt;!-- HI-MEEPO! --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
  <span class="token comment">&lt;!-- DNA:RAW {% for article in articles %} --&gt;</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">&gt;</span></span>{{ article.title }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>{{ article.content }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
  <span class="token comment">&lt;!-- DNA:RAW {% endfor %} --&gt;</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text/javascript<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
    <span class="token comment">// HI-MEEPO!</span>
    <span class="token comment">// DNA:SET /&quot;machine-id&quot;/{{machineId}}/</span>
    <span class="token keyword">var</span> machineId <span class="token operator">=</span> <span class="token string">&quot;machine-id&quot;</span>
  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="b2-3-replace-all-with-anonymous-global" tabindex="-1"><a class="header-anchor" href="#b2-3-replace-all-with-anonymous-global"><span>B2.3.Replace All with Anonymous Global</span></a></h2>`,4),j={href:"https://github.com/trydofor/professional-meepo/tree/master/meepo/src/test/resources/template/repl/replace-all-o.htm",target:"_blank",rel:"noopener noreferrer"},N=t(`<div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
use anonymous all-life to replace div to div
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),D={href:"https://github.com/trydofor/professional-meepo/tree/master/meepo/src/test/resources/template/repl/replace-all-i.htm",target:"_blank",rel:"noopener noreferrer"},M=e("code",null,"*",-1),B=t(`<div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token comment">&lt;!-- HI-MEEPO --&gt;</span>
<span class="token comment">&lt;!-- DNA:SET /body/div/* --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
use anonymous all-life to replace body to div
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="b2-4-replace-interval-with-specified-range" tabindex="-1"><a class="header-anchor" href="#b2-4-replace-interval-with-specified-range"><span>B2.4.Replace Interval with Specified Range</span></a></h2>`,2),q={href:"https://github.com/trydofor/professional-meepo/tree/master/meepo/src/test/resources/template/repl/replace-1a3-o.htm",target:"_blank",rel:"noopener noreferrer"},A=t(`<div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
use ranged-life to replace 1st and 3rd body to div
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),I={href:"https://github.com/trydofor/professional-meepo/tree/master/meepo/src/test/resources/template/repl/replace-1a3-i.htm",target:"_blank",rel:"noopener noreferrer"},O=e("code",null,"1,3",-1),R=t(`<div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token comment">&lt;!-- HI-MEEPO --&gt;</span>
<span class="token comment">&lt;!-- DNA:SET /body/div/1,3 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
use ranged-life to replace 1st and 3rd body to div
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="b2-5-replace-range-with-named-global" tabindex="-1"><a class="header-anchor" href="#b2-5-replace-range-with-named-global"><span>B2.5.Replace Range with Named Global</span></a></h2>`,2),S={href:"https://github.com/trydofor/professional-meepo/tree/master/meepo/src/test/resources/template/repl/replace-end-o.htm",target:"_blank",rel:"noopener noreferrer"},P=t(`<div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
use named-life to replace scoped div to div
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),H={href:"https://github.com/trydofor/professional-meepo/tree/master/meepo/src/test/resources/template/repl/replace-end-i.htm",target:"_blank",rel:"noopener noreferrer"},L=e("code",null,"end",-1),F=t(`<div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token comment">&lt;!-- HI-MEEPO --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token comment">&lt;!-- DNA:SET /body/div/body --&gt;</span>
use named-life to replace scoped body to div
<span class="token comment">&lt;!-- DNA:END body --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="b2-6-keeping-the-original-magic-immunity-bkb" tabindex="-1"><a class="header-anchor" href="#b2-6-keeping-the-original-magic-immunity-bkb"><span>B2.6.Keeping the Original, Magic Immunity BKB</span></a></h2>`,2),U={href:"https://github.com/trydofor/professional-meepo/tree/master/meepo/src/test/resources/template/bkb/black-king-bar-o.htm",target:"_blank",rel:"noopener noreferrer"},C=t(`<div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token comment">&lt;!-- DNA:SET /body/div/* --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
in bkb, all are plain text, including DNA:SET
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),z={href:"https://github.com/trydofor/professional-meepo/tree/master/meepo/src/test/resources/template/bkb/black-king-bar-i.htm",target:"_blank",rel:"noopener noreferrer"},V=e("code",null,"end",-1),W=t(`<div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token comment">&lt;!-- HI-MEEPO --&gt;</span>
<span class="token comment">&lt;!-- DNA:BKB bkb --&gt;</span>
<span class="token comment">&lt;!-- DNA:SET /body/div/* --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
in bkb, all are plain text, including DNA:SET
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token comment">&lt;!-- DNA:END bkb --&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="b2-7-delete-line-block-actually-replace-with-empty" tabindex="-1"><a class="header-anchor" href="#b2-7-delete-line-block-actually-replace-with-empty"><span>B2.7.Delete Line/Block, actually replace with Empty</span></a></h2>`,2),G={href:"https://github.com/trydofor/professional-meepo/tree/master/meepo/src/test/resources/template/del/delete-1a3-o.htm",target:"_blank",rel:"noopener noreferrer"},J=t(`<div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code>delete all, but this line

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,1),K={href:"https://github.com/trydofor/professional-meepo/tree/master/meepo/src/test/resources/template/del/delete-1a3-i.htm",target:"_blank",rel:"noopener noreferrer"},Z=t(`<div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token comment">&lt;!-- HI-MEEPO --&gt;</span>
<span class="token comment">&lt;!-- DNA:SET /^.*\\n?//1,3 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
delete all, but this line
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),Q={href:"https://github.com/trydofor/professional-meepo/tree/master/meepo/src/test/resources/template/del/delete-all-i.htm",target:"_blank",rel:"noopener noreferrer"},X=t(`<div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token comment">&lt;!-- HI-MEEPO --&gt;</span>
<span class="token comment">&lt;!-- DNA:SET :&lt;body&gt;[\\s\\S]*&lt;/body&gt;:: --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
delete all, but this line
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="b2-8-execute-once-stored-in-model" tabindex="-1"><a class="header-anchor" href="#b2-8-execute-once-stored-in-model"><span>B2.8.Execute Once, Stored in Model</span></a></h2>`,2),Y={href:"https://github.com/trydofor/professional-meepo/tree/master/meepo/src/test/resources/template/rna/put-use-o.htm",target:"_blank",rel:"noopener noreferrer"},$=t(`<div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
1009+10+7=1026
1009+10+7=1026
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),ee={href:"https://github.com/trydofor/professional-meepo/tree/master/meepo/src/test/resources/template/rna/put-use-i.htm",target:"_blank",rel:"noopener noreferrer"},ne=e("code",null,"PUT",-1),ae=e("code",null,"USE",-1),se=t(`<div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token comment">&lt;!-- HI-MEEPO --&gt;</span>
<span class="token comment">&lt;!-- RNA:PUT js/calc/1009+10+7/ --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token comment">&lt;!-- RNA:USE /result/calc/* --&gt;</span>
1009+10+7=result
1009+10+7=result
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="b2-9-execute-every-time-js-counter" tabindex="-1"><a class="header-anchor" href="#b2-9-execute-every-time-js-counter"><span>B2.9.Execute Every Time, JS Counter</span></a></h2>`,2),te={href:"https://github.com/trydofor/professional-meepo/tree/master/meepo/src/test/resources/template/rna/run-any-o.htm",target:"_blank",rel:"noopener noreferrer"},le=t(`<div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
i=1009+10+7=1026
i++ == 1027
i++ == 1028
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),oe={href:"https://github.com/trydofor/professional-meepo/tree/master/meepo/src/test/resources/template/rna/run-any-i.htm",target:"_blank",rel:"noopener noreferrer"},ie=t(`<div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token comment">&lt;!-- HI-MEEPO --&gt;</span>
<span class="token comment">&lt;!-- RNA:RUN js//i=1009+10+7/ --&gt;</span>
<span class="token comment">&lt;!-- RNA:RUN js/counter/i++;i.toFixed()/* --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
i=1009+10+7=1026
i++ == counter
i++ == counter
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="b2-a-import-static-text-at-runtime" tabindex="-1"><a class="header-anchor" href="#b2-a-import-static-text-at-runtime"><span>B2.A.Import Static Text at Runtime</span></a></h2><p>Use the <code>uri</code> engine to read external resources such as <code>file://</code>, <code>classpath:</code> and <code>http://</code>.</p>`,3),ce={href:"https://github.com/trydofor/professional-meepo/tree/master/meepo/src/test/resources/template/imp/import-o.htm",target:"_blank",rel:"noopener noreferrer"},pe=e("div",{class:"language-html line-numbers-mode","data-ext":"html","data-title":"html"},[e("pre",{class:"language-html"},[e("code",null,`imported text
`)]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"})])],-1),re={href:"https://github.com/trydofor/professional-meepo/tree/master/meepo/src/test/resources/template/imp/import-i.htm",target:"_blank",rel:"noopener noreferrer"},de={href:"https://github.com/trydofor/professional-meepo/tree/master/meepo/src/test/resources/template/imp/import-f.htm",target:"_blank",rel:"noopener noreferrer"},ue=t(`<div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token comment">&lt;!-- HI-MEEPO --&gt;</span>
<span class="token comment">&lt;!-- RNA:RUN uri#import-here#classpath:/template/imp/import-f.htm# --&gt;</span>
import-here
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="b2-b-execute-java-code-compile-dynamically" tabindex="-1"><a class="header-anchor" href="#b2-b-execute-java-code-compile-dynamically"><span>B2.B.Execute java Code, Compile Dynamically</span></a></h2>`,2),me={href:"https://github.com/trydofor/professional-meepo/tree/master/meepo/src/test/resources/template/java/compile-java-o.htm",target:"_blank",rel:"noopener noreferrer"},he=e("div",{class:"language-html line-numbers-mode","data-ext":"html","data-title":"html"},[e("pre",{class:"language-html"},[e("code",null,`2020-07-09 00:00:00
`)]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"})])],-1),be={href:"https://github.com/trydofor/professional-meepo/tree/master/meepo/src/test/resources/template/java/compile-java-i.htm",target:"_blank",rel:"noopener noreferrer"},ve=t(`<div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token comment">&lt;!-- HI-MEEPO --&gt;</span>
<span class="token comment">&lt;!-- RNA:RUN java#java-output#
import java.time.LocalTime, java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;

LocalDate date = LocalDate.parse(&quot;2020-07-09&quot;);
LocalDateTime ldt = LocalDateTime.of(date, LocalTime.of(0, 0, 0));
DateTimeFormatter fmt = DateTimeFormatter.ofPattern(&quot;yyyy-MM-dd HH:mm:ss&quot;);
return ldt.format(fmt);
# --&gt;</span>
java-output
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="b2-c-customize-delimiter-instead-of-slash" tabindex="-1"><a class="header-anchor" href="#b2-c-customize-delimiter-instead-of-slash"><span>B2.C.Customize Delimiter Instead of Slash</span></a></h2><p>The <code>delimiter</code> is the 1st non-(<code>blank</code>, <code>!</code>, <code>alphanum</code>) 1-2 byte char, commonly used as <code>/</code>, unicode characters, just avoid repeating it in the content, however, 3,4 byte chars like 👹 are not allowed, <code>getChar</code> will not work correctly.</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">// RNA:RUN js/counter/i++;i.toFixed()/</span>
<span class="token comment">// RNA:RUN js:counter:i++;i.toFixed():</span>
<span class="token comment">// RNA:RUN js|counter|i++;i.toFixed()|</span>
<span class="token comment">// RNA:RUN js汉counter汉i++;i.toFixed()汉</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="b2-d-auto-indent-multi-lines-nice-and-easy" tabindex="-1"><a class="header-anchor" href="#b2-d-auto-indent-multi-lines-nice-and-easy"><span>B2.D.Auto-Indent Multi Lines, Nice and Easy</span></a></h2>`,5),ge={href:"https://github.com/trydofor/professional-meepo/tree/master/meepo/src/test/java/pro/fessional/meepo/tmpl/JavaTest.java",target:"_blank",rel:"noopener noreferrer"},ke=e("code",null,"variable",-1),fe=t(`<div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>c.put(&quot;method&quot;, Arrays.asList(&quot;LocalDate date = LocalDate.parse(\\&quot;2020-07-09\\&quot;);\\n&quot;,
                &quot;LocalDateTime ldt = LocalDateTime.of(date, LocalTime.of(0, 0, 0));\\n&quot;,
                &quot;DateTimeFormatter fmt = DateTimeFormatter.ofPattern(\\&quot;yyyy-MM-dd HH:mm:ss\\&quot;);\\n&quot;,
                &quot;return ldt.format(fmt);&quot;));
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),ye={href:"https://github.com/trydofor/professional-meepo/tree/master/meepo/src/test/resources/pro/fessional/meepo/poof/impl/java/JavaOut.java",target:"_blank",rel:"noopener noreferrer"},_e=t(`<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code>    <span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">eval</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NotNull</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> ctx<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">LocalDate</span> date <span class="token operator">=</span> <span class="token class-name">LocalDate</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token string">&quot;2020-07-09&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">LocalDateTime</span> ldt <span class="token operator">=</span> <span class="token class-name">LocalDateTime</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>date<span class="token punctuation">,</span> <span class="token class-name">LocalTime</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">DateTimeFormatter</span> fmt <span class="token operator">=</span> <span class="token class-name">DateTimeFormatter</span><span class="token punctuation">.</span><span class="token function">ofPattern</span><span class="token punctuation">(</span><span class="token string">&quot;yyyy-MM-dd HH:mm:ss&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> ldt<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>fmt<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>If the <code>variable</code> is a string with <code>\\n</code> instead of a collection, the effect will be like this,</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code>    <span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">eval</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NotNull</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> ctx<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">LocalDate</span> date <span class="token operator">=</span> <span class="token class-name">LocalDate</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token string">&quot;2020-07-09&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">LocalDateTime</span> ldt <span class="token operator">=</span> <span class="token class-name">LocalDateTime</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>date<span class="token punctuation">,</span> <span class="token class-name">LocalTime</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">DateTimeFormatter</span> fmt <span class="token operator">=</span> <span class="token class-name">DateTimeFormatter</span><span class="token punctuation">.</span><span class="token function">ofPattern</span><span class="token punctuation">(</span><span class="token string">&quot;yyyy-MM-dd HH:mm:ss&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">return</span> ldt<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>fmt<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="b2-e-how-to-customize-function" tabindex="-1"><a class="header-anchor" href="#b2-e-how-to-customize-function"><span>B2.E.How to Customize Function</span></a></h2><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>/* HI-MEEPO */
/* RNA:PUT fun/fun:abs/return Math.abs(((Number)obj).intValue())/ */
/* RNA:USE /abs/number|fun:abs/*/
abs
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The above template, using <code>RNA:PUT</code> and <code>fun</code> engine puts a <code>function</code> named <code>fun:abs</code> into the context. When merging, context.put(&quot;number&quot;,-1), the template output is <code>1</code>, see <code>testFunAbs</code> for details.</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> ctx<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Function</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Number</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> abs<span class="token operator">=</span>number<span class="token operator">-&gt;</span><span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span>number<span class="token punctuation">.</span><span class="token function">intValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
ctx<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;fun:abs&quot;</span><span class="token punctuation">,</span>abs<span class="token punctuation">)</span><span class="token punctuation">;</span>
ctx<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;number&quot;</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// rna:use /now/number|abs/</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The above is the runtime java code to do the same thing, see more,</p><ul><li>pipelined function, chain processing</li><li>dynamic java function <code>fun</code></li></ul><h2 id="b2-f-placeholder-template" tabindex="-1"><a class="header-anchor" href="#b2-f-placeholder-template"><span>B2.F.Placeholder Template</span></a></h2><p>No need to use the whole Meepo template, just handle template variable replacement and function call, the following 2 lines are input and output respectively.</p><p>Where <code>{{moilion-circle|PascalCase}}</code> is, the template defined variable and function substitution.</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>&quot;this is {{moilion-circle|PascalCase}} simple template&quot;
&quot;this is MoilionCircle simple template&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="b2-g-widget-features" tabindex="-1"><a class="header-anchor" href="#b2-g-widget-features"><span>B2.G.Widget Features</span></a></h2><p>Widget is a combination of View and Model, <code>PUT</code> inside <code>SON</code> is a component.</p><p>For example, the TopHead of a website usually loads the Model according to the id, and the template engine renders the View to get the output output.</p><p>The template engine supports the include function, but will not load the Model, because V and M should not be supported if their responsibilities are different.</p><p>In practice, we would prefer to have the Model loaded when the TopHead is included in the View layer. Not the View layer include once, and the Controller layer include again to load Model data.</p><p>Meepo has the ability to change the context at runtime, i.e., it can load the Model itself and turn it into a component. In the context of this article, import is the dynamic RNA category and include is the static DNA category.</p>`,19),xe={href:"https://github.com/trydofor/professional-meepo/tree/master/meepo/src/test/resources/template/son/include-i2.htm",target:"_blank",rel:"noopener noreferrer"},we=t(`<div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="language-xml"><code><span class="token comment">&lt;!-- HI-MEEPO --&gt;</span>
<span class="token comment">&lt;!-- DNA:SON ./include-f.txt --&gt;</span>
since 2020-02-02
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),Te={href:"https://github.com/trydofor/professional-meepo/tree/master/meepo/src/test/resources/template/son/include-f.txt",target:"_blank",rel:"noopener noreferrer"},Ee=t(`<div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code># HI-MEEPO
# DNA:SET /name/trydofor/
# RNA:USE /domain/gmail/
author = name@domain
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),je={href:"https://github.com/trydofor/professional-meepo/tree/master/meepo/src/test/resources/template/son/include-o.htm",target:"_blank",rel:"noopener noreferrer"},Ne=t(`<div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>author = trydofor@gmail.com

since 2020-02-02

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1);function De(Me,Be){const a=o("ExternalLinkIcon");return i(),c("div",null,[r,e("ul",null,[e("li",null,[e("a",d,[n("thymeleaf template"),s(a)])]),e("li",null,[e("a",u,[n("pebble template"),s(a)])]),e("li",null,[e("a",m,[n("template-benchmark"),s(a)])])]),h,e("p",null,[n("The underlying template "),e("a",b,[n("blog-trim.peb"),s(a)]),n(" cannot be handled effectively in "),v,n(" and "),g,n(" syntax, although the IDE plugin is able to recognize "),k,n(" syntax.")]),f,e("p",null,[n("The same output "),e("a",y,[n("blog-trim.htm"),s(a)]),n(", which retains the original html and js features, can be edited as html. It can also be edited with the pebble plugin.")]),_,e("p",null,[n("The underlying template "),e("a",x,[n("blog-pure.peb"),s(a)]),n(", Note that there is a blank line before "),w,n(" and a total of 4x3=12 spaces before "),T,n(".")]),E,e("p",null,[n("Output results of "),e("a",j,[n("replace-all-o.htm"),s(a)])]),N,e("p",null,[n("Meepo template for "),e("a",D,[n("replace-all-i.htm"),s(a)]),n(", using "),M,n(" for anonymous global replacement.")]),B,e("p",null,[n("Output results of "),e("a",q,[n("replace-1a3-o.htm"),s(a)])]),A,e("p",null,[n("Meepo template for "),e("a",I,[n("replace-1a3-i.htm"),s(a)]),n(", using "),O,n(" comma-separated number confirmation.")]),R,e("p",null,[n("Output results of "),e("a",S,[n("replace-end-o.htm"),s(a)])]),P,e("p",null,[n("Meepo template for "),e("a",H,[n("replace-end-i.htm"),s(a)]),n(", using "),L,n(" and named lifecircle.")]),F,e("p",null,[n("Output results of "),e("a",U,[n("black-king-bar-o.htm"),s(a)])]),C,e("p",null,[n("Meepo template for "),e("a",z,[n("black-king-bar-i.htm"),s(a)]),n(", using "),V,n(" and named lifecircle.")]),W,e("p",null,[n("Output results of "),e("a",G,[n("delete-1a3-o.htm"),s(a)])]),J,e("p",null,[n("Meepo template for "),e("a",K,[n("delete-1a3-i.htm"),s(a)]),n(", Delete (replace with empty) the 1st and 3rd matching lines.")]),Z,e("p",null,[n("Meepo template for "),e("a",Q,[n("delete-all-i.htm"),s(a)]),n(", Delete body and all while.")]),X,e("p",null,[n("Output results of "),e("a",Y,[n("put-use-o.htm"),s(a)])]),$,e("p",null,[n("Meepo template for "),e("a",ee,[n("put-use-i.htm"),s(a)]),n(", single execution with "),ne,n(" and "),ae,n(" everywhere.")]),se,e("p",null,[n("Output results of "),e("a",te,[n("run-any-o.htm"),s(a)])]),le,e("p",null,[n("Meepo template for "),e("a",oe,[n("run-any-i.htm"),s(a)]),n(", using RUN and js execution engine.")]),ie,e("p",null,[n("Output results of "),e("a",ce,[n("import-o.htm"),s(a)])]),pe,e("p",null,[n("Meepo template for "),e("a",re,[n("import-i.htm"),s(a)]),n(", read "),e("a",de,[n("import-f.htm"),s(a)])]),ue,e("p",null,[n("Output results of "),e("a",me,[n("compile-java-o.htm"),s(a)])]),he,e("p",null,[n("Meepo template for "),e("a",be,[n("compile-java-i.htm"),s(a)])]),ve,e("p",null,[n("In the test "),e("a",ge,[n("JavaTest.java"),s(a)]),n(", "),ke,n(" is a collection, its elements come with newlines.")]),fe,e("p",null,[n("will output with indented "),e("a",ye,[n("JavaOut.java"),s(a)])]),_e,e("p",null,[n("Import sub-template with relative path "),e("a",xe,[n("include-i2.htm"),s(a)])]),we,e("p",null,[n("The content of sub-template "),e("a",Te,[n("include-f.txt"),s(a)])]),Ee,e("p",null,[n("Meepo template for "),e("a",je,[n("include-o.htm"),s(a)])]),Ne])}const Ie=l(p,[["render",De],["__file","b2.example.html.vue"]]),Oe=JSON.parse('{"path":"/b-meepo/b2.example.html","title":"B2.Usage Example","lang":"en-US","frontmatter":{"isOriginal":true,"icon":"palette","category":["Meepo","Template"],"description":"B2.Usage Example The translation of the Meepo template does NOT depend on any other template. Pebble is here for testing and demo only, as its benchmark and syntax are better. T...","GIT_REPO_HEAD":"2024-05-04 5f8d5046d9ba71ea39889145bdfcb0cec1b14a03","head":[["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://wings.fessional.pro/zh/b-meepo/b2.example.html"}],["meta",{"property":"og:url","content":"https://wings.fessional.pro/b-meepo/b2.example.html"}],["meta",{"property":"og:site_name","content":"WingsBoot Win Sprint"}],["meta",{"property":"og:title","content":"B2.Usage Example"}],["meta",{"property":"og:description","content":"B2.Usage Example The translation of the Meepo template does NOT depend on any other template. Pebble is here for testing and demo only, as its benchmark and syntax are better. T..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-12-11T04:24:49.000Z"}],["meta",{"property":"article:author","content":"trydofor"}],["meta",{"property":"article:modified_time","content":"2023-12-11T04:24:49.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"B2.Usage Example\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-12-11T04:24:49.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"trydofor\\",\\"url\\":\\"https://www.trydofor.com\\"}]}"]]},"headers":[{"level":2,"title":"B2.1.Ignore Blank in Directive, Readability First","slug":"b2-1-ignore-blank-in-directive-readability-first","link":"#b2-1-ignore-blank-in-directive-readability-first","children":[]},{"level":2,"title":"B2.2.Keep Blank in Directive, Consistency First","slug":"b2-2-keep-blank-in-directive-consistency-first","link":"#b2-2-keep-blank-in-directive-consistency-first","children":[]},{"level":2,"title":"B2.3.Replace All with Anonymous Global","slug":"b2-3-replace-all-with-anonymous-global","link":"#b2-3-replace-all-with-anonymous-global","children":[]},{"level":2,"title":"B2.4.Replace Interval with Specified Range","slug":"b2-4-replace-interval-with-specified-range","link":"#b2-4-replace-interval-with-specified-range","children":[]},{"level":2,"title":"B2.5.Replace Range with Named Global","slug":"b2-5-replace-range-with-named-global","link":"#b2-5-replace-range-with-named-global","children":[]},{"level":2,"title":"B2.6.Keeping the Original, Magic Immunity BKB","slug":"b2-6-keeping-the-original-magic-immunity-bkb","link":"#b2-6-keeping-the-original-magic-immunity-bkb","children":[]},{"level":2,"title":"B2.7.Delete Line/Block, actually replace with Empty","slug":"b2-7-delete-line-block-actually-replace-with-empty","link":"#b2-7-delete-line-block-actually-replace-with-empty","children":[]},{"level":2,"title":"B2.8.Execute Once, Stored in Model","slug":"b2-8-execute-once-stored-in-model","link":"#b2-8-execute-once-stored-in-model","children":[]},{"level":2,"title":"B2.9.Execute Every Time, JS Counter","slug":"b2-9-execute-every-time-js-counter","link":"#b2-9-execute-every-time-js-counter","children":[]},{"level":2,"title":"B2.A.Import Static Text at Runtime","slug":"b2-a-import-static-text-at-runtime","link":"#b2-a-import-static-text-at-runtime","children":[]},{"level":2,"title":"B2.B.Execute java Code, Compile Dynamically","slug":"b2-b-execute-java-code-compile-dynamically","link":"#b2-b-execute-java-code-compile-dynamically","children":[]},{"level":2,"title":"B2.C.Customize Delimiter Instead of Slash","slug":"b2-c-customize-delimiter-instead-of-slash","link":"#b2-c-customize-delimiter-instead-of-slash","children":[]},{"level":2,"title":"B2.D.Auto-Indent Multi Lines, Nice and Easy","slug":"b2-d-auto-indent-multi-lines-nice-and-easy","link":"#b2-d-auto-indent-multi-lines-nice-and-easy","children":[]},{"level":2,"title":"B2.E.How to Customize Function","slug":"b2-e-how-to-customize-function","link":"#b2-e-how-to-customize-function","children":[]},{"level":2,"title":"B2.F.Placeholder Template","slug":"b2-f-placeholder-template","link":"#b2-f-placeholder-template","children":[]},{"level":2,"title":"B2.G.Widget Features","slug":"b2-g-widget-features","link":"#b2-g-widget-features","children":[]}],"git":{"createdTime":1680228107000,"updatedTime":1702268689000,"contributors":[{"name":"trydofor","email":"trydofor@gmail.com","commits":3}]},"readingTime":{"minutes":6.02,"words":1806},"filePathRelative":"b-meepo/b2.example.md","localizedDate":"March 31, 2023","autoDesc":true}');export{Ie as comp,Oe as data};
