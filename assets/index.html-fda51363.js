import{_ as i}from"./warlock_icon-b4d63dd5.js";import{_ as o,Y as n,Z as c,a0 as a,a1 as r,a5 as l,a2 as e,a4 as u,D as h}from"./framework-9e4b0469.js";const d={},s=u('<h1 id="_4-术士大叔" tabindex="-1"><a class="header-anchor" href="#_4-术士大叔" aria-hidden="true">#</a> 4.术士大叔</h1><p><img src="'+i+'" alt="warlock"></p><blockquote><p>无视魔免的地狱火加上致命链接，可以瞬间改变局势。</p></blockquote><p>基于Faceless和Slardar，提供了基本用户，鉴权授权，访问控制，数据隔离等功能。</p><h2 id="_4-1-模块划分" tabindex="-1"><a class="header-anchor" href="#_4-1-模块划分" aria-hidden="true">#</a> 4.1.模块划分</h2><ul><li>warlock - 集成jooq和slardar</li><li>warlock-shadow - 集成slardar-sprint</li><li>warlock-bond - 集成登录授权的实现</li><li>warlock-codegen - 工程代码生成</li><li>warlock-test - 测试包，安全的登录</li></ul><h2 id="_4-2-访问控制" tabindex="-1"><a class="header-anchor" href="#_4-2-访问控制" aria-hidden="true">#</a> 4.2.访问控制</h2><p>Warlock的访问控制，聚焦在以下几个场景和技术层面，</p><ul><li>Filter(Url) - 粗粒度控制场景，如角色，职能</li><li>Method(Aop) - 细粒度控制功能，如读取，写入，删除</li><li>Data - 数据隔离，如对象控制，ACL</li></ul><p>通过Url前缀特征，比较集中和简单，推荐使用。而Aop比较分散，粒度更细致。</p><p>在做Url的Matcher时，尽量避免规则交叉，特殊配置在前，AnyRequest在最后做默认配置， 当规则有交叉时，按FIFO匹配，spring中的调用关系如下，其底层数据结构是LinkedHashMap。</p><ul><li>FilterSecurityInterceptor.beforeInvocation</li><li>DefaultFilterInvocationSecurityMetadataSource.getAttributes</li></ul><p>wings配置顺序由宽松到严格(PermitAll &gt; Authenticated &gt; Authority)，最后AnyRequest收尾。 在Authority配置时，会按URL分组合并权限，以URL的ascii倒序排序，即英数先于<code>*</code>，宽松规则在后。</p><h2 id="_4-3-部分使用" tabindex="-1"><a class="header-anchor" href="#_4-3-部分使用" aria-hidden="true">#</a> 4.3.部分使用</h2><p>Warlock提供了一套预定义的auth-perm-role体系，包括表结构，数据关系等。</p><p>默认实现的authn-authz和perm-role体系，依赖于全局UserId，具有一定限制。 任何系统中，登录及权限都有重要的安防和性能意义，通常有较高的集成度和复杂度。 所以，在部分使用此功能时，需要逐一排查配置项及注入的Bean。</p><p>默认实现中，读取及累积计数时，若数据库不存在对应表，则返回empty或忽略。</p><h2 id="_4-4-全部使用" tabindex="-1"><a class="header-anchor" href="#_4-4-全部使用" aria-hidden="true">#</a> 4.4.全部使用</h2><p>WebSecurity在SpringBoot(3.0以前)需要继承Adapter实现配置，其约束很多， 因此在使用wings提供的自动配置功能时，需要注意以下特殊Bean的声明。</p><ul><li>WebSecurity - expose WebSecurityCustomizer Bean</li><li>HttpWebSecurity - expose HttpSecurityCustomizer Bean</li></ul><p>自定义WebSecurityConfigurerAdapter，需要注意Bean的生命周期和顺序关系。</p><blockquote><p>Is there an unresolvable circular reference? Error creating bean with name &#39;springSecurityFilterChain&#39;: Requested bean is currently in creation.</p></blockquote><p>以上错误，会发生在注入WebSecurityConfiguration的<code>@Bean</code>时。 总之，WebSecurity有特殊Bean，Configurer的链式调用也有顺序要求。</p><h2 id="_4-5-更多章节" tabindex="-1"><a class="header-anchor" href="#_4-5-更多章节" aria-hidden="true">#</a> 4.5.更多章节</h2>',24);function p(_,f){const t=h("RouterLink");return n(),c("div",null,[s,a("ul",null,[a("li",null,[r(t,{to:"/4-warlock/4a-authn.html"},{default:l(()=>[e("集成登录")]),_:1}),e(" - 多种登录方式，身份验证和令牌策略")]),a("li",null,[r(t,{to:"/4-warlock/4b-authz.html"},{default:l(()=>[e("组合授权")]),_:1}),e(" - 权限(Perm)和角色(Role)的令牌体系")]),a("li",null,[r(t,{to:"/4-warlock/4c-security.html"},{default:l(()=>[e("安全定制")]),_:1}),e(" - 定制登录，验证，授权")]),a("li",null,[r(t,{to:"/4-warlock/4e-tweak.html"},{default:l(()=>[e("动态调节")]),_:1}),e(" - 全局及线程级调试时间，日志和异常")]),a("li",null,[r(t,{to:"/4-warlock/4f-api-oauth.html"},{default:l(()=>[e("对外Api")]),_:1}),e(" - 限定功能的对外Api")]),a("li",null,[r(t,{to:"/4-warlock/4g-watching.html"},{default:l(()=>[e("调用计时")]),_:1}),e(" - 对慢请求做计时及日志")]),a("li",null,[r(t,{to:"/4-warlock/4h-uni-auth.html"},{default:l(()=>[e("联合登录")]),_:1}),e(" - 在wings应用能实现联合登录")])])])}const b=o(d,[["render",p],["__file","index.html.vue"]]);export{b as default};
