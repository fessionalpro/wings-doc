import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{e as t,g as n,o as i}from"./app-BkDpWcXQ.js";const s={};function d(o,e){return i(),t("div",null,e[0]||(e[0]=[n('<h1 id="_8b-tinytask-properties" tabindex="-1"><a class="header-anchor" href="#_8b-tinytask-properties"><span>8B.TinyTask Properties</span></a></h1><h2 id="_8b-1-wings-enabled-79-properties" tabindex="-1"><a class="header-anchor" href="#_8b-1-wings-enabled-79-properties"><span>8B.1.wings-enabled-79.properties</span></a></h2><h3 id="wings-enabled-tiny-task-autorun" tabindex="-1"><a class="header-anchor" href="#wings-enabled-tiny-task-autorun"><span>wings.enabled.tiny.task.autorun</span></a></h3><p><code>Boolean</code>=<code>true</code>, whether to auto register TinyTask.Auto.</p><h3 id="wings-enabled-tiny-task-mvc-conf" tabindex="-1"><a class="header-anchor" href="#wings-enabled-tiny-task-mvc-conf"><span>wings.enabled.tiny.task.mvc-conf</span></a></h3><p><code>Boolean</code>=<code>true</code>, whether to enable TaskConfController.</p><h3 id="wings-enabled-tiny-task-mvc-exec" tabindex="-1"><a class="header-anchor" href="#wings-enabled-tiny-task-mvc-exec"><span>wings.enabled.tiny.task.mvc-exec</span></a></h3><p><code>Boolean</code>=<code>true</code>, whether to enable TaskExecController.</p><h3 id="wings-enabled-tiny-task-mvc-list" tabindex="-1"><a class="header-anchor" href="#wings-enabled-tiny-task-mvc-list"><span>wings.enabled.tiny.task.mvc-list</span></a></h3><p><code>Boolean</code>=<code>true</code>, whether to enable TaskListController.</p><h2 id="_8b-2-wings-tinytask-exec-79-properties" tabindex="-1"><a class="header-anchor" href="#_8b-2-wings-tinytask-exec-79-properties"><span>8B.2.wings-tinytask-exec-79.properties</span></a></h2><h3 id="wings-tiny-task-exec-dryrun" tabindex="-1"><a class="header-anchor" href="#wings-tiny-task-exec-dryrun"><span>wings.tiny.task.exec.dryrun</span></a></h3><p><code>Boolean</code>=<code>false</code>, whether to dry run, log only without really exec the task.</p><h3 id="wings-tiny-task-exec-notice-prefix" tabindex="-1"><a class="header-anchor" href="#wings-tiny-task-exec-notice-prefix"><span>wings.tiny.task.exec.notice-prefix</span></a></h3><p><code>String</code>=<code>tiny-task</code>, prefix of notice subject.</p><h2 id="_8b-3-wings-flywave-fit-79-properties" tabindex="-1"><a class="header-anchor" href="#_8b-3-wings-flywave-fit-79-properties"><span>8B.3.wings-flywave-fit-79.properties</span></a></h2><h3 id="wings-faceless-flywave-fit-tiny-task" tabindex="-1"><a class="header-anchor" href="#wings-faceless-flywave-fit-tiny-task"><span>wings.faceless.flywave.fit.tiny-task</span></a></h3><p>Database dependency, after import this lib, the script will be auto executed.</p><ul><li><code>path</code>=<code>classpath*:/wings-flywave/master/06-task/*.sql</code></li><li><code>revi</code>=<code>2020_1026_01L</code></li><li><code>lost</code>=<code>EXEC</code></li></ul><h2 id="_8b-4-wings-tinytask-beat-79-properties" tabindex="-1"><a class="header-anchor" href="#_8b-4-wings-tinytask-beat-79-properties"><span>8B.4.wings-tinytask-beat-79.properties</span></a></h2><p>TinyTask&#39;s own tasks, clearing logs and healthy heartbeat.</p><h3 id="wings-tiny-task-define-tinytaskcleanresult" tabindex="-1"><a class="header-anchor" href="#wings-tiny-task-define-tinytaskcleanresult"><span>wings.tiny.task.define[TinyTaskCleanResult]</span></a></h3><p><code>timing-cron</code>=<code>7 11 13 * * *</code>, clean the result at system timezone 13:11:07</p><h3 id="wings-tiny-task-define-tinytaskcheckhealth" tabindex="-1"><a class="header-anchor" href="#wings-tiny-task-define-tinytaskcheckhealth"><span>wings.tiny.task.define[TinyTaskCheckHealth]</span></a></h3><p>Check health status every 347 seconds of idle time.</p><ul><li><code>timing-idle</code>=<code>347</code></li><li><code>notice-when</code>=<code>tail,done</code></li></ul><h2 id="_8b-5-wings-tinytask-define-79-properties" tabindex="-1"><a class="header-anchor" href="#_8b-5-wings-tinytask-define-79-properties"><span>8B.5.wings-tinytask-define-79.properties</span></a></h2><p><code>Default</code> config of task <code>wings.tiny.task.define[default]</code></p><h3 id="wings-tiny-task-define-default-enabled" tabindex="-1"><a class="header-anchor" href="#wings-tiny-task-define-default-enabled"><span>wings.tiny.task.define[default].enabled</span></a></h3><p><code>Boolean</code>=<code>true</code>, whether to register and execute, not use Default config.</p><h3 id="wings-tiny-task-define-default-autorun" tabindex="-1"><a class="header-anchor" href="#wings-tiny-task-define-default-autorun"><span>wings.tiny.task.define[default].autorun</span></a></h3><p><code>Boolean</code>=<code>true</code>, whether to auto register and start, not use Default config.</p><h3 id="wings-tiny-task-define-default-version" tabindex="-1"><a class="header-anchor" href="#wings-tiny-task-define-default-version"><span>wings.tiny.task.define[default].version</span></a></h3><p><code>Integer</code>=<code>0</code>, config version number, higher version overrides lower one, when equals, properties override database, not use Default config.</p><h3 id="wings-tiny-task-define-default-tasker-bean" tabindex="-1"><a class="header-anchor" href="#wings-tiny-task-define-default-tasker-bean"><span>wings.tiny.task.define[default].tasker-bean</span></a></h3><p><code>String</code>, Beans annotated by TinyTasker, formatted as Class#method, automatically recognized by default, not use Default config.</p><h3 id="wings-tiny-task-define-default-tasker-para" tabindex="-1"><a class="header-anchor" href="#wings-tiny-task-define-default-tasker-para"><span>wings.tiny.task.define[default].tasker-para</span></a></h3><p><code>String</code>=<code>null</code>, Parameters of the task, object array in json format, default null or no parameters, not use Default config.</p><h3 id="wings-tiny-task-define-default-tasker-name" tabindex="-1"><a class="header-anchor" href="#wings-tiny-task-define-default-tasker-name"><span>wings.tiny.task.define[default].tasker-name</span></a></h3><p><code>String</code>, Task name, used for notice and log, better readability, default is <code>[shortClassName#method]</code>, not use Default config.</p><h3 id="wings-tiny-task-define-default-task-fast" tabindex="-1"><a class="header-anchor" href="#wings-tiny-task-define-default-task-fast"><span>wings.tiny.task.define[default].task-fast</span></a></h3><p><code>Boolean</code>=<code>true</code>, Whether it is a light task, fast execution, completed in seconds, not use Default config.</p><h3 id="wings-tiny-task-define-default-tasker-apps" tabindex="-1"><a class="header-anchor" href="#wings-tiny-task-define-default-tasker-apps"><span>wings.tiny.task.define[default].tasker-apps</span></a></h3><p><code>String</code>=<code>${spring.application.name}</code>, The app it belongs to, comma separated, use Default config if null or empty.</p><h3 id="wings-tiny-task-define-default-tasker-runs" tabindex="-1"><a class="header-anchor" href="#wings-tiny-task-define-default-tasker-runs"><span>wings.tiny.task.define[default].tasker-runs</span></a></h3><p><code>String</code>, RunMode(product|test|develop|local), <code>!test</code>,<code>-test</code> means NOT(veto) <code>test</code>, Comma separated, ignore case, default all, use Default config if null or empty.</p><h3 id="wings-tiny-task-define-default-notice-bean" tabindex="-1"><a class="header-anchor" href="#wings-tiny-task-define-default-notice-bean"><span>wings.tiny.task.define[default].notice-bean</span></a></h3><p><code>String</code>=<code>pro.fessional.wings.slardar.notice.DingTalkNotice</code></p><p>Notice bean, SmallNotice type, fullpath of Class, no notice by default. use Default config if null or empty.</p><h3 id="wings-tiny-task-define-default-notice-when" tabindex="-1"><a class="header-anchor" href="#wings-tiny-task-define-default-notice-when"><span>wings.tiny.task.define[default].notice-when</span></a></h3><p><code>String</code>=<code>fail</code>, Timing of notice, exec|fail|done|feed, comma separated ignoring case, default fail. use Default config if null or empty.</p><ul><li>timing is roughly expressed: exec;try{run...;done}catch{fail}</li><li>exec - init task; done - success; fail - failed; feed - non-empty return.</li></ul><h3 id="wings-tiny-task-define-default-notice-conf" tabindex="-1"><a class="header-anchor" href="#wings-tiny-task-define-default-notice-conf"><span>wings.tiny.task.define[default].notice-conf</span></a></h3><p><code>String</code>, The config name of the notice bean, automatic by default. use Default config if empty.</p><h3 id="wings-tiny-task-define-default-timing-zone" tabindex="-1"><a class="header-anchor" href="#wings-tiny-task-define-default-timing-zone"><span>wings.tiny.task.define[default].timing-zone</span></a></h3><p><code>String</code>, timezone of scheduling , default system timezone, use Default config if null or empty.</p><h3 id="wings-tiny-task-define-default-timing-type" tabindex="-1"><a class="header-anchor" href="#wings-tiny-task-define-default-timing-type"><span>wings.tiny.task.define[default].timing-type</span></a></h3><p><code>String</code>=<code>cron</code>, scheduling expression type, affects how timingCron is parsed, defaults to spring cron format, use Default config if null or empty.</p><h3 id="wings-tiny-task-define-default-timing-cron" tabindex="-1"><a class="header-anchor" href="#wings-tiny-task-define-default-timing-cron"><span>wings.tiny.task.define[default].timing-cron</span></a></h3><p><code>String</code>, Scheduling expression content, highest priority, affected by timingType, default spring cron format (second minute hour day month week), not use Default config.</p><h3 id="wings-tiny-task-define-default-timing-idle" tabindex="-1"><a class="header-anchor" href="#wings-tiny-task-define-default-timing-idle"><span>wings.tiny.task.define[default].timing-idle</span></a></h3><p><code>Integer</code>=<code>0</code>, Fixed idle interval (seconds), lower priority than timingCron, equal to fixedDelay, end to start, 0 means disable, not use Default config.</p><h3 id="wings-tiny-task-define-default-timing-rate" tabindex="-1"><a class="header-anchor" href="#wings-tiny-task-define-default-timing-rate"><span>wings.tiny.task.define[default].timing-rate</span></a></h3><p><code>Integer</code>=<code>0</code>, Fixed frequency interval (seconds), lower priority than timingIdle, equal to fixedRate, start to start, 0 means disable, not use Default config.</p><h3 id="wings-tiny-task-define-default-timing-tune" tabindex="-1"><a class="header-anchor" href="#wings-tiny-task-define-default-timing-tune"><span>wings.tiny.task.define[default].timing-tune</span></a></h3><p><code>Integer</code>=<code>0</code>, execute the task before(negative) or after tune seconds, not use Default config. like Scheduled.initialDelay, but</p><ul><li>rate - first time on this jvm</li><li>idle - first time on this jvm</li><li>cron - each time</li></ul><h3 id="wings-tiny-task-define-default-timing-miss" tabindex="-1"><a class="header-anchor" href="#wings-tiny-task-define-default-timing-miss"><span>wings.tiny.task.define[default].timing-miss</span></a></h3><p><code>Long</code>=<code>0</code>, Within how many seconds of a misfire, execution is required, not use Default config.</p><ul><li><code>&lt;0</code> - execute as <code>0</code> if now + miss * 1000 &gt;= 0</li><li><code>0</code> - execute if N0 &lt; now &lt;= N0 + (N1-N0) * 25% &lt; N1</li><li><code>&gt;0</code> - execute if N1 &lt; now &lt;= N1 + miss * 1000</li></ul><h3 id="wings-tiny-task-define-default-timing-beat" tabindex="-1"><a class="header-anchor" href="#wings-tiny-task-define-default-timing-beat"><span>wings.tiny.task.define[default].timing-beat</span></a></h3><p><code>Long</code>=<code>0</code>, the interval seconds of heartbeat and health-check, not use Default config. it is considered as an exception if the last_exec is more than 2 heartbeats away from now.</p><ul><li><code>&lt;0</code> - calculate as <code>0</code> if now + beat * 1000 &gt;= 0</li><li><code>0</code> - auto calculate, <ul><li>when cron, calc next_exec from last_exec,</li><li>others, max rate and idle</li></ul></li><li><code>&gt;0</code> - fixed positive seconds</li></ul><h3 id="wings-tiny-task-define-default-during-from" tabindex="-1"><a class="header-anchor" href="#wings-tiny-task-define-default-during-from"><span>wings.tiny.task.define[default].during-from</span></a></h3><p><code>String</code>, schedule start datetime at timingZone, in yyyy-MM-dd HH:mm:ss format, 0 means disable, not use Default config.</p><h3 id="wings-tiny-task-define-default-during-stop" tabindex="-1"><a class="header-anchor" href="#wings-tiny-task-define-default-during-stop"><span>wings.tiny.task.define[default].during-stop</span></a></h3><p><code>String</code>, schedule stop datetime at timingZone, in yyyy-MM-dd HH:mm:ss format, 0 means disable, not use Default config.</p><h3 id="wings-tiny-task-define-default-during-exec" tabindex="-1"><a class="header-anchor" href="#wings-tiny-task-define-default-during-exec"><span>wings.tiny.task.define[default].during-exec</span></a></h3><p><code>Integer</code>=<code>0</code>, stop schedule after how many total executions, not use Default config.</p><h3 id="wings-tiny-task-define-default-during-fail" tabindex="-1"><a class="header-anchor" href="#wings-tiny-task-define-default-during-fail"><span>wings.tiny.task.define[default].during-fail</span></a></h3><p><code>Integer</code>=<code>0</code>, stop schedule after how many consecutive failures, not use Default config.</p><h3 id="wings-tiny-task-define-default-during-done" tabindex="-1"><a class="header-anchor" href="#wings-tiny-task-define-default-during-done"><span>wings.tiny.task.define[default].during-done</span></a></h3><p><code>Integer</code>=<code>0</code>, stop schedule after how many successful executions, not use Default config.</p><h3 id="wings-tiny-task-define-default-during-boot" tabindex="-1"><a class="header-anchor" href="#wings-tiny-task-define-default-during-boot"><span>wings.tiny.task.define[default].during-boot</span></a></h3><p><code>Integer</code>=<code>0</code>, recount each time the app is started, and stop schedule after how many successful executions, disable by default, not use Default config.</p><h3 id="wings-tiny-task-define-default-result-keep" tabindex="-1"><a class="header-anchor" href="#wings-tiny-task-define-default-result-keep"><span>wings.tiny.task.define[default].result-keep</span></a></h3><p><code>Integer</code>=<code>60</code>, how many days to save the execution results, default 60 days, 0 means not save, use Default configuration if null.</p><h2 id="_8b-6-wings-tinytask-urlmap-79-properties" tabindex="-1"><a class="header-anchor" href="#_8b-6-wings-tinytask-urlmap-79-properties"><span>8B.6.wings-tinytask-urlmap-79.properties</span></a></h2><p>URL of builtin features.</p><h3 id="wings-tiny-task-urlmap-task-running" tabindex="-1"><a class="header-anchor" href="#wings-tiny-task-urlmap-task-running"><span>wings.tiny.task.urlmap.task-running</span></a></h3><p><code>String</code>=<code>/admin/task/task-running.json</code>, list of running tasks.</p><h3 id="wings-tiny-task-urlmap-task-defined" tabindex="-1"><a class="header-anchor" href="#wings-tiny-task-urlmap-task-defined"><span>wings.tiny.task.urlmap.task-defined</span></a></h3><p><code>String</code>=<code>/admin/task/task-defined.json</code>, list of defined tasks.</p><h3 id="wings-tiny-task-urlmap-task-result" tabindex="-1"><a class="header-anchor" href="#wings-tiny-task-urlmap-task-result"><span>wings.tiny.task.urlmap.task-result</span></a></h3><p><code>String</code>=<code>/admin/task/task-result.json</code>, list of task results.</p><h3 id="wings-tiny-task-urlmap-task-cancel" tabindex="-1"><a class="header-anchor" href="#wings-tiny-task-urlmap-task-cancel"><span>wings.tiny.task.urlmap.task-cancel</span></a></h3><p><code>String</code>=<code>/admin/task/task-cancel.json</code>, cancel a task.</p><h3 id="wings-tiny-task-urlmap-task-launch" tabindex="-1"><a class="header-anchor" href="#wings-tiny-task-urlmap-task-launch"><span>wings.tiny.task.urlmap.task-launch</span></a></h3><p><code>String</code>=<code>=/admin/task/task-launch.json</code>, start a task.</p><h3 id="wings-tiny-task-urlmap-task-force" tabindex="-1"><a class="header-anchor" href="#wings-tiny-task-urlmap-task-force"><span>wings.tiny.task.urlmap.task-force</span></a></h3><p><code>String</code>=<code>/admin/task/task-force.json</code>, force to start a task.</p><h3 id="wings-tiny-task-urlmap-task-enable" tabindex="-1"><a class="header-anchor" href="#wings-tiny-task-urlmap-task-enable"><span>wings.tiny.task.urlmap.task-enable</span></a></h3><p><code>String</code>=<code>/admin/task/task-enable.json</code>, enable or disable a task.</p><h3 id="wings-tiny-task-urlmap-task-prop-save" tabindex="-1"><a class="header-anchor" href="#wings-tiny-task-urlmap-task-prop-save"><span>wings.tiny.task.urlmap.task-prop-save</span></a></h3><p><code>String</code>=<code>/admin/task/task-prop-save.json</code>, update the task config.</p><h3 id="wings-tiny-task-urlmap-task-prop-load" tabindex="-1"><a class="header-anchor" href="#wings-tiny-task-urlmap-task-prop-load"><span>wings.tiny.task.urlmap.task-prop-load</span></a></h3><p><code>String</code>=<code>/admin/task/task-prop-load.json</code>, load the task config.</p><h3 id="wings-tiny-task-urlmap-task-prop-conf" tabindex="-1"><a class="header-anchor" href="#wings-tiny-task-urlmap-task-prop-conf"><span>wings.tiny.task.urlmap.task-prop-conf</span></a></h3><p><code>String</code>=<code>/admin/task/task-prop-conf.json</code>, show the prop of task conf.</p><h3 id="wings-tiny-task-urlmap-task-prop-diff" tabindex="-1"><a class="header-anchor" href="#wings-tiny-task-urlmap-task-prop-diff"><span>wings.tiny.task.urlmap.task-prop-diff</span></a></h3><p><code>String</code>=<code>/admin/task/task-prop-diff.json</code>, show the diff of task conf.</p>',111)]))}const l=a(s,[["render",d],["__file","8b-prop-tinytask.html.vue"]]),p=JSON.parse('{"path":"/8-radiant/8b-prop-tinytask.html","title":"8B.TinyTask Properties","lang":"en-US","frontmatter":{"isOriginal":true,"icon":"folder-tree","category":["Tiny","Task","Property"],"description":"8B.TinyTask Properties 8B.1.wings-enabled-79.properties wings.enabled.tiny.task.autorun Boolean=true, whether to auto register TinyTask.Auto. wings.enabled.tiny.task.mvc-conf Bo...","GIT_REPO_HEAD":"2025-03-19 e70b762ba982770a7e8c5503035bb9caa61ba629","head":[["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://wings.fessional.pro/zh/8-radiant/8b-prop-tinytask.html"}],["meta",{"property":"og:url","content":"https://wings.fessional.pro/8-radiant/8b-prop-tinytask.html"}],["meta",{"property":"og:site_name","content":"WingsBoot Win Sprint"}],["meta",{"property":"og:title","content":"8B.TinyTask Properties"}],["meta",{"property":"og:description","content":"8B.TinyTask Properties 8B.1.wings-enabled-79.properties wings.enabled.tiny.task.autorun Boolean=true, whether to auto register TinyTask.Auto. wings.enabled.tiny.task.mvc-conf Bo..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-01-09T11:57:11.000Z"}],["meta",{"property":"article:modified_time","content":"2025-01-09T11:57:11.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"8B.TinyTask Properties\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-01-09T11:57:11.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"trydofor\\",\\"url\\":\\"https://www.trydofor.com\\"}]}"]]},"git":{"createdTime":1672191701000,"updatedTime":1736423831000,"contributors":[{"name":"trydofor","username":"trydofor","email":"trydofor@gmail.com","commits":22,"url":"https://github.com/trydofor"}]},"readingTime":{"minutes":3.27,"words":982},"filePathRelative":"8-radiant/8b-prop-tinytask.md","localizedDate":"December 28, 2022","autoDesc":true}');export{l as comp,p as data};
