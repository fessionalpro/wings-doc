const e=JSON.parse('{"key":"v-69b2ffa4","path":"/en/4-warlock/4f-api-oauth.html","title":"4F.Open Api","lang":"en-US","frontmatter":{"isOriginal":true,"icon":"api","category":["Warlock","Security"],"description":"不同于用户登录(BindAuth)，外Api是限定功能的，非SecurityFilter体系。 BindAuth - 以Filter和Cookie为基础，是传统的Broswer-Server模式，简称BS; ApiAuth - 以Token和Signature为基础，是外部的Server-Server模式，简称SS; ServiceComb - 内部的...","GIT_REPO_HEAD":"2023-04-01 6ec8f75e92d77b22580c2ac8d9bc56d4deebef3b","head":[["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://wings.fessional.pro/4-warlock/4f-api-oauth.html"}],["meta",{"property":"og:url","content":"https://wings.fessional.pro/en/4-warlock/4f-api-oauth.html"}],["meta",{"property":"og:site_name","content":"WingsBoot wins bigger"}],["meta",{"property":"og:title","content":"4F.Open Api"}],["meta",{"property":"og:description","content":"不同于用户登录(BindAuth)，外Api是限定功能的，非SecurityFilter体系。 BindAuth - 以Filter和Cookie为基础，是传统的Broswer-Server模式，简称BS; ApiAuth - 以Token和Signature为基础，是外部的Server-Server模式，简称SS; ServiceComb - 内部的..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-03-31T02:01:47.000Z"}],["meta",{"property":"article:author","content":"trydofor"}],["meta",{"property":"article:modified_time","content":"2023-03-31T02:01:47.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"4F.Open Api\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-03-31T02:01:47.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"trydofor\\",\\"url\\":\\"https://www.trydofor.com\\"}]}"]]},"headers":[{"level":2,"title":"4F.1.PostJson模式","slug":"_4f-1-postjson模式","link":"#_4f-1-postjson模式","children":[]},{"level":2,"title":"4F.2.PostFile模式","slug":"_4f-2-postfile模式","link":"#_4f-2-postfile模式","children":[]},{"level":2,"title":"4F.3.Signature Api","slug":"_4f-3-signature-api","link":"#_4f-3-signature-api","children":[{"level":3,"title":"发送Json","slug":"发送json","link":"#发送json","children":[]},{"level":3,"title":"接收Json","slug":"接收json","link":"#接收json","children":[]},{"level":3,"title":"发送File","slug":"发送file","link":"#发送file","children":[]},{"level":3,"title":"接受File","slug":"接受file","link":"#接受file","children":[]}]},{"level":2,"title":"4F.4.OAuth Api","slug":"_4f-4-oauth-api","link":"#_4f-4-oauth-api","children":[{"level":3,"title":"OAuth功能","slug":"oauth功能","link":"#oauth功能","children":[]},{"level":3,"title":"获取Token","slug":"获取token","link":"#获取token","children":[]},{"level":3,"title":"吊销Token","slug":"吊销token","link":"#吊销token","children":[]}]},{"level":2,"title":"4F.5.OkHttpClient","slug":"_4f-5-okhttpclient","link":"#_4f-5-okhttpclient","children":[]}],"git":{"createdTime":1680228107000,"updatedTime":1680228107000,"contributors":[{"name":"trydofor","email":"trydofor@gmail.com","commits":1}]},"readingTime":{"minutes":9.54,"words":2863},"filePathRelative":"en/4-warlock/4f-api-oauth.md","localizedDate":"March 31, 2023","autoDesc":true}');export{e as data};
