import{_ as o}from"./batrider_icon-Bl5V12Js.js";import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as a,o as c,c as n,b as e,e as t,d as l,f as d}from"./app-Bc9xfkIk.js";const s={},p=d('<h1 id="_5-蝙蝠骑士" tabindex="-1"><a class="header-anchor" href="#_5-蝙蝠骑士"><span>5.蝙蝠骑士</span></a></h1><p><img src="'+o+'" alt="batrider"></p><blockquote><p>只要翱翔于天空，可以从四面八方发动攻势。</p></blockquote><p>ServiceComb是一种更紧凑和工程化的微服务及云实现。</p><h2 id="_5-1-模块划分" tabindex="-1"><a class="header-anchor" href="#_5-1-模块划分"><span>5.1.模块划分</span></a></h2><ul><li>batrider - 基于servicecomb的基本设置</li><li>batrider-zero - 组播的registry-zero-config</li><li>batrider-test - 测试包，混合rest和rpc</li></ul><h2 id="_5-2-微服务基本约定" tabindex="-1"><a class="header-anchor" href="#_5-2-微服务基本约定"><span>5.2.微服务基本约定</span></a></h2><ul><li>通讯模型，与SpringMvc共存时为<code>RestOverServlet</code></li><li>编程模型，提供者为<code>SpringMvc</code>，消费者为<code>Rpc</code></li><li>身份验证，为公私钥<code>handler-publickey-auth</code></li><li>rest.urlPattern为<code>/servcomber/*</code></li><li>契约为纯<code>interface</code>，后缀为<code>Contract</code>（相对于<code>Service</code>）</li><li>提供者，后缀为<code>Contractor</code>（对比<code>Controller</code>），包为<code>contractor</code></li><li>消费者，后缀为<code>Contract</code>的接口及注入字段</li><li>默认<code>registry-zero-config</code>，推荐<code>servicecomb-service-center</code></li><li>默认不对外提供网关，与springMvc共存</li><li>异步仅在消费者端实现，提供者默认都是同步服务</li></ul><h2 id="_5-3-基本工程演示" tabindex="-1"><a class="header-anchor" href="#_5-3-基本工程演示"><span>5.3.基本工程演示</span></a></h2><p>可以启动<code>winx-api</code>和<code>batrider-test</code>工程，然后通过swagger演示</p>',10),m={href:"http://localhost:8085/swagger-ui/index.html#/batrider-controller",target:"_blank",rel:"noopener noreferrer"},h=e("li",null,"/batrider/batx-hello-pxy - 通过Invoker调用batrider服务",-1),g=e("li",null,"/batrider/winx-hello-cse - 通过Rest的cse调用winx服务",-1),_=e("li",null,"/batrider/winx-hello-rpc - 通过Rpc调用winx服务",-1);function b(f,u){const r=a("ExternalLinkIcon");return c(),n("div",null,[p,e("ul",null,[e("li",null,[e("a",m,[t("http://localhost:8085/swagger-ui/index.html#/batrider-controller"),l(r)]),t(" - swagger页面")]),h,g,_])])}const w=i(s,[["render",b],["__file","index.html.vue"]]),k=JSON.parse('{"path":"/zh/5-batrider/","title":"5.蝙蝠骑士","lang":"zh-CN","frontmatter":{"isOriginal":true,"icon":"config","category":["蝙蝠","首页"],"description":"5.蝙蝠骑士 batrider 只要翱翔于天空，可以从四面八方发动攻势。 ServiceComb是一种更紧凑和工程化的微服务及云实现。 5.1.模块划分 batrider - 基于servicecomb的基本设置 batrider-zero - 组播的registry-zero-config batrider-test - 测试包，混合rest和rpc...","GIT_REPO_HEAD":"2024-03-21 88538783d43ee3acac2119f83402406f6886a510","head":[["link",{"rel":"alternate","hreflang":"en-us","href":"https://wings.fessional.pro/5-batrider/"}],["meta",{"property":"og:url","content":"https://wings.fessional.pro/zh/5-batrider/"}],["meta",{"property":"og:site_name","content":"WingsBoot 纹丝不忒"}],["meta",{"property":"og:title","content":"5.蝙蝠骑士"}],["meta",{"property":"og:description","content":"5.蝙蝠骑士 batrider 只要翱翔于天空，可以从四面八方发动攻势。 ServiceComb是一种更紧凑和工程化的微服务及云实现。 5.1.模块划分 batrider - 基于servicecomb的基本设置 batrider-zero - 组播的registry-zero-config batrider-test - 测试包，混合rest和rpc..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://wings.fessional.pro/batrider_icon.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2023-06-18T08:37:26.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"5.蝙蝠骑士"}],["meta",{"property":"article:author","content":"trydofor"}],["meta",{"property":"article:modified_time","content":"2023-06-18T08:37:26.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"5.蝙蝠骑士\\",\\"image\\":[\\"https://wings.fessional.pro/batrider_icon.png\\"],\\"dateModified\\":\\"2023-06-18T08:37:26.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"trydofor\\",\\"url\\":\\"https://www.trydofor.com\\"}]}"]]},"headers":[{"level":2,"title":"5.1.模块划分","slug":"_5-1-模块划分","link":"#_5-1-模块划分","children":[]},{"level":2,"title":"5.2.微服务基本约定","slug":"_5-2-微服务基本约定","link":"#_5-2-微服务基本约定","children":[]},{"level":2,"title":"5.3.基本工程演示","slug":"_5-3-基本工程演示","link":"#_5-3-基本工程演示","children":[]}],"git":{"createdTime":1687077446000,"updatedTime":1687077446000,"contributors":[{"name":"trydofor","email":"trydofor@gmail.com","commits":1}]},"readingTime":{"minutes":0.95,"words":286},"filePathRelative":"zh/5-batrider/README.md","localizedDate":"2023年6月18日","autoDesc":true}');export{w as comp,k as data};
