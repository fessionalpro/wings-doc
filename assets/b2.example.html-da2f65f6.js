import{_ as l}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as i,c as p,b as n,e as s,d as e,f as t}from"./app-371aab79.js";const c={},r=n("h1",{id:"b2-应用举例",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#b2-应用举例","aria-hidden":"true"},"#"),s(" B2.应用举例")],-1),d=n("p",null,"米波进行模板翻译，不依赖任何模板，测试和演示时使用pebble，因其benchmark和语法较好。",-1),u=n("p",null,"Pebble，FreeMarker和Velocity此类模板有自己的语法特性，在行业内大量使用。 有些IDE有插件支持，但都是模板语言，而非目标文件的语言的支持，包括语法高亮，纠错等加持。",-1),m=n("p",null,"Thymeleaf(近期停止更新了)类的模板不会破坏目标文件语法，并且应用领域和具体语言特性绑定。",-1),v={href:"https://www.thymeleaf.org/",target:"_blank",rel:"noopener noreferrer"},b={href:"https://pebbletemplates.io/",target:"_blank",rel:"noopener noreferrer"},k={href:"https://github.com/trydofor/template-benchmark",target:"_blank",rel:"noopener noreferrer"},h=t('<p>米波的初衷不是模板的动态控制能力，但使用<code>执行引擎</code>（如js和java）可以做很复杂的功能操作。 尽管从benchmark上看，其性能远高于<code>Freemarker</code>和<code>Velocity</code>，是<code>thymeleaf</code>的3倍， 但并不建议使用米波做工程上的view层渲染，它适合做模板中间层，或叫模板翻译器。</p><p>因markdown对空格和空行有自己的理解，估在精确辨识空格和空行时，请参考链接中的源码。</p><h2 id="b2-1-忽略指令行空白-可读性优先" tabindex="-1"><a class="header-anchor" href="#b2-1-忽略指令行空白-可读性优先" aria-hidden="true">#</a> B2.1.忽略指令行空白，可读性优先</h2>',3),g={href:"https://github.com/trydofor/pro.fessional.meepo/tree/master/meepo/src/test/resources/template/blog/blog-trim.peb",target:"_blank",rel:"noopener noreferrer"},f=t(`<div class="language-pebble line-numbers-mode" data-ext="pebble"><pre class="language-pebble"><code>&lt;body&gt;
  {% for article in articles %}
  &lt;h3&gt;{{ article.title }}&lt;/h3&gt;
  &lt;p&gt;{{ article.content }}&lt;/p&gt;
  {% endfor %}
  &lt;script type=&quot;text/javascript&quot;&gt;
    var machineId = {{machineId}}
  &lt;/script&gt;
&lt;/body&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),_={href:"https://github.com/trydofor/pro.fessional.meepo/tree/master/meepo/src/test/resources/template/blog/blog-trim.htm",target:"_blank",rel:"noopener noreferrer"},y=n("code",null,"!",-1),x=t(`<div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code> <span class="token comment">&lt;!-- HI-MEEPO --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
  <span class="token comment">&lt;!-- DNA:RAW {% for article in articles %} --&gt;</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">&gt;</span></span>{{ article.title }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>{{ article.content }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
  <span class="token comment">&lt;!-- DNA:RAW {% endfor %} --&gt;</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text/javascript<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
    <span class="token comment">// HI-MEEPO</span>
    <span class="token comment">// DNA:SET /&quot;machine-id&quot;/{{machineId}}/</span>
    <span class="token keyword">var</span> machineId <span class="token operator">=</span> <span class="token string">&quot;machine-id&quot;</span>
  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="b2-2-保留指令行空白-一致性优先" tabindex="-1"><a class="header-anchor" href="#b2-2-保留指令行空白-一致性优先" aria-hidden="true">#</a> B2.2.保留指令行空白，一致性优先</h2>`,2),j={href:"https://github.com/trydofor/pro.fessional.meepo/tree/master/meepo/src/test/resources/template/blog/blog-pure.peb",target:"_blank",rel:"noopener noreferrer"},N=n("code",null,"<body>",-1),E=n("code",null,"var",-1),q=t(`<div class="language-pebble line-numbers-mode" data-ext="pebble"><pre class="language-pebble"><code>
&lt;body&gt;
  {% for article in articles %}
  &lt;h3&gt;{{ article.title }}&lt;/h3&gt;
  &lt;p&gt;{{ article.content }}&lt;/p&gt;
  {% endfor %}
  &lt;script type=&quot;text/javascript&quot;&gt;
            var machineId = {{machineId}}
  &lt;/script&gt;
&lt;/body&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),D={href:"https://github.com/trydofor/pro.fessional.meepo/tree/master/meepo/src/test/resources/template/blog/blog-pure.htm",target:"_blank",rel:"noopener noreferrer"},T=n("code",null,"!",-1),A=t(`<div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token comment">&lt;!-- HI-MEEPO! --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
  <span class="token comment">&lt;!-- DNA:RAW {% for article in articles %} --&gt;</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">&gt;</span></span>{{ article.title }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>{{ article.content }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
  <span class="token comment">&lt;!-- DNA:RAW {% endfor %} --&gt;</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text/javascript<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
    <span class="token comment">// HI-MEEPO!</span>
    <span class="token comment">// DNA:SET /&quot;machine-id&quot;/{{machineId}}/</span>
    <span class="token keyword">var</span> machineId <span class="token operator">=</span> <span class="token string">&quot;machine-id&quot;</span>
  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="b2-3-全部替换-使用匿名全局" tabindex="-1"><a class="header-anchor" href="#b2-3-全部替换-使用匿名全局" aria-hidden="true">#</a> B2.3.全部替换，使用匿名全局</h2>`,2),M={href:"https://github.com/trydofor/pro.fessional.meepo/tree/master/meepo/src/test/resources/template/repl/replace-all-o.htm",target:"_blank",rel:"noopener noreferrer"},I=t(`<div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
use anonymous all-life to replace div to div
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),P={href:"https://github.com/trydofor/pro.fessional.meepo/tree/master/meepo/src/test/resources/template/repl/replace-all-i.htm",target:"_blank",rel:"noopener noreferrer"},H=n("code",null,"*",-1),R=t(`<div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token comment">&lt;!-- HI-MEEPO --&gt;</span>
<span class="token comment">&lt;!-- DNA:SET /body/div/* --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
use anonymous all-life to replace body to div
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="b2-4-间隔替换-使用指定范围" tabindex="-1"><a class="header-anchor" href="#b2-4-间隔替换-使用指定范围" aria-hidden="true">#</a> B2.4.间隔替换，使用指定范围</h2>`,2),L={href:"https://github.com/trydofor/pro.fessional.meepo/tree/master/meepo/src/test/resources/template/repl/replace-1a3-o.htm",target:"_blank",rel:"noopener noreferrer"},O=t(`<div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
use ranged-life to replace 1st and 3rd body to div
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),B={href:"https://github.com/trydofor/pro.fessional.meepo/tree/master/meepo/src/test/resources/template/repl/replace-1a3-i.htm",target:"_blank",rel:"noopener noreferrer"},S=n("code",null,"1,3",-1),w=t(`<div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token comment">&lt;!-- HI-MEEPO --&gt;</span>
<span class="token comment">&lt;!-- DNA:SET /body/div/1,3 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
use ranged-life to replace 1st and 3rd body to div
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="b2-5-范围替换-使用命名全局" tabindex="-1"><a class="header-anchor" href="#b2-5-范围替换-使用命名全局" aria-hidden="true">#</a> B2.5.范围替换，使用命名全局</h2>`,2),F={href:"https://github.com/trydofor/pro.fessional.meepo/tree/master/meepo/src/test/resources/template/repl/replace-end-o.htm",target:"_blank",rel:"noopener noreferrer"},U=t(`<div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
use named-life to replace scoped div to div
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),V={href:"https://github.com/trydofor/pro.fessional.meepo/tree/master/meepo/src/test/resources/template/repl/replace-end-i.htm",target:"_blank",rel:"noopener noreferrer"},C=n("code",null,"end",-1),W=t(`<div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token comment">&lt;!-- HI-MEEPO --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token comment">&lt;!-- DNA:SET /body/div/body --&gt;</span>
use named-life to replace scoped body to div
<span class="token comment">&lt;!-- DNA:END body --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="b2-6-保留原样-使用魔免黑皇杖" tabindex="-1"><a class="header-anchor" href="#b2-6-保留原样-使用魔免黑皇杖" aria-hidden="true">#</a> B2.6.保留原样，使用魔免黑皇杖</h2>`,2),J={href:"https://github.com/trydofor/pro.fessional.meepo/tree/master/meepo/src/test/resources/template/bkb/black-king-bar-o.htm",target:"_blank",rel:"noopener noreferrer"},G=t(`<div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token comment">&lt;!-- DNA:SET /body/div/* --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
in bkb, all are plain text, including DNA:SET
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),K={href:"https://github.com/trydofor/pro.fessional.meepo/tree/master/meepo/src/test/resources/template/bkb/black-king-bar-i.htm",target:"_blank",rel:"noopener noreferrer"},z=n("code",null,"end",-1),Q=t(`<div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token comment">&lt;!-- HI-MEEPO --&gt;</span>
<span class="token comment">&lt;!-- DNA:BKB bkb --&gt;</span>
<span class="token comment">&lt;!-- DNA:SET /body/div/* --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
in bkb, all are plain text, including DNA:SET
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token comment">&lt;!-- DNA:END bkb --&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="b2-7-删除行块-实际是替换为空" tabindex="-1"><a class="header-anchor" href="#b2-7-删除行块-实际是替换为空" aria-hidden="true">#</a> B2.7.删除行块，实际是替换为空</h2>`,2),X={href:"https://github.com/trydofor/pro.fessional.meepo/tree/master/meepo/src/test/resources/template/del/delete-1a3-o.htm",target:"_blank",rel:"noopener noreferrer"},Y=t(`<div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>delete all, but this line

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,1),Z={href:"https://github.com/trydofor/pro.fessional.meepo/tree/master/meepo/src/test/resources/template/del/delete-1a3-i.htm",target:"_blank",rel:"noopener noreferrer"},$=t(`<div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token comment">&lt;!-- HI-MEEPO --&gt;</span>
<span class="token comment">&lt;!-- DNA:SET /^.*\\n?//1,3 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
delete all, but this line
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),nn={href:"https://github.com/trydofor/pro.fessional.meepo/tree/master/meepo/src/test/resources/template/del/delete-all-i.htm",target:"_blank",rel:"noopener noreferrer"},sn=t(`<div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token comment">&lt;!-- HI-MEEPO --&gt;</span>
<span class="token comment">&lt;!-- DNA:SET :&lt;body&gt;[\\s\\S]*&lt;/body&gt;:: --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
delete all, but this line
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="b2-8-单次执行-存入model" tabindex="-1"><a class="header-anchor" href="#b2-8-单次执行-存入model" aria-hidden="true">#</a> B2.8.单次执行，存入Model</h2>`,2),an={href:"https://github.com/trydofor/pro.fessional.meepo/tree/master/meepo/src/test/resources/template/rna/put-use-o.htm",target:"_blank",rel:"noopener noreferrer"},en=t(`<div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
1009+10+7=1026
1009+10+7=1026
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),tn={href:"https://github.com/trydofor/pro.fessional.meepo/tree/master/meepo/src/test/resources/template/rna/put-use-i.htm",target:"_blank",rel:"noopener noreferrer"},ln=t(`<div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token comment">&lt;!-- HI-MEEPO --&gt;</span>
<span class="token comment">&lt;!-- RNA:PUT js/calc/1009+10+7/ --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token comment">&lt;!-- RNA:USE /result/calc/* --&gt;</span>
1009+10+7=result
1009+10+7=result
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="b2-9-每次执行-js版计数器" tabindex="-1"><a class="header-anchor" href="#b2-9-每次执行-js版计数器" aria-hidden="true">#</a> B2.9.每次执行，js版计数器</h2>`,2),on={href:"https://github.com/trydofor/pro.fessional.meepo/tree/master/meepo/src/test/resources/template/rna/run-any-o.htm",target:"_blank",rel:"noopener noreferrer"},pn=t(`<div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
i=1009+10+7=1026
i++ == 1027
i++ == 1028
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),cn={href:"https://github.com/trydofor/pro.fessional.meepo/tree/master/meepo/src/test/resources/template/rna/run-any-i.htm",target:"_blank",rel:"noopener noreferrer"},rn=t(`<div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token comment">&lt;!-- HI-MEEPO --&gt;</span>
<span class="token comment">&lt;!-- RNA:RUN js//i=1009+10+7/ --&gt;</span>
<span class="token comment">&lt;!-- RNA:RUN js/counter/i++;i.toFixed()/* --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
i=1009+10+7=1026
i++ == counter
i++ == counter
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="b2-a-运行时import静态文本" tabindex="-1"><a class="header-anchor" href="#b2-a-运行时import静态文本" aria-hidden="true">#</a> B2.A.运行时import静态文本</h2><p>通过uri引擎，可以读取 <code>file://</code>,<code>classpath:</code>和<code>http://</code>等外部资源</p>`,3),dn={href:"https://github.com/trydofor/pro.fessional.meepo/tree/master/meepo/src/test/resources/template/imp/import-o.htm",target:"_blank",rel:"noopener noreferrer"},un=n("div",{class:"language-html line-numbers-mode","data-ext":"html"},[n("pre",{class:"language-html"},[n("code",null,`imported text
`)]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),mn={href:"https://github.com/trydofor/pro.fessional.meepo/tree/master/meepo/src/test/resources/template/imp/import-i.htm",target:"_blank",rel:"noopener noreferrer"},vn={href:"https://github.com/trydofor/pro.fessional.meepo/tree/master/meepo/src/test/resources/template/imp/import-f.htm",target:"_blank",rel:"noopener noreferrer"},bn=t(`<div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token comment">&lt;!-- HI-MEEPO --&gt;</span>
<span class="token comment">&lt;!-- RNA:RUN uri#import-here#classpath:/template/imp/import-f.htm# --&gt;</span>
import-here
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="b2-b-执行java代码-动态编译" tabindex="-1"><a class="header-anchor" href="#b2-b-执行java代码-动态编译" aria-hidden="true">#</a> B2.B.执行java代码，动态编译</h2>`,2),kn={href:"https://github.com/trydofor/pro.fessional.meepo/tree/master/meepo/src/test/resources/template/java/compile-java-o.htm",target:"_blank",rel:"noopener noreferrer"},hn=n("div",{class:"language-html line-numbers-mode","data-ext":"html"},[n("pre",{class:"language-html"},[n("code",null,`2020-07-09 00:00:00
`)]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),gn={href:"https://github.com/trydofor/pro.fessional.meepo/tree/master/meepo/src/test/resources/template/java/compile-java-i.htm",target:"_blank",rel:"noopener noreferrer"},fn=t(`<div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token comment">&lt;!-- HI-MEEPO --&gt;</span>
<span class="token comment">&lt;!-- RNA:RUN java#java-output#
import java.time.LocalTime, java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;

LocalDate date = LocalDate.parse(&quot;2020-07-09&quot;);
LocalDateTime ldt = LocalDateTime.of(date, LocalTime.of(0, 0, 0));
DateTimeFormatter fmt = DateTimeFormatter.ofPattern(&quot;yyyy-MM-dd HH:mm:ss&quot;);
return ldt.format(fmt);
# --&gt;</span>
java-output
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="b2-c-替换默认界定符-不想用斜杆" tabindex="-1"><a class="header-anchor" href="#b2-c-替换默认界定符-不想用斜杆" aria-hidden="true">#</a> B2.C.替换默认界定符，不想用斜杆</h2><p><code>界定符</code>是第1个非(<code>空白</code>,<code>!</code>,<code>英数</code>)1-2字节char，常用的如<code>/</code>，汉字。 所以只要避免和指令中内容重复即可，但是，像👹这种的3,4字节不可以，getChar会分裂。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// RNA:RUN js/counter/i++;i.toFixed()/</span>
<span class="token comment">// RNA:RUN js:counter:i++;i.toFixed():</span>
<span class="token comment">// RNA:RUN js|counter|i++;i.toFixed()|</span>
<span class="token comment">// RNA:RUN js汉counter汉i++;i.toFixed()汉</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="b2-d-自动缩排多行代码-美观易读" tabindex="-1"><a class="header-anchor" href="#b2-d-自动缩排多行代码-美观易读" aria-hidden="true">#</a> B2.D.自动缩排多行代码，美观易读</h2>`,5),_n={href:"https://github.com/trydofor/pro.fessional.meepo/tree/master/meepo/src/test/java/pro/fessional/meepo/tmpl/JavaTest.java",target:"_blank",rel:"noopener noreferrer"},yn=n("code",null,"变量",-1),xn=t(`<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>c.put(&quot;method&quot;, Arrays.asList(&quot;LocalDate date = LocalDate.parse(\\&quot;2020-07-09\\&quot;);\\n&quot;,
                &quot;LocalDateTime ldt = LocalDateTime.of(date, LocalTime.of(0, 0, 0));\\n&quot;,
                &quot;DateTimeFormatter fmt = DateTimeFormatter.ofPattern(\\&quot;yyyy-MM-dd HH:mm:ss\\&quot;);\\n&quot;,
                &quot;return ldt.format(fmt);&quot;));
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),jn={href:"https://github.com/trydofor/pro.fessional.meepo/tree/master/meepo/src/test/resources/pro/fessional/meepo/poof/impl/java/JavaOut.java",target:"_blank",rel:"noopener noreferrer"},Nn=t(`<div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    <span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">eval</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NotNull</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> ctx<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">LocalDate</span> date <span class="token operator">=</span> <span class="token class-name">LocalDate</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token string">&quot;2020-07-09&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">LocalDateTime</span> ldt <span class="token operator">=</span> <span class="token class-name">LocalDateTime</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>date<span class="token punctuation">,</span> <span class="token class-name">LocalTime</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">DateTimeFormatter</span> fmt <span class="token operator">=</span> <span class="token class-name">DateTimeFormatter</span><span class="token punctuation">.</span><span class="token function">ofPattern</span><span class="token punctuation">(</span><span class="token string">&quot;yyyy-MM-dd HH:mm:ss&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> ldt<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>fmt<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果，<code>变量</code>不是集合类，而是带有<code>\\n</code>的字符串，那么会这样的呲牙效果</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    <span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">eval</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NotNull</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> ctx<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">LocalDate</span> date <span class="token operator">=</span> <span class="token class-name">LocalDate</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token string">&quot;2020-07-09&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">LocalDateTime</span> ldt <span class="token operator">=</span> <span class="token class-name">LocalDateTime</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>date<span class="token punctuation">,</span> <span class="token class-name">LocalTime</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">DateTimeFormatter</span> fmt <span class="token operator">=</span> <span class="token class-name">DateTimeFormatter</span><span class="token punctuation">.</span><span class="token function">ofPattern</span><span class="token punctuation">(</span><span class="token string">&quot;yyyy-MM-dd HH:mm:ss&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">return</span> ldt<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>fmt<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="b2-e-如何自定义函数" tabindex="-1"><a class="header-anchor" href="#b2-e-如何自定义函数" aria-hidden="true">#</a> B2.E.如何自定义函数</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>/* HI-MEEPO */
/* RNA:PUT fun/fun:abs/return Math.abs(((Number)obj).intValue())/ */
/* RNA:USE /abs/number|fun:abs/*/
abs
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>以上模板，通过<code>RNA:PUT</code>和<code>fun</code>引擎，在context中，put一个名为<code>fun:abs</code>的<code>函数</code>， 在合并时，context.put(&quot;number&quot;,-1)，模板输出为<code>1</code>，详见<code>testFunAbs</code>。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> ctx<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Function</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Number</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> abs<span class="token operator">=</span>number<span class="token operator">-&gt;</span><span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span>number<span class="token punctuation">.</span><span class="token function">intValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
ctx<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;fun:abs&quot;</span><span class="token punctuation">,</span>abs<span class="token punctuation">)</span><span class="token punctuation">;</span>
ctx<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;number&quot;</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// rna:use /now/number|abs/</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>以上是运行时，通过java编码做到同等效果，详细参考</p><ul><li>管道符链接函数，链式处理</li><li>动态java函数 fun</li></ul><h2 id="b2-f-占位符模板" tabindex="-1"><a class="header-anchor" href="#b2-f-占位符模板" aria-hidden="true">#</a> B2.F.占位符模板</h2><p>不用作为整块Meepo模板，只处理模板变量替换和函数处理，以下2行分别是输入和输出。 其中 <code>{{moilion-circle|PascalCase}}</code> 为，模板定义的变量及函数替换。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&quot;this is {{moilion-circle|PascalCase}} simple template&quot;
&quot;this is MoilionCircle simple template&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="b2-g-组件widget功能" tabindex="-1"><a class="header-anchor" href="#b2-g-组件widget功能" aria-hidden="true">#</a> B2.G.组件Widget功能</h2><p>Widget是View和Model的组合，<code>SON</code>内<code>PUT</code>可以实现组件功能。</p><p>如网站的TopHead通常根据id加载Model，模板引擎渲染View得到输出输出。 模板引擎支持include功能，但不会加载Model，因为V和M的职责不同，就不应该支持。</p><p>实际工作中，我们更希望View层的TopHead被include时，其所需Model也加载了。 而不是，View层include一次，Controller层再include一次Model的加载。</p><p>Meepo具备了运行时调整context的能力，也就是自己可加载Model，变为组件。 在本文语境中，import为动态RNA范畴，include为静态DNA范畴。</p>`,17),En={href:"https://github.com/trydofor/pro.fessional.meepo/tree/master/meepo/src/test/resources/template/son/include-i2.htm",target:"_blank",rel:"noopener noreferrer"},qn=t(`<div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token comment">&lt;!-- HI-MEEPO --&gt;</span>
<span class="token comment">&lt;!-- DNA:SON ./include-f.txt --&gt;</span>
since 2020-02-02
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),Dn={href:"https://github.com/trydofor/pro.fessional.meepo/tree/master/meepo/src/test/resources/template/son/include-f.txt",target:"_blank",rel:"noopener noreferrer"},Tn=t(`<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code># HI-MEEPO
# DNA:SET /name/trydofor/
# RNA:USE /domain/gmail/
author = name@domain
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),An={href:"https://github.com/trydofor/pro.fessional.meepo/tree/master/meepo/src/test/resources/template/son/include-o.htm",target:"_blank",rel:"noopener noreferrer"},Mn=t(`<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>author = trydofor@gmail.com

since 2020-02-02

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1);function In(Pn,Hn){const a=o("ExternalLinkIcon");return i(),p("div",null,[r,d,u,m,n("ul",null,[n("li",null,[n("a",v,[s("thymeleaf template"),e(a)])]),n("li",null,[n("a",b,[s("pebble template"),e(a)])]),n("li",null,[n("a",k,[s("template-benchmark"),e(a)])])]),h,n("p",null,[s("底层模板的"),n("a",g,[s("blog-trim.peb"),e(a)]),s("，不能有效的被html和js语法加持，IDE插件能够识别pebble语法。")]),f,n("p",null,[s("同等输出的"),n("a",_,[s("blog-trim.htm"),e(a)]),s("，保留原本的html和js特性，可以以html编辑。也可以使用pebble插件编辑。 没有使用"),y,s("，如果指令行独占一行，且行内全为空白，则不输出此行。第一行故意有个空格。")]),x,n("p",null,[s("底层模板的"),n("a",j,[s("blog-pure.peb"),e(a)]),s("，注意"),N,s("上有一空行，"),E,s("前共有有4x3=12个空格。")]),q,n("p",null,[s("同等输出的"),n("a",D,[s("blog-pure.htm"),e(a)]),s("，使用了"),T,s("，使得米波只处理注释首尾间的内容，保留之外的换行和空白（var前2行各4个空格）。")]),A,n("p",null,[s("输出结果的"),n("a",M,[s("replace-all-o.htm"),e(a)])]),I,n("p",null,[s("米波模板的"),n("a",P,[s("replace-all-i.htm"),e(a)]),s("，使用"),H,s("为匿名全局替换。")]),R,n("p",null,[s("输出结果的"),n("a",L,[s("replace-1a3-o.htm"),e(a)])]),O,n("p",null,[s("米波模板的"),n("a",B,[s("replace-1a3-i.htm"),e(a)]),s("，使用"),S,s("逗号分隔，确认次数。")]),w,n("p",null,[s("输出结果的"),n("a",F,[s("replace-end-o.htm"),e(a)])]),U,n("p",null,[s("米波模板的"),n("a",V,[s("replace-end-i.htm"),e(a)]),s("，使用"),C,s("和命名生命周期。")]),W,n("p",null,[s("输出结果的"),n("a",J,[s("black-king-bar-o.htm"),e(a)])]),G,n("p",null,[s("米波模板的"),n("a",K,[s("black-king-bar-i.htm"),e(a)]),s("，使用"),z,s("和命名生命周期。")]),Q,n("p",null,[s("输出结果的"),n("a",X,[s("delete-1a3-o.htm"),e(a)])]),Y,n("p",null,[s("米波模板的"),n("a",Z,[s("delete-1a3-i.htm"),e(a)]),s("，删除（替换为空）第1和3匹配行。")]),$,n("p",null,[s("米波模板的"),n("a",nn,[s("delete-all-i.htm"),e(a)]),s("，删除body及期间所有。")]),sn,n("p",null,[s("输出结果的"),n("a",an,[s("put-use-o.htm"),e(a)])]),en,n("p",null,[s("米波模板的"),n("a",tn,[s("put-use-i.htm"),e(a)]),s("，用PUT和USE做单次执行，到处使用。")]),ln,n("p",null,[s("输出结果的"),n("a",on,[s("run-any-o.htm"),e(a)])]),pn,n("p",null,[s("米波模板的"),n("a",cn,[s("run-any-i.htm"),e(a)]),s("，用RUN和js执行引擎。")]),rn,n("p",null,[s("输出结果的"),n("a",dn,[s("import-o.htm"),e(a)])]),un,n("p",null,[s("米波模板的"),n("a",mn,[s("import-i.htm"),e(a)]),s("，读入"),n("a",vn,[s("import-f.htm"),e(a)]),s("。")]),bn,n("p",null,[s("输出结果的"),n("a",kn,[s("compile-java-o.htm"),e(a)])]),hn,n("p",null,[s("米波模板的"),n("a",gn,[s("compile-java-i.htm"),e(a)])]),fn,n("p",null,[s("参加测试"),n("a",_n,[s("JavaTest.java"),e(a)]),s("，"),yn,s("为集合类，其元素自带换行")]),xn,n("p",null,[s("会输出有了缩排的"),n("a",jn,[s("JavaOut.java"),e(a)])]),Nn,n("p",null,[s("以相对路径"),n("a",En,[s("include-i2.htm"),e(a)]),s("引入子模板")]),qn,n("p",null,[s("子模板"),n("a",Dn,[s("include-f.txt"),e(a)]),s("内容")]),Tn,n("p",null,[s("输出结果"),n("a",An,[s("include-o.htm"),e(a)])]),Mn])}const On=l(c,[["render",In],["__file","b2.example.html.vue"]]);export{On as default};
