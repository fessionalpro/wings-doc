import{_ as l}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r,o as s,c as d,b as a,e,d as i,w as o,f as n}from"./app-D49wbIsR.js";const c={},p=n('<h1 id="_0g-幽灵船模型" tabindex="-1"><a class="header-anchor" href="#_0g-幽灵船模型"><span>0G.幽灵船模型</span></a></h1><p>WingsBoot体系的基本架构思路是，纵向做模型，横向贴功能。 曾用代号【邮轮模型】，后在Dota系，改为GhostShip，更wings一点。</p><h2 id="_0g-1-上船下海-gosea" tabindex="-1"><a class="header-anchor" href="#_0g-1-上船下海-gosea"><span>0G.1.上船下海 GoSea</span></a></h2><p>俗话说，<code>Go And Sea</code>，<code>Let&#39;s Me See Sea</code></p><p>在我所知的创业实践中，几乎什么都是短缺的，一切都是不确定的。 整个团队都在一条船上，要在海上生存和探寻，防止迷失和沉船。</p><h2 id="_0g-2-纵向模型-floor" tabindex="-1"><a class="header-anchor" href="#_0g-2-纵向模型-floor"><span>0G.2.纵向模型 Floor</span></a></h2><p>业务架构，业务模型，程序架构，数据模型，有严格的边界和依赖要求。 通常，从下至上像楼层一样，分别称之为Floor-N（N为自然数）</p><h3 id="_2a-单向调用-避免跨层" tabindex="-1"><a class="header-anchor" href="#_2a-单向调用-避免跨层"><span>2a.单向调用，避免跨层</span></a></h3><p>通常，上层可以调用同层及下层，反之不可。如 Dao/Ser/Mvc的结构中，</p>',9),h=n(`<h3 id="_2b-单向流动-事件溯源" tabindex="-1"><a class="header-anchor" href="#_2b-单向流动-事件溯源"><span>2b.单向流动，事件溯源</span></a></h3><p>数据流，业务流，要求单向流动。乱流时，以明确的Event传播和溯源。 如数据的从下向上构建，业务的从上到下传播。</p><h2 id="_0g-3-横向功能-layer" tabindex="-1"><a class="header-anchor" href="#_0g-3-横向功能-layer"><span>0G.3.横向功能 Layer</span></a></h2><p>功能或模块可以通过组合，继承，叠加或过滤后对外提供合适的服务。 通常，从内到外，分别称为Layer-N（N为自然数）</p><ul><li><code>messages</code>和<code>properties</code> 使用了叠加</li><li><code>Servlet</code>和<code>Filter</code> 使用了组合和过滤</li><li><code>Authn</code>和<code>Authz</code> 使用了组合和继承</li></ul><h3 id="_3a-划清边界-减少耦合" tabindex="-1"><a class="header-anchor" href="#_3a-划清边界-减少耦合"><span>3a.划清边界，减少耦合</span></a></h3><p>根据领域内的业务要求，划清边界，比如数据模型，功能模块等。</p><h3 id="_3b-单一职能-各尽其职" tabindex="-1"><a class="header-anchor" href="#_3b-单一职能-各尽其职"><span>3b.单一职能，各尽其职</span></a></h3><p>一次事件发生，只做好一件事，一次数据流动，只做好本次状态。</p><h2 id="_0g-4-基本模型-basic" tabindex="-1"><a class="header-anchor" href="#_0g-4-基本模型-basic"><span>0G.4.基本模型 Basic</span></a></h2><ul><li>展示层 - 展示和解释用户指令，如app, web</li><li>应用层 - 验证及转换数据，如controller, api</li><li>业务层 - 业务概念和逻辑处理，如service, dao</li><li>设施层 - 业务无关的基础服务，如db, cache</li></ul><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>▲ 
│ Floor of Abstraction
├──────────────┐
│ Presentation │
├──────────────┴──┬────────┐
│ Application     │ LayerA │
├─────────────────┴──┬─────┴───┬────────┐
│ Domain/Biz         │  LayerB │ LayerD │
├────────────────────┴──┬──────┴─┬──────┴─┬────────┐
│ Infrastructure        │ Layer1 │ Layer2 │ Layer3 │
└───────────────────────┴────────┴────────┴────────┴─────▶
                    Layer of Complexity
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,12);function g(m,_){const t=r("Badge");return s(),d("div",null,[p,a("ul",null,[a("li",null,[e("Service中可以调用Dao和Service，反之则应避免。"),i(t,{type:"tip",vertical:"top"},{default:o(()=>[e("推荐")]),_:1})]),a("li",null,[e("Controller可以调用Service，反之则禁止。"),i(t,{type:"info",vertical:"top"},{default:o(()=>[e("必须")]),_:1})]),a("li",null,[e("Controller不可调用Dao。"),i(t,{type:"tip",vertical:"top"},{default:o(()=>[e("推荐")]),_:1})])]),h])}const b=l(c,[["render",g],["__file","0g-ghost-ship.html.vue"]]),f=JSON.parse(`{"path":"/zh/0-wings/0g-ghost-ship.html","title":"0G.幽灵船模型","lang":"zh-CN","frontmatter":{"isOriginal":true,"icon":"geometry","category":["神翼","模型"],"description":"0G.幽灵船模型 WingsBoot体系的基本架构思路是，纵向做模型，横向贴功能。 曾用代号【邮轮模型】，后在Dota系，改为GhostShip，更wings一点。 0G.1.上船下海 GoSea 俗话说，Go And Sea，Let's Me See Sea 在我所知的创业实践中，几乎什么都是短缺的，一切都是不确定的。 整个团队都在一条船上，要在海上...","GIT_REPO_HEAD":"2024-05-14 c11179d9405d56bdce1d844167180312da5251a8","head":[["link",{"rel":"alternate","hreflang":"en-us","href":"https://wings.fessional.pro/0-wings/0g-ghost-ship.html"}],["meta",{"property":"og:url","content":"https://wings.fessional.pro/zh/0-wings/0g-ghost-ship.html"}],["meta",{"property":"og:site_name","content":"WingsBoot 纹丝不忒"}],["meta",{"property":"og:title","content":"0G.幽灵船模型"}],["meta",{"property":"og:description","content":"0G.幽灵船模型 WingsBoot体系的基本架构思路是，纵向做模型，横向贴功能。 曾用代号【邮轮模型】，后在Dota系，改为GhostShip，更wings一点。 0G.1.上船下海 GoSea 俗话说，Go And Sea，Let's Me See Sea 在我所知的创业实践中，几乎什么都是短缺的，一切都是不确定的。 整个团队都在一条船上，要在海上..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-03-02T02:16:40.000Z"}],["meta",{"property":"article:author","content":"trydofor"}],["meta",{"property":"article:modified_time","content":"2024-03-02T02:16:40.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"0G.幽灵船模型\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-03-02T02:16:40.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"trydofor\\",\\"url\\":\\"https://www.trydofor.com\\"}]}"]]},"headers":[{"level":2,"title":"0G.1.上船下海 GoSea","slug":"_0g-1-上船下海-gosea","link":"#_0g-1-上船下海-gosea","children":[]},{"level":2,"title":"0G.2.纵向模型 Floor","slug":"_0g-2-纵向模型-floor","link":"#_0g-2-纵向模型-floor","children":[{"level":3,"title":"2a.单向调用，避免跨层","slug":"_2a-单向调用-避免跨层","link":"#_2a-单向调用-避免跨层","children":[]},{"level":3,"title":"2b.单向流动，事件溯源","slug":"_2b-单向流动-事件溯源","link":"#_2b-单向流动-事件溯源","children":[]}]},{"level":2,"title":"0G.3.横向功能 Layer","slug":"_0g-3-横向功能-layer","link":"#_0g-3-横向功能-layer","children":[{"level":3,"title":"3a.划清边界，减少耦合","slug":"_3a-划清边界-减少耦合","link":"#_3a-划清边界-减少耦合","children":[]},{"level":3,"title":"3b.单一职能，各尽其职","slug":"_3b-单一职能-各尽其职","link":"#_3b-单一职能-各尽其职","children":[]}]},{"level":2,"title":"0G.4.基本模型 Basic","slug":"_0g-4-基本模型-basic","link":"#_0g-4-基本模型-basic","children":[]}],"git":{"createdTime":1687077446000,"updatedTime":1709345800000,"contributors":[{"name":"trydofor","email":"trydofor@gmail.com","commits":3}]},"readingTime":{"minutes":1.78,"words":534},"filePathRelative":"zh/0-wings/0g-ghost-ship.md","localizedDate":"2023年6月18日","autoDesc":true}`);export{b as comp,f as data};
