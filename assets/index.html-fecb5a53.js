import{_ as d}from"./faceless_icon-66e76779.js";import{_ as r}from"./plugin-vue_export-helper-c27b6911.js";import{r as s,o as c,c as h,b as a,e,d as t,w as i,f as n}from"./app-bf064653.js";const u={},m=n('<h1 id="_2-faceless-void" tabindex="-1"><a class="header-anchor" href="#_2-faceless-void" aria-hidden="true">#</a> 2.Faceless Void</h1><p><img src="'+d+'" alt="faceless_void"></p><blockquote><p><code>Void</code> interface <code>public static void main</code><br> a visitor from Claszureme, a realm outside of time.</p></blockquote><p>Data layer (MySql compatible system, such as H2) utility. Support for table and data versioning, strong typesafe sql mapping, rw-split and data sharding.</p><h2 id="_2-1-module-project" tabindex="-1"><a class="header-anchor" href="#_2-1-module-project" aria-hidden="true">#</a> 2.1.Module Project</h2><ul><li>faceless - Data access utilty: locker, typesafe, enum and i18n</li><li>faceless-flywave - Schema and data versioning</li><li>faceless-jooq - Data access via Jooq</li><li>faceless-jooqggen - jooq code generator</li><li>faceless-shard - shardingsphere&#39;s rw-split, sharding</li><li>faceless-test - testing utilty and config</li></ul><h2 id="_2-2-distributed-id-lightid" tabindex="-1"><a class="header-anchor" href="#_2-2-distributed-id-lightid" aria-hidden="true">#</a> 2.2.Distributed Id (LightId)</h2>',7),f=a("code",null,"snowflake",-1),p=a("code",null,"LightId",-1),_={href:"https://github.com/trydofor/pro.fessional.mirana",target:"_blank",rel:"noopener noreferrer"},g=n('<p>The default implementation of LightId is JDBC based. the autogen code by jooq implements <code>LightIdAware</code> and can be used to get LightId. See the implementation of <code>LightIdService</code> for details.</p><h2 id="_2-3-enum-and-i18n-in-database" tabindex="-1"><a class="header-anchor" href="#_2-3-enum-and-i18n-in-database" aria-hidden="true">#</a> 2.3.Enum and I18n in Database</h2><p>Revision 2019_0521_01 defines the enum and i18n tables for business-level codes, such as status. use <code>ConstantEnumGenerate</code> to autogen java code to keep the Db and java enum consistent.</p><p><code>CombinableMessageSource</code> can dynamically handle the i18n messages within service.</p><h2 id="_2-3-more-sections" tabindex="-1"><a class="header-anchor" href="#_2-3-more-sections" aria-hidden="true">#</a> 2.3.More Sections</h2>',5);function b(v,q){const l=s("ExternalLinkIcon"),o=s("RouterLink");return c(),h("div",null,[m,a("p",null,[e("Unlike other distributed Id solutions, eg. "),f,e(", "),p,e(" provides CRC8 pseudo-random encoding. See "),a("a",_,[e("pro.fessioinal.mirana"),t(l)]),e(" project.")]),g,a("ul",null,[a("li",null,[t(o,{to:"/2-faceless/2a-flywave.html"},{default:i(()=>[e("Table/Data Versioning")]),_:1}),e(" - Sql-based and Git-like schema and data version management")]),a("li",null,[t(o,{to:"/2-faceless/2b-jooq.html"},{default:i(()=>[e("Typesafe DSL SqlMapping")]),_:1}),e(" - Generate strongly typed codes from database: pojo, dao")]),a("li",null,[t(o,{to:"/2-faceless/2c-shard.html"},{default:i(()=>[e("Separation and Sharding")]),_:1}),e(" - Separation and Sharding to smoothly handle large data")]),a("li",null,[t(o,{to:"/2-faceless/2d-mysql-h2.html"},{default:i(()=>[e("Mysql/H2 Knowledge")]),_:1}),e(" - Knowledge of Mysql-compatible database")]),a("li",null,[t(o,{to:"/2-faceless/2e-qa-flywave.html"},{default:i(()=>[e("Flywave Faq Topic")]),_:1}),e(" - Flywave schema revision and data journal")]),a("li",null,[t(o,{to:"/2-faceless/2f-qa-jooq.html"},{default:i(()=>[e("Jooq Faq Topic")]),_:1}),e(" - Jooq topic")]),a("li",null,[t(o,{to:"/2-faceless/2g-qa-shard.html"},{default:i(()=>[e("Sharding Faq Topic")]),_:1}),e(" - Sharding topic")]),a("li",null,[t(o,{to:"/2-faceless/2h-time-zone.html"},{default:i(()=>[e("Datetime and Timezone")]),_:1}),e(" - Datetime and timezone in database")])])])}const k=r(u,[["render",b],["__file","index.html.vue"]]);export{k as default};
