import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{o as a,c as t,f as i}from"./app-b67efd75.js";const s={},n=i('<h1 id="_8a-tinytask-component" tabindex="-1"><a class="header-anchor" href="#_8a-tinytask-component" aria-hidden="true">#</a> 8A.TinyTask Component</h1><p>Based on Spring Schedule, provides database-centric task scheduling.</p><ul><li>Auto discovery and execution</li><li>Can cancel, start, change config at runtime</li><li>Enable task notification</li><li>Query task execution history</li></ul><h2 id="_8a-1-design-requirement" tabindex="-1"><a class="header-anchor" href="#_8a-1-design-requirement" aria-hidden="true">#</a> 8A.1.Design Requirement</h2><p>TinyTask is designed to be strongly typed and static, so by default it is limited to dynamically adding tasks.</p><ul><li>The task object must be a SpringBean</li><li>Use @TinyTask.Auto to auto discover</li><li>Entry methods must be annotated with @TinyTask</li><li>Set task properties via configuration file</li><li>Final configuration is based on database unless version overrides</li><li>Tasks can only be started in restricted app and run modes</li><li>Task itself can be concurrency controlled (Jvm and Database)</li></ul><h2 id="_8a-2-config-override" tabindex="-1"><a class="header-anchor" href="#_8a-2-config-override" aria-hidden="true">#</a> 8A.2.Config Override</h2><p>Tasks can be added automatically or manually. Beans with @TinyTask.Auto are started automatically. They can also be started manually using the TinyTaskService.schedule method.</p><p>The task configuration is merged first, with priority from highest to lowest.</p><ul><li>property value of the task&#39;s own key</li><li>default value of the task</li><li>value from the annotation</li></ul><p>The above merged config becomes the taks properties and will be compared with the current value in the database. The larger version takes precedence, and if equal, the database (win_task_define table) takes precedence.</p><h2 id="_8a-3-task-schedule" tabindex="-1"><a class="header-anchor" href="#_8a-3-task-schedule" aria-hidden="true">#</a> 8A.3.Task Schedule</h2><p>Tasks are divided into light and heavy by execution time, corresponding to 2 different thread pools. Tasks that generally finish in seconds are light tasks and run in the fast thread pool, otherwise they run in heavy.</p><p>A task must set one of cron/idle/rate for task scheduling. If both are set, cron overrides idle, idle overrides rate.</p><h2 id="_8a-4-task-control" tabindex="-1"><a class="header-anchor" href="#_8a-4-task-control" aria-hidden="true">#</a> 8A.4.Task Control</h2><p>TinyTask provides a Controller to control task by default</p><ul><li>task-running - list of running tasks</li><li>task-defined - list of defined tasks</li><li>task-result - list of task history</li><li>task-cancel - cancels a task</li><li>task-launch - starts a task</li><li>task-force - forces a task to start</li><li>task-enable - enable or disable a task</li><li>task-prop-save - update a task&#39;s properties</li><li>task-prop-load - load properties of a task</li><li>task-prop-conf - task configuration properties</li><li>task-prop-diff - task property differences</li></ul><p>Recommended to control task in hardcoding, for more secure and strongly typed,</p><ul><li>TinyTaskConfService - configuration related service</li><li>TinyTaskExecService - execute related services</li><li>TinyTaskService - scheduling task entry</li></ul>',19),r=[n];function o(l,d){return a(),t("div",null,r)}const u=e(s,[["render",o],["__file","8a-tinytask.html.vue"]]);export{u as default};
