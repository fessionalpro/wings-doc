import{_ as e}from"./batrider_icon-Bl5V12Js.js";import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as r,o,e as i}from"./app-DEdToB0k.js";const c={},a=i('<h1 id="_5-batrider" tabindex="-1"><a class="header-anchor" href="#_5-batrider"><span>5.Batrider</span></a></h1><p><img src="'+e+'" alt="batrider"></p><blockquote><p>Once he takes to the skies, Batrider can strike from any direction.</p></blockquote><p>ServiceComb, a lightweight but full-stack microservice solution.</p><h2 id="_5-1-module-project" tabindex="-1"><a class="header-anchor" href="#_5-1-module-project"><span>5.1.Module Project</span></a></h2><ul><li>batrider - servicecomb basic setting</li><li>batrider-zero - registry-zero-config</li><li>batrider-test - testing utility (rest and rpc)</li></ul><h2 id="_5-2-microservice-convention" tabindex="-1"><a class="header-anchor" href="#_5-2-microservice-convention"><span>5.2.Microservice Convention</span></a></h2><ul><li>communication model, <code>RestOverServlet</code> when coexisting with SpringMvc</li><li>Programming model, <code>SpringMvc</code> for providers and <code>Rpc</code> for consumers</li><li>Authentication, as public-private key <code>handler-publickey-auth</code></li><li>rest.urlPattern is <code>/servcomber/*</code></li><li>Contract as pure <code>interface</code> with a <code>Contract</code> suffix (opposed to <code>Service</code>)</li><li>Provider with a suffix of <code>Contractor</code> (vs. <code>Controller</code>) and a package of <code>contractor</code></li><li>Consumer, with the <code>Contract</code> suffix for the interface and injected fields</li><li>default <code>registry-zero-config</code>, recommended <code>servicecomb-service-center</code></li><li>No external gateway by default, coexists with springMvc</li><li>Asynchronous is only implemented on the consumer side, providers are synchronous by default</li></ul><h2 id="_5-3-basic-demo-project" tabindex="-1"><a class="header-anchor" href="#_5-3-basic-demo-project"><span>5.3.Basic Demo Project</span></a></h2><p>start the <code>winx-api</code> and <code>batrider-test</code> projects, and then visit swagger</p><ul><li><a href="http://localhost:8085/swagger-ui/index.html#/batrider-controller" target="_blank" rel="noopener noreferrer">http://localhost:8085/swagger-ui/index.html#/batrider-controller</a> - swagger page</li><li>/batrider/batx-hello-pxy - access batrider service by Invoker</li><li>/batrider/winx-hello-cse - access winx service by Rest&#39;s cse</li><li>/batrider/winx-hello-rpc - access winx service by Rpc</li></ul>',11),n=[a];function s(l,d){return o(),r("div",null,n)}const u=t(c,[["render",s],["__file","index.html.vue"]]),g=JSON.parse('{"path":"/5-batrider/","title":"5.Batrider","lang":"en-US","frontmatter":{"isOriginal":true,"icon":"screwdriver-wrench","category":["Batrider","Home"],"description":"5.Batrider batrider Once he takes to the skies, Batrider can strike from any direction. ServiceComb, a lightweight but full-stack microservice solution. 5.1.Module Project batri...","GIT_REPO_HEAD":"2025-01-17 e638e7035dc7958e3f145793e37c871eb02f12d5","head":[["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://wings.fessional.pro/zh/5-batrider/"}],["meta",{"property":"og:url","content":"https://wings.fessional.pro/5-batrider/"}],["meta",{"property":"og:site_name","content":"WingsBoot Win Sprint"}],["meta",{"property":"og:title","content":"5.Batrider"}],["meta",{"property":"og:description","content":"5.Batrider batrider Once he takes to the skies, Batrider can strike from any direction. ServiceComb, a lightweight but full-stack microservice solution. 5.1.Module Project batri..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://wings.fessional.pro/batrider_icon.png"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-06-12T00:21:52.000Z"}],["meta",{"property":"article:author","content":"trydofor"}],["meta",{"property":"article:modified_time","content":"2024-06-12T00:21:52.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"5.Batrider\\",\\"image\\":[\\"https://wings.fessional.pro/batrider_icon.png\\"],\\"dateModified\\":\\"2024-06-12T00:21:52.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"trydofor\\",\\"url\\":\\"https://www.trydofor.com\\"}]}"]]},"headers":[{"level":2,"title":"5.1.Module Project","slug":"_5-1-module-project","link":"#_5-1-module-project","children":[]},{"level":2,"title":"5.2.Microservice Convention","slug":"_5-2-microservice-convention","link":"#_5-2-microservice-convention","children":[]},{"level":2,"title":"5.3.Basic Demo Project","slug":"_5-3-basic-demo-project","link":"#_5-3-basic-demo-project","children":[]}],"git":{"createdTime":1658547848000,"updatedTime":1718151712000,"contributors":[{"name":"trydofor","email":"trydofor@gmail.com","commits":3}]},"readingTime":{"minutes":0.64,"words":191},"filePathRelative":"5-batrider/README.md","localizedDate":"July 23, 2022","autoDesc":true}');export{u as comp,g as data};
