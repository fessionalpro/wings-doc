import{_ as t}from"./plugin-vue_export-helper-c27b6911.js";import{r as p,o,c as l,b as s,e as n,d as c,f as a}from"./app-371aab79.js";const i={},r=a(`<h1 id="_2e-flywave-faq-topic" tabindex="-1"><a class="header-anchor" href="#_2e-flywave-faq-topic" aria-hidden="true">#</a> 2E.Flywave Faq Topic</h1><p>Topic about flywave, schema/data versioning, journal data.</p><h2 id="_2e-01-customize-journalservice" tabindex="-1"><a class="header-anchor" href="#_2e-01-customize-journalservice" aria-hidden="true">#</a> 2E.01.Customize journalService</h2><p>Inject high priority <code>journalService</code>, see <code>SecurityJournalService</code> of example project</p><h2 id="_2e-02-no-chemarevisionmanager" tabindex="-1"><a class="header-anchor" href="#_2e-02-no-chemarevisionmanager" aria-hidden="true">#</a> 2E.02.No chemaRevisionManager</h2><p>After 2.2.6, <code>spring.wings.faceless.flywave.enabled.module=false</code> is disabled by default. needs to enable during initialization, for example by adding a temporary turn on in test <code>@SpringBootTest(properties = &quot;spring.wings.faceless.flywave.enabled.module=true&quot;)</code></p><h2 id="_2e-03-missing-branches-error" tabindex="-1"><a class="header-anchor" href="#_2e-03-missing-branches-error" aria-hidden="true">#</a> 2E.03.Missing Branches Error</h2><p>After 2.2.7, sys_schema_version supports branch, in previous versions, it needed to be maintained manually. Just execute <code>2019_0512_02</code> in <code>branch/somefix/v227-fix</code>.</p><h2 id="_2e-04-testcase-or-examples-for-flywave" tabindex="-1"><a class="header-anchor" href="#_2e-04-testcase-or-examples-for-flywave" aria-hidden="true">#</a> 2E.04.Testcase or Examples for Flywave</h2><ul><li><p>SchemaJournalManagerTest - shard and track test</p></li><li><p>SchemaRevisionMangerTest - basic versioning test</p></li><li><p>SchemaShardingManagerTest - shard and data migration test</p></li><li><p>WingsFlywaveInitDatabaseSample - database versioning example</p></li><li><p>ConstantEnumGenSample - enum code generation example</p></li><li><p>JooqJavaCodeGenSample - jooq code generation example</p></li><li><p>WingsSchemaDumper - schema and data dump example</p></li><li><p>WingsSchemaJournal - track table control example</p></li></ul><h2 id="_2e-05-confirm-dangerous-sql-in-flywave" tabindex="-1"><a class="header-anchor" href="#_2e-05-confirm-dangerous-sql-in-flywave" aria-hidden="true">#</a> 2E.05.Confirm Dangerous Sql in Flywave</h2><ul><li>sql with <code>ask@*</code> annotation to force confirmation</li><li>undo statement confirms <code>wings.faceless.flywave.ver.ask-undo=true</code></li><li>drop statement validation <code>wings.faceless.flywave.ver.ask-drop=true</code></li><li>drop statement definition <code>wings.faceless.flywave.ver.drop-reg[drop-table]</code></li></ul><p>If console has no output in UnitTest, you need to open <code>console</code> in the IDE, e.g. in Idea <code>-Deditable.java.test.console=true</code> (Help/Edit Custom VM Options...)</p><h2 id="_2e-06-no-index-required-for-trace-tables" tabindex="-1"><a class="header-anchor" href="#_2e-06-no-index-required-for-trace-tables" aria-hidden="true">#</a> 2E.06.No Index Required for Trace Tables</h2><p>If an existing index is updated to trace tables and it affects write performance, or a unique constraint, check it out with the following sql.</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span>
  <span class="token keyword">DISTINCT</span> CONCAT<span class="token punctuation">(</span><span class="token string">&#39;DROP INDEX &#39;</span><span class="token punctuation">,</span>INDEX_NAME<span class="token punctuation">,</span><span class="token string">&#39; ON &#39;</span><span class="token punctuation">,</span>TABLE_NAME<span class="token punctuation">,</span> <span class="token string">&#39;;&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">FROM</span>
  INFORMATION_SCHEMA<span class="token punctuation">.</span><span class="token keyword">STATISTICS</span>
<span class="token keyword">WHERE</span>
  TABLE_SCHEMA <span class="token operator">=</span> <span class="token keyword">DATABASE</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token operator">AND</span> INDEX_NAME <span class="token operator">NOT</span> <span class="token operator">IN</span> <span class="token punctuation">(</span><span class="token string">&#39;PRIMARY&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;RAW_TABLE_PK&#39;</span><span class="token punctuation">)</span>
  <span class="token operator">AND</span> <span class="token punctuation">(</span>TABLE_NAME <span class="token operator">LIKE</span> <span class="token string">&#39;%$%&#39;</span> <span class="token operator">OR</span> TABLE_NAME <span class="token operator">LIKE</span> <span class="token string">&#39;%__%&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Specify the table to be updated with the <code>apply@</code> statement. For example, the following updates plain tables and shard tables without trace tables</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- @plain apply@nut error@skip</span>
<span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> <span class="token identifier"><span class="token punctuation">\`</span>win_user<span class="token punctuation">\`</span></span>
  <span class="token keyword">DROP</span> <span class="token keyword">INDEX</span> <span class="token identifier"><span class="token punctuation">\`</span>ft_auth_set<span class="token punctuation">\`</span></span><span class="token punctuation">,</span>
  <span class="token keyword">DROP</span> <span class="token keyword">INDEX</span> <span class="token identifier"><span class="token punctuation">\`</span>ft_role_set<span class="token punctuation">\`</span></span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2e-07-list-all-plain-shard-trace-tables" tabindex="-1"><a class="header-anchor" href="#_2e-07-list-all-plain-shard-trace-tables" aria-hidden="true">#</a> 2E.07.List All Plain/Shard/Trace Tables</h2><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- only trace</span>
<span class="token keyword">SELECT</span> 
  reverse<span class="token punctuation">(</span>substring<span class="token punctuation">(</span>reverse<span class="token punctuation">(</span>table_name<span class="token punctuation">)</span><span class="token punctuation">,</span>length<span class="token punctuation">(</span>substring_index<span class="token punctuation">(</span>table_name<span class="token punctuation">,</span><span class="token string">&#39;__&#39;</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">as</span> tbl<span class="token punctuation">,</span>
  group_concat<span class="token punctuation">(</span>SUBSTRING_INDEX<span class="token punctuation">(</span>table_name<span class="token punctuation">,</span><span class="token string">&#39;__&#39;</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">as</span> log
<span class="token keyword">FROM</span> INFORMATION_SCHEMA<span class="token punctuation">.</span><span class="token keyword">TABLES</span>
<span class="token keyword">WHERE</span> table_schema <span class="token operator">=</span> <span class="token keyword">DATABASE</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token operator">AND</span> table_name <span class="token operator">RLIKE</span> <span class="token string">&#39;__&#39;</span>
  <span class="token keyword">GROUP</span> <span class="token keyword">BY</span> tbl<span class="token punctuation">;</span>

<span class="token keyword">SELECT</span>
  table_name<span class="token punctuation">,</span>
  CONCAT<span class="token punctuation">(</span><span class="token string">&#39;DROP TABLE IF EXISTS &#39;</span><span class="token punctuation">,</span>table_name<span class="token punctuation">,</span><span class="token string">&#39;;&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">FROM</span> INFORMATION_SCHEMA<span class="token punctuation">.</span><span class="token keyword">TABLES</span>
<span class="token keyword">WHERE</span> table_schema <span class="token operator">=</span> <span class="token keyword">DATABASE</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token operator">AND</span> table_name <span class="token operator">RLIKE</span> <span class="token string">&#39;\\\\$|__&#39;</span><span class="token punctuation">;</span>

<span class="token comment">-- only shard</span>
<span class="token keyword">SELECT</span> 
  reverse<span class="token punctuation">(</span>substring<span class="token punctuation">(</span>reverse<span class="token punctuation">(</span>table_name<span class="token punctuation">)</span><span class="token punctuation">,</span>length<span class="token punctuation">(</span>substring_index<span class="token punctuation">(</span>table_name<span class="token punctuation">,</span><span class="token string">&#39;_&#39;</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">as</span> tbl<span class="token punctuation">,</span>
  group_concat<span class="token punctuation">(</span>SUBSTRING_INDEX<span class="token punctuation">(</span>table_name<span class="token punctuation">,</span><span class="token string">&#39;_&#39;</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">as</span> num
<span class="token keyword">FROM</span> INFORMATION_SCHEMA<span class="token punctuation">.</span><span class="token keyword">TABLES</span>
<span class="token keyword">WHERE</span> table_schema <span class="token operator">=</span> <span class="token keyword">DATABASE</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token operator">AND</span> table_name <span class="token operator">RLIKE</span> <span class="token string">&#39;_[0-9]+$&#39;</span>
  <span class="token keyword">group</span> <span class="token keyword">by</span> tbl<span class="token punctuation">;</span>

<span class="token keyword">SELECT</span>
  table_name<span class="token punctuation">,</span>
  CONCAT<span class="token punctuation">(</span><span class="token string">&#39;DROP TABLE IF EXISTS &#39;</span><span class="token punctuation">,</span>table_name<span class="token punctuation">,</span><span class="token string">&#39;;&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">FROM</span> INFORMATION_SCHEMA<span class="token punctuation">.</span><span class="token keyword">TABLES</span>
<span class="token keyword">WHERE</span> table_schema <span class="token operator">=</span> <span class="token keyword">DATABASE</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token operator">AND</span> table_name <span class="token operator">RLIKE</span> <span class="token string">&#39;_[0-9]+$&#39;</span><span class="token punctuation">;</span>

<span class="token comment">-- only plain</span>
<span class="token keyword">SELECT</span> table_name
<span class="token keyword">FROM</span> INFORMATION_SCHEMA<span class="token punctuation">.</span><span class="token keyword">TABLES</span>
<span class="token keyword">WHERE</span> table_schema <span class="token operator">=</span> <span class="token keyword">DATABASE</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token operator">AND</span> table_name <span class="token operator">NOT</span> <span class="token operator">REGEXP</span> <span class="token string">&#39;_[0-9]+$&#39;</span>
  <span class="token operator">AND</span> table_name <span class="token operator">NOT</span> <span class="token operator">RLIKE</span> <span class="token string">&#39;\\\\$|__&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2e-08-flywave-for-legacy-project" tabindex="-1"><a class="header-anchor" href="#_2e-08-flywave-for-legacy-project" aria-hidden="true">#</a> 2E.08.Flywave for Legacy Project</h2><p>For legacy projects, to keep the original schema and data, you may not be able to use the naming of wings, divided into the following cases.</p><ul><li>Without <code>sys_schema_*</code> table, you can set your own table in wings-flywave-79.properties, and create the same structure table manually.</li><li>With the <code>sys_schema_*</code> table, you can replace 1ST_SCHEMA with a new name.</li><li>Without <code>rename</code> the table, you can use the initialization script in the <code>branch</code> and <code>forceExecuteSql</code> to execute it.</li></ul><p>Of the above methods, we recommend using the last one, after doing the manual initialization, then managing the database version through flywave.</p><p>Except for the initial version, which is executed during checkAndInit, other versions need to be published or executed</p><h2 id="_2e-09-list-or-delete-all-triggers" tabindex="-1"><a class="header-anchor" href="#_2e-09-list-or-delete-all-triggers" aria-hidden="true">#</a> 2E.09.List or Delete All Triggers</h2><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span>
  EVENT_OBJECT_TABLE<span class="token punctuation">,</span>
  TRIGGER_NAME<span class="token punctuation">,</span>
  ACTION_TIMING<span class="token punctuation">,</span>
  EVENT_MANIPULATION<span class="token punctuation">,</span>
  ACTION_STATEMENT
<span class="token keyword">FROM</span>
  INFORMATION_SCHEMA<span class="token punctuation">.</span>TRIGGERS
<span class="token keyword">WHERE</span>
  EVENT_OBJECT_SCHEMA <span class="token operator">=</span> <span class="token keyword">database</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">-- get create sql of trigger;</span>
<span class="token comment">-- DELIMITER ;;</span>
<span class="token keyword">SELECT</span>
  TRIGGER_NAME<span class="token punctuation">,</span>
  CONCAT<span class="token punctuation">(</span><span class="token string">&#39;DROP TRIGGER IF EXISTS &#39;</span><span class="token punctuation">,</span>TRIGGER_NAME<span class="token punctuation">,</span><span class="token string">&#39;;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  CONCAT<span class="token punctuation">(</span><span class="token string">&#39;CREATE TRIGGER \`&#39;</span><span class="token punctuation">,</span> TRIGGER_NAME<span class="token punctuation">,</span> <span class="token string">&#39;\` &#39;</span><span class="token punctuation">,</span>
    ACTION_TIMING<span class="token punctuation">,</span> <span class="token string">&#39; &#39;</span><span class="token punctuation">,</span> EVENT_MANIPULATION<span class="token punctuation">,</span> <span class="token string">&#39; ON \`&#39;</span><span class="token punctuation">,</span> EVENT_OBJECT_TABLE<span class="token punctuation">,</span> <span class="token string">&#39;\` FOR EACH ROW &#39;</span><span class="token punctuation">,</span>
    ACTION_STATEMENT<span class="token punctuation">,</span> <span class="token string">&#39;;;&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">FROM</span>
  INFORMATION_SCHEMA<span class="token punctuation">.</span>TRIGGERS
<span class="token keyword">WHERE</span>
  EVENT_OBJECT_SCHEMA <span class="token operator">=</span> <span class="token keyword">database</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">-- as flywave naming rules</span>
<span class="token keyword">SELECT</span>
  TRIGGER_NAME<span class="token punctuation">,</span>
  concat<span class="token punctuation">(</span><span class="token string">&#39;DROP TRIGGER IF EXISTS &#39;</span><span class="token punctuation">,</span>TRIGGER_NAME<span class="token punctuation">,</span><span class="token string">&#39;;&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">FROM</span>
  INFORMATION_SCHEMA<span class="token punctuation">.</span>TRIGGERS
<span class="token keyword">WHERE</span>
  EVENT_OBJECT_SCHEMA <span class="token operator">=</span> <span class="token keyword">DATABASE</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token operator">AND</span> TRIGGER_NAME <span class="token operator">RLIKE</span> <span class="token string">&#39;^(bi|ai|bu|au|bd|ad)__&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2e-10-record-count-of-trace-table" tabindex="-1"><a class="header-anchor" href="#_2e-10-record-count-of-trace-table" aria-hidden="true">#</a> 2E.10.Record Count of Trace Table</h2><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span>
  table_schema<span class="token punctuation">,</span>
  concat<span class="token punctuation">(</span><span class="token string">&#39;delete from &#39;</span><span class="token punctuation">,</span>table_name<span class="token punctuation">,</span><span class="token string">&#39; where _dt &lt; \\&#39;2020-07-01\\&#39;;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  CEILING<span class="token punctuation">(</span>data_length <span class="token operator">/</span> <span class="token number">1024</span> <span class="token operator">/</span> <span class="token number">1024</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> data_mb<span class="token punctuation">,</span>
  CEILING<span class="token punctuation">(</span>index_length <span class="token operator">/</span> <span class="token number">1024</span> <span class="token operator">/</span> <span class="token number">1024</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> index_mb<span class="token punctuation">,</span>
  CEILING<span class="token punctuation">(</span><span class="token punctuation">(</span>data_length <span class="token operator">+</span> index_length<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">1024</span> <span class="token operator">/</span> <span class="token number">1024</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> all_mb<span class="token punctuation">,</span>
  table_rows
<span class="token keyword">FROM</span>
  information_schema<span class="token punctuation">.</span><span class="token keyword">tables</span>
<span class="token keyword">WHERE</span>
  table_name <span class="token operator">RLIKE</span> <span class="token string">&#39;\\\\$|__&#39;</span>
  <span class="token operator">and</span> table_schema <span class="token operator">=</span> <span class="token keyword">DATABASE</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">ORDER</span> <span class="token keyword">BY</span> table_schema <span class="token punctuation">,</span> all_mb <span class="token keyword">DESC</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2e-11-manually-repair-trace-template" tabindex="-1"><a class="header-anchor" href="#_2e-11-manually-repair-trace-template" aria-hidden="true">#</a> 2E.11.Manually Repair Trace Template</h2><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> <span class="token identifier"><span class="token punctuation">\`</span>{{TABLE_NAME}}__<span class="token punctuation">\`</span></span>
  <span class="token keyword">MODIFY</span> <span class="token keyword">COLUMN</span> <span class="token identifier"><span class="token punctuation">\`</span>_id<span class="token punctuation">\`</span></span> <span class="token keyword">BIGINT</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">AUTO_INCREMENT</span> <span class="token keyword">FIRST</span><span class="token punctuation">,</span>
  <span class="token keyword">ADD</span> <span class="token keyword">COLUMN</span> <span class="token identifier"><span class="token punctuation">\`</span>_dt<span class="token punctuation">\`</span></span> <span class="token keyword">DATETIME</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">&#39;1000-01-01 00:00:00&#39;</span> <span class="token keyword">AFTER</span> <span class="token identifier"><span class="token punctuation">\`</span>_id<span class="token punctuation">\`</span></span><span class="token punctuation">,</span>
  <span class="token keyword">ADD</span> <span class="token keyword">COLUMN</span> <span class="token identifier"><span class="token punctuation">\`</span>_tp<span class="token punctuation">\`</span></span> <span class="token keyword">CHAR</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">&#39;Z&#39;</span> <span class="token keyword">AFTER</span> <span class="token identifier"><span class="token punctuation">\`</span>_dt<span class="token punctuation">\`</span></span><span class="token punctuation">;</span>

<span class="token keyword">DELIMITER</span> <span class="token punctuation">;</span><span class="token punctuation">;</span>
<span class="token keyword">CREATE</span> <span class="token keyword">TRIGGER</span> <span class="token identifier"><span class="token punctuation">\`</span>ai__{{TABLE_NAME}}<span class="token punctuation">\`</span></span> <span class="token keyword">AFTER</span> <span class="token keyword">INSERT</span> <span class="token keyword">ON</span> <span class="token identifier"><span class="token punctuation">\`</span>{{TABLE_NAME}}<span class="token punctuation">\`</span></span>
  <span class="token keyword">FOR EACH ROW</span> <span class="token keyword">BEGIN</span>
  <span class="token keyword">IF</span> <span class="token punctuation">(</span><span class="token variable">@DISABLE_FLYWAVE</span> <span class="token operator">IS</span> <span class="token boolean">NULL</span><span class="token punctuation">)</span> <span class="token keyword">THEN</span>
    <span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> <span class="token identifier"><span class="token punctuation">\`</span>{{TABLE_NAME}}__<span class="token punctuation">\`</span></span> <span class="token keyword">SELECT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span> <span class="token function">NOW</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;C&#39;</span><span class="token punctuation">,</span> t<span class="token punctuation">.</span><span class="token operator">*</span> <span class="token keyword">FROM</span> <span class="token identifier"><span class="token punctuation">\`</span>{{TABLE_NAME}}<span class="token punctuation">\`</span></span> t
    <span class="token keyword">WHERE</span> t<span class="token punctuation">.</span>id <span class="token operator">=</span> NEW<span class="token punctuation">.</span>id <span class="token punctuation">;</span>
  <span class="token keyword">END</span> <span class="token keyword">IF</span><span class="token punctuation">;</span>
<span class="token keyword">END</span><span class="token punctuation">;</span><span class="token punctuation">;</span>

<span class="token keyword">CREATE</span> <span class="token keyword">TRIGGER</span> <span class="token identifier"><span class="token punctuation">\`</span>au__{{TABLE_NAME}}<span class="token punctuation">\`</span></span> <span class="token keyword">AFTER</span> <span class="token keyword">UPDATE</span> <span class="token keyword">ON</span> <span class="token identifier"><span class="token punctuation">\`</span>{{TABLE_NAME}}<span class="token punctuation">\`</span></span>
  <span class="token keyword">FOR EACH ROW</span> <span class="token keyword">BEGIN</span>
  <span class="token keyword">IF</span> <span class="token punctuation">(</span><span class="token variable">@DISABLE_FLYWAVE</span> <span class="token operator">IS</span> <span class="token boolean">NULL</span><span class="token punctuation">)</span> <span class="token keyword">THEN</span>
    <span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> <span class="token identifier"><span class="token punctuation">\`</span>{{TABLE_NAME}}__<span class="token punctuation">\`</span></span> <span class="token keyword">SELECT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span> <span class="token function">NOW</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;U&#39;</span><span class="token punctuation">,</span> t<span class="token punctuation">.</span><span class="token operator">*</span> <span class="token keyword">FROM</span> <span class="token identifier"><span class="token punctuation">\`</span>{{TABLE_NAME}}<span class="token punctuation">\`</span></span> t
    <span class="token keyword">WHERE</span> t<span class="token punctuation">.</span>id <span class="token operator">=</span> NEW<span class="token punctuation">.</span>id <span class="token punctuation">;</span>
  <span class="token keyword">END</span> <span class="token keyword">IF</span><span class="token punctuation">;</span>
<span class="token keyword">END</span><span class="token punctuation">;</span><span class="token punctuation">;</span>

<span class="token keyword">CREATE</span> <span class="token keyword">TRIGGER</span> <span class="token identifier"><span class="token punctuation">\`</span>bd__{{TABLE_NAME}}<span class="token punctuation">\`</span></span> BEFORE <span class="token keyword">DELETE</span> <span class="token keyword">ON</span> <span class="token identifier"><span class="token punctuation">\`</span>{{TABLE_NAME}}<span class="token punctuation">\`</span></span>
  <span class="token keyword">FOR EACH ROW</span> <span class="token keyword">BEGIN</span>
  <span class="token keyword">IF</span> <span class="token punctuation">(</span><span class="token variable">@DISABLE_FLYWAVE</span> <span class="token operator">IS</span> <span class="token boolean">NULL</span><span class="token punctuation">)</span> <span class="token keyword">THEN</span>
    <span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> <span class="token identifier"><span class="token punctuation">\`</span>{{TABLE_NAME}}__<span class="token punctuation">\`</span></span> <span class="token keyword">SELECT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span> <span class="token function">NOW</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;D&#39;</span><span class="token punctuation">,</span> t<span class="token punctuation">.</span><span class="token operator">*</span> <span class="token keyword">FROM</span> <span class="token identifier"><span class="token punctuation">\`</span>{{TABLE_NAME}}<span class="token punctuation">\`</span></span> t
    <span class="token keyword">WHERE</span> t<span class="token punctuation">.</span>id <span class="token operator">=</span> OLD<span class="token punctuation">.</span>id <span class="token punctuation">;</span>
  <span class="token keyword">END</span> <span class="token keyword">IF</span><span class="token punctuation">;</span>
<span class="token keyword">END</span><span class="token punctuation">;</span><span class="token punctuation">;</span>
<span class="token keyword">DELIMITER</span> <span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2e-12-partial-recovery-data-by-trace-table" tabindex="-1"><a class="header-anchor" href="#_2e-12-partial-recovery-data-by-trace-table" aria-hidden="true">#</a> 2E.12.Partial Recovery Data by Trace Table</h2><p>Using dynamic SQL, get the latest data from the log table and REPLACE INTO the main table. During this time, you must disable the Trigger with <code>@DISABLE_FLYWAVE = 1</code>.</p><p>To avoid business interruption, write the max_id of log to a temporary table, or a static sql.</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- SET @group_concat_max_len = @@global.max_allowed_packet;</span>
<span class="token keyword">SET</span> <span class="token variable">@tabl</span> <span class="token operator">=</span> <span class="token string">&#39;win_user_basis&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">SET</span> <span class="token variable">@cols</span> <span class="token operator">=</span> <span class="token punctuation">(</span>
  <span class="token keyword">SELECT</span> CONCAT<span class="token punctuation">(</span><span class="token string">&#39;\`&#39;</span><span class="token punctuation">,</span>GROUP_CONCAT<span class="token punctuation">(</span>COLUMN_NAME SEPARATOR <span class="token string">&#39;\`, \`&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;\`&#39;</span><span class="token punctuation">)</span> 
  <span class="token keyword">FROM</span> INFORMATION_SCHEMA<span class="token punctuation">.</span><span class="token keyword">COLUMNS</span> 
  <span class="token keyword">WHERE</span> TABLE_SCHEMA <span class="token operator">=</span> <span class="token keyword">database</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">AND</span> TABLE_NAME <span class="token operator">=</span> <span class="token variable">@tabl</span>
  <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> ORDINAL_POSITION
<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">SET</span> <span class="token variable">@restoreSql</span> <span class="token operator">=</span> CONCAT<span class="token punctuation">(</span>
<span class="token comment">-- &#39;REPLACE INTO &#39;, @tabl,</span>
<span class="token string">&#39; SELECT &#39;</span><span class="token punctuation">,</span> <span class="token variable">@cols</span><span class="token punctuation">,</span><span class="token string">&#39; FROM &#39;</span><span class="token punctuation">,</span> <span class="token variable">@tabl</span><span class="token punctuation">,</span><span class="token string">&#39;__ WHERE (_id,id) IN (&#39;</span><span class="token punctuation">,</span>
<span class="token string">&#39; SELECT max(_id), id FROM &#39;</span><span class="token punctuation">,</span> <span class="token variable">@tabl</span><span class="token punctuation">,</span><span class="token string">&#39;__ &#39;</span><span class="token punctuation">,</span>
<span class="token string">&#39; WHERE _tp in (\\&#39;D\\&#39;)&#39;</span>
<span class="token string">&#39; GROUP BY id&#39;</span><span class="token punctuation">,</span>
<span class="token string">&#39;)&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">SELECT</span> <span class="token variable">@restoreSql</span><span class="token punctuation">;</span>
<span class="token comment">-- </span>

<span class="token keyword">SET</span> <span class="token variable">@DISABLE_FLYWAVE</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token keyword">PREPARE</span> stmt <span class="token keyword">FROM</span> <span class="token variable">@restoreSql</span><span class="token punctuation">;</span>
<span class="token keyword">EXECUTE</span> stmt<span class="token punctuation">;</span>
<span class="token keyword">SET</span> <span class="token variable">@DISABLE_FLYWAVE</span> <span class="token operator">=</span> <span class="token boolean">NULL</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2e-13-manually-create-trace-tables-and-triggers" tabindex="-1"><a class="header-anchor" href="#_2e-13-manually-create-trace-tables-and-triggers" aria-hidden="true">#</a> 2E.13.Manually Create Trace Tables and Triggers</h2><p>With flywave you can have better hints, logging. But it can also be done by manual sql.</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- generate trace table</span>
<span class="token keyword">SET</span> <span class="token variable">@tabl</span> <span class="token operator">=</span> <span class="token string">&#39;owt_lading_main&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">SET</span> <span class="token variable">@cols</span> <span class="token operator">=</span> <span class="token punctuation">(</span>
<span class="token keyword">SELECT</span>
  GROUP_CONCAT<span class="token punctuation">(</span>CONCAT<span class="token punctuation">(</span><span class="token string">&#39;\`&#39;</span><span class="token punctuation">,</span>COLUMN_NAME<span class="token punctuation">,</span> <span class="token string">&#39;\` &#39;</span><span class="token punctuation">,</span> COLUMN_TYPE<span class="token punctuation">,</span><span class="token string">&#39; COMMENT \\&#39;&#39;</span><span class="token punctuation">,</span> <span class="token keyword">replace</span><span class="token punctuation">(</span>COLUMN_COMMENT<span class="token punctuation">,</span><span class="token string">&#39;\\&#39;&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;\\\\\\&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">&#39;\\&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">FROM</span>
  INFORMATION_SCHEMA<span class="token punctuation">.</span><span class="token keyword">COLUMNS</span>
<span class="token keyword">WHERE</span>
  TABLE_SCHEMA <span class="token operator">=</span> <span class="token keyword">database</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token operator">AND</span> TABLE_NAME <span class="token operator">=</span> <span class="token variable">@tabl</span>
  <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> ORDINAL_POSITION
<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">SET</span> <span class="token variable">@prik</span> <span class="token operator">=</span> <span class="token punctuation">(</span>
<span class="token keyword">SELECT</span>
  GROUP_CONCAT<span class="token punctuation">(</span>CONCAT<span class="token punctuation">(</span><span class="token string">&#39;\`&#39;</span><span class="token punctuation">,</span>COLUMN_NAME<span class="token punctuation">,</span> <span class="token string">&#39;\`&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">FROM</span>
  INFORMATION_SCHEMA<span class="token punctuation">.</span><span class="token keyword">COLUMNS</span>
<span class="token keyword">WHERE</span>
  TABLE_SCHEMA <span class="token operator">=</span> <span class="token keyword">database</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token operator">AND</span> TABLE_NAME <span class="token operator">=</span> <span class="token variable">@tabl</span>
    <span class="token operator">AND</span> COLUMN_KEY <span class="token operator">=</span> <span class="token string">&#39;PRI&#39;</span>
  <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> ORDINAL_POSITION
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">SET</span> <span class="token variable">@tracerSql</span> <span class="token operator">=</span> CONCAT<span class="token punctuation">(</span>
<span class="token string">&#39;CREATE TABLE &#39;</span><span class="token punctuation">,</span> <span class="token variable">@tabl</span><span class="token punctuation">,</span> <span class="token string">&#39;__ (&#39;</span><span class="token punctuation">,</span>
<span class="token string">&#39; \`_id\` BIGINT(20) NOT NULL AUTO_INCREMENT, &#39;</span><span class="token punctuation">,</span>
<span class="token string">&#39; \`_dt\` DATETIME(3) NOT NULL DEFAULT \\&#39;1000-01-01 00:00:00\\&#39;, &#39;</span><span class="token punctuation">,</span>
<span class="token string">&#39; \`_tp\` CHAR(1) NOT NULL DEFAULT \\&#39;Z\\&#39;, &#39;</span><span class="token punctuation">,</span>
<span class="token variable">@cols</span><span class="token punctuation">,</span> <span class="token string">&#39;, &#39;</span>
<span class="token string">&#39; PRIMARY KEY (\`_id\`), &#39;</span><span class="token punctuation">,</span>
<span class="token string">&#39; KEY \`RAW_TABLE_PK\` (&#39;</span><span class="token punctuation">,</span> <span class="token variable">@prik</span><span class="token punctuation">,</span> <span class="token string">&#39;)&#39;</span><span class="token punctuation">,</span>
 <span class="token string">&#39;) ENGINE=INNODB DEFAULT CHARSET=UTF8MB4;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">SELECT</span> <span class="token variable">@tracerSql</span><span class="token punctuation">;</span>

<span class="token keyword">PREPARE</span> stmt <span class="token keyword">FROM</span> <span class="token variable">@tracerSql</span><span class="token punctuation">;</span>
<span class="token keyword">EXECUTE</span> stmt<span class="token punctuation">;</span>

<span class="token comment">-- generate trigger sql</span>
<span class="token keyword">SET</span> <span class="token variable">@tabl</span> <span class="token operator">=</span> <span class="token string">&#39;win_user_basis&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">SET</span> <span class="token variable">@triggerSql</span> <span class="token operator">=</span> CONCAT<span class="token punctuation">(</span>
   <span class="token string">&#39;DELIMITER ;;\\n&#39;</span><span class="token punctuation">,</span>
   <span class="token string">&#39;CREATE TRIGGER \`ai__&#39;</span><span class="token punctuation">,</span> <span class="token variable">@tabl</span><span class="token punctuation">,</span> <span class="token string">&#39;\` AFTER INSERT ON \`&#39;</span><span class="token punctuation">,</span> <span class="token variable">@tabl</span><span class="token punctuation">,</span><span class="token string">&#39;\` FOR EACH ROW BEGIN&#39;</span><span class="token punctuation">,</span>
   <span class="token string">&#39; IF (@DISABLE_FLYWAVE IS NULL) THEN&#39;</span><span class="token punctuation">,</span>
   <span class="token string">&#39; INSERT INTO \`&#39;</span><span class="token punctuation">,</span><span class="token variable">@tabl</span> <span class="token punctuation">,</span><span class="token string">&#39;__\` SELECT NULL, NOW(3), \\&#39;C\\&#39;, t.* FROM \`&#39;</span><span class="token punctuation">,</span><span class="token variable">@tabl</span> <span class="token punctuation">,</span><span class="token string">&#39;\` t WHERE t.id = NEW.id ;&#39;</span><span class="token punctuation">,</span>
   <span class="token string">&#39; END IF;&#39;</span><span class="token punctuation">,</span>
   <span class="token string">&#39;END;;\\n&#39;</span><span class="token punctuation">,</span>
   <span class="token string">&#39;CREATE TRIGGER \`au__&#39;</span><span class="token punctuation">,</span> <span class="token variable">@tabl</span><span class="token punctuation">,</span> <span class="token string">&#39;\` AFTER UPDATE ON \`&#39;</span><span class="token punctuation">,</span> <span class="token variable">@tabl</span><span class="token punctuation">,</span><span class="token string">&#39;\` FOR EACH ROW BEGIN&#39;</span><span class="token punctuation">,</span>
   <span class="token string">&#39; IF (@DISABLE_FLYWAVE IS NULL) THEN&#39;</span><span class="token punctuation">,</span>
   <span class="token string">&#39; INSERT INTO \`&#39;</span><span class="token punctuation">,</span><span class="token variable">@tabl</span> <span class="token punctuation">,</span><span class="token string">&#39;__\` SELECT NULL, NOW(3), \\&#39;U\\&#39;, t.* FROM \`&#39;</span><span class="token punctuation">,</span><span class="token variable">@tabl</span> <span class="token punctuation">,</span><span class="token string">&#39;\` t WHERE t.id = NEW.id ;&#39;</span><span class="token punctuation">,</span>
   <span class="token string">&#39; END IF;&#39;</span><span class="token punctuation">,</span>
   <span class="token string">&#39;END;;\\n&#39;</span><span class="token punctuation">,</span>
   <span class="token string">&#39;CREATE TRIGGER \`bd__&#39;</span><span class="token punctuation">,</span> <span class="token variable">@tabl</span><span class="token punctuation">,</span> <span class="token string">&#39;\` BEFORE DELETE ON \`&#39;</span><span class="token punctuation">,</span> <span class="token variable">@tabl</span><span class="token punctuation">,</span><span class="token string">&#39;\` FOR EACH ROW BEGIN&#39;</span><span class="token punctuation">,</span>
   <span class="token string">&#39; IF (@DISABLE_FLYWAVE IS NULL) THEN&#39;</span><span class="token punctuation">,</span>
   <span class="token string">&#39; INSERT INTO \`&#39;</span><span class="token punctuation">,</span><span class="token variable">@tabl</span> <span class="token punctuation">,</span><span class="token string">&#39;__\` SELECT NULL, NOW(3), \\&#39;D\\&#39;, t.* FROM \`&#39;</span><span class="token punctuation">,</span><span class="token variable">@tabl</span> <span class="token punctuation">,</span><span class="token string">&#39;\` t WHERE t.id = OLD.id ;&#39;</span><span class="token punctuation">,</span>
   <span class="token string">&#39; END IF;&#39;</span><span class="token punctuation">,</span>
   <span class="token string">&#39;END;;\\n&#39;</span>
   <span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">select</span> <span class="token variable">@triggerSql</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2e-14-what-if-not-support-naming" tabindex="-1"><a class="header-anchor" href="#_2e-14-what-if-not-support-naming" aria-hidden="true">#</a> 2E.14.What if Not Support <code>$</code> Naming</h2><p>After version 210, wings are named with a double underscore <code>__</code>, which replaces the dollar<code>$</code> naming convention.</p>`,40),u=s("code",null,"[0-9,a-z,A-Z$_]",-1),d={href:"https://dev.mysql.com/doc/refman/5.7/en/identifiers.html",target:"_blank",rel:"noopener noreferrer"},k=a("<p>However, some incompatible cloud DB or tools are not well handled, but wings must avoid the 3rd functional defects.</p><p>If the DB or tool cannot be replaced, the default convention and implementation of wings can be modified. This option is a hidden feature, passes basic testing, and is generally not recommended.</p><ul><li>Change the suffix separator, e.g. <code>__</code>, two underscores.</li><li>Use prefixes, like <code>_</code>, starting with an underscore.</li></ul><p>Each option that affects flywave&#39;s matching tables and scripts, must be changed on a case-by-case basis. When using prefixes, it also affects the sorting of the table name, and it is not easy to visually see if the plain table has a trace table.</p><p>The simple way is to change the <code>wings.faceless.flywave.ver.format-</code> configuration.</p><p>The principle is to modify the SqlSegmentProcessor.setXXXFormat method to set the expression. The expression must be precise to avoid mismatching the relationship between plain, shard and trace tables.</p><p>With <code>XXX</code> for the plain table and <code>#</code> for the letter, SqlSegmentProcessor provides 3 types of expressions by default</p><ul><li>TRACE_DOLLAR - separated by a dollar<code>$</code> suffix, such as <code>XXX$#</code></li><li>TRACE_SU2_LINE - separated by a double underscore <code>__</code> suffix, e.g. <code>XXX__#</code></li><li>TRACE_PRE_LINE - separated by a single underscore <code>_</code> prefix, e.g. <code>_XXX</code> or <code>_#_XXX</code></li></ul>",8);function v(b,m){const e=p("ExternalLinkIcon");return o(),l("div",null,[r,s("p",null,[n("The alphanum, dollar and underscore ("),u,n(") are all officially legal "),s("a",d,[n("naming characters"),c(e)]),n(".")]),k])}const T=t(i,[["render",v],["__file","2e-qa-flywave.html.vue"]]);export{T as default};
