import{_ as p,X as t,Y as o,$ as s,a1 as n,a0 as c,a3 as a,C as l}from"./framework-49ad7f3b.js";const i={},u=a(`<h1 id="_2e-flywave话题" tabindex="-1"><a class="header-anchor" href="#_2e-flywave话题" aria-hidden="true">#</a> 2E.Flywave话题</h1><p>Flywave版本及日志表有关的话题</p><h2 id="_2e-01-如何自定义journalservice" tabindex="-1"><a class="header-anchor" href="#_2e-01-如何自定义journalservice" aria-hidden="true">#</a> 2E.01.如何自定义journalService</h2><p>使用高优先级注入<code>journalService</code>，参考 example工程的 <code>SecurityJournalService</code></p><h2 id="_2e-02-找不到schemarevisionmanager" tabindex="-1"><a class="header-anchor" href="#_2e-02-找不到schemarevisionmanager" aria-hidden="true">#</a> 2E.02.找不到SchemaRevisionManager</h2><p>在2.2.6以后，默认关闭了<code>spring.wings.faceless.flywave.enabled.module=false</code> 初始化的时候需要打开，例如在test中增加临时打开 <code>@SpringBootTest(properties = &quot;spring.wings.faceless.flywave.enabled.module=true&quot;)</code></p><h2 id="_2e-03-缺少branches的异常" tabindex="-1"><a class="header-anchor" href="#_2e-03-缺少branches的异常" aria-hidden="true">#</a> 2E.03.缺少branches的异常</h2><p>在2.2.7版后，对sys_schema_version增加了分支支持，之前的版本需要手动维护。 执行<code>branch/somefix/v227-fix</code>的<code>2019_0512_02</code>即可。</p><h2 id="_2e-04-哪些测试或例子适合了解flywave" tabindex="-1"><a class="header-anchor" href="#_2e-04-哪些测试或例子适合了解flywave" aria-hidden="true">#</a> 2E.04.哪些测试或例子适合了解flywave</h2><ul><li><p>SchemaJournalManagerTest - 包含了shard和track的例子测试</p></li><li><p>SchemaRevisionMangerTest - 基本的版本管理测试</p></li><li><p>SchemaShardingManagerTest - shard和数据迁移测试</p></li><li><p>WingsFlywaveInitDatabaseSample 管理数据库版本例子</p></li><li><p>ConstantEnumGenSample - enum类生成例子</p></li><li><p>JooqJavaCodeGenSample - jooq类生成例子</p></li><li><p>WingsSchemaDumper - schema和数据dump例子</p></li><li><p>WingsSchemaJournal - track表控制例子</p></li></ul><h2 id="_2e-05-flywave中确认危险语句" tabindex="-1"><a class="header-anchor" href="#_2e-05-flywave中确认危险语句" aria-hidden="true">#</a> 2E.05.flywave中确认危险语句</h2><ul><li>带有<code>ask@*</code>注解的sql，强制确认</li><li>undo 语句确认 <code>wings.faceless.flywave.ver.ask-undo=true</code></li><li>drop 类语句确认 <code>wings.faceless.flywave.ver.ask-drop=true</code></li><li>drop 类语句定义 <code>wings.faceless.flywave.ver.drop-reg[drop-table]</code></li></ul><p>如果UnitTest中控制台中无响应，需要在IDE中打开<code>console</code>，如在Idea中 <code>-Deditable.java.test.console=true</code> (Help/Edit Custom VM Options...)</p><h2 id="_2e-06-影子表不需要增加index" tabindex="-1"><a class="header-anchor" href="#_2e-06-影子表不需要增加index" aria-hidden="true">#</a> 2E.06.影子表不需要增加index</h2><p>如果已有索引更新到了影子库，并影响了写入性能，或唯一索引，通过以下sql查看。</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span>
  <span class="token keyword">DISTINCT</span> CONCAT<span class="token punctuation">(</span><span class="token string">&#39;DROP INDEX &#39;</span><span class="token punctuation">,</span>INDEX_NAME<span class="token punctuation">,</span><span class="token string">&#39; ON &#39;</span><span class="token punctuation">,</span>TABLE_NAME<span class="token punctuation">,</span> <span class="token string">&#39;;&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">FROM</span>
  INFORMATION_SCHEMA<span class="token punctuation">.</span><span class="token keyword">STATISTICS</span>
<span class="token keyword">WHERE</span>
  TABLE_SCHEMA <span class="token operator">=</span> <span class="token keyword">DATABASE</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token operator">AND</span> INDEX_NAME <span class="token operator">NOT</span> <span class="token operator">IN</span> <span class="token punctuation">(</span><span class="token string">&#39;PRIMARY&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;RAW_TABLE_PK&#39;</span><span class="token punctuation">)</span>
  <span class="token operator">AND</span> TABLE_NAME <span class="token operator">RLIKE</span> <span class="token string">&#39;%$%&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>对于通过，<code>apply@</code> 语句指定更新表。比如，以下更新本表和分表，不更新跟踪表</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- @plain apply@nut error@skip</span>
<span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> <span class="token identifier"><span class="token punctuation">\`</span>win_user<span class="token punctuation">\`</span></span>
  <span class="token keyword">DROP</span> <span class="token keyword">INDEX</span> <span class="token identifier"><span class="token punctuation">\`</span>ft_auth_set<span class="token punctuation">\`</span></span><span class="token punctuation">,</span>
  <span class="token keyword">DROP</span> <span class="token keyword">INDEX</span> <span class="token identifier"><span class="token punctuation">\`</span>ft_role_set<span class="token punctuation">\`</span></span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2e-07-列出所有本表-分表-影子表" tabindex="-1"><a class="header-anchor" href="#_2e-07-列出所有本表-分表-影子表" aria-hidden="true">#</a> 2E.07.列出所有本表，分表，影子表</h2><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 仅影子表</span>
<span class="token keyword">SELECT</span> 
  reverse<span class="token punctuation">(</span>substring<span class="token punctuation">(</span>reverse<span class="token punctuation">(</span>table_name<span class="token punctuation">)</span><span class="token punctuation">,</span>length<span class="token punctuation">(</span>substring_index<span class="token punctuation">(</span>table_name<span class="token punctuation">,</span><span class="token string">&#39;__&#39;</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">as</span> tbl<span class="token punctuation">,</span>
  group_concat<span class="token punctuation">(</span>SUBSTRING_INDEX<span class="token punctuation">(</span>table_name<span class="token punctuation">,</span><span class="token string">&#39;__&#39;</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">as</span> log
<span class="token keyword">FROM</span> INFORMATION_SCHEMA<span class="token punctuation">.</span><span class="token keyword">TABLES</span>
<span class="token keyword">WHERE</span> table_schema <span class="token operator">=</span> <span class="token keyword">DATABASE</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token operator">AND</span> table_name <span class="token operator">RLIKE</span> <span class="token string">&#39;__&#39;</span>
  <span class="token keyword">GROUP</span> <span class="token keyword">BY</span> tbl<span class="token punctuation">;</span>

<span class="token keyword">SELECT</span>
  table_name<span class="token punctuation">,</span>
  CONCAT<span class="token punctuation">(</span><span class="token string">&#39;DROP TABLE IF EXISTS &#39;</span><span class="token punctuation">,</span>table_name<span class="token punctuation">,</span><span class="token string">&#39;;&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">FROM</span> INFORMATION_SCHEMA<span class="token punctuation">.</span><span class="token keyword">TABLES</span>
<span class="token keyword">WHERE</span> table_schema <span class="token operator">=</span> <span class="token keyword">DATABASE</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token operator">AND</span> table_name <span class="token operator">RLIKE</span> <span class="token string">&#39;\\\\$|__&#39;</span><span class="token punctuation">;</span>

<span class="token comment">-- 仅分表</span>
<span class="token keyword">SELECT</span> 
  reverse<span class="token punctuation">(</span>substring<span class="token punctuation">(</span>reverse<span class="token punctuation">(</span>table_name<span class="token punctuation">)</span><span class="token punctuation">,</span>length<span class="token punctuation">(</span>substring_index<span class="token punctuation">(</span>table_name<span class="token punctuation">,</span><span class="token string">&#39;_&#39;</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">as</span> tbl<span class="token punctuation">,</span>
  group_concat<span class="token punctuation">(</span>SUBSTRING_INDEX<span class="token punctuation">(</span>table_name<span class="token punctuation">,</span><span class="token string">&#39;_&#39;</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">as</span> num
<span class="token keyword">FROM</span> INFORMATION_SCHEMA<span class="token punctuation">.</span><span class="token keyword">TABLES</span>
<span class="token keyword">WHERE</span> table_schema <span class="token operator">=</span> <span class="token keyword">DATABASE</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token operator">AND</span> table_name <span class="token operator">RLIKE</span> <span class="token string">&#39;_[0-9]+$&#39;</span>
  <span class="token keyword">group</span> <span class="token keyword">by</span> tbl<span class="token punctuation">;</span>

<span class="token keyword">SELECT</span>
  table_name<span class="token punctuation">,</span>
  CONCAT<span class="token punctuation">(</span><span class="token string">&#39;DROP TABLE IF EXISTS &#39;</span><span class="token punctuation">,</span>table_name<span class="token punctuation">,</span><span class="token string">&#39;;&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">FROM</span> INFORMATION_SCHEMA<span class="token punctuation">.</span><span class="token keyword">TABLES</span>
<span class="token keyword">WHERE</span> table_schema <span class="token operator">=</span> <span class="token keyword">DATABASE</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token operator">AND</span> table_name <span class="token operator">RLIKE</span> <span class="token string">&#39;_[0-9]+$&#39;</span><span class="token punctuation">;</span>

<span class="token comment">-- 仅主表</span>
<span class="token keyword">SELECT</span> table_name
<span class="token keyword">FROM</span> INFORMATION_SCHEMA<span class="token punctuation">.</span><span class="token keyword">TABLES</span>
<span class="token keyword">WHERE</span> table_schema <span class="token operator">=</span> <span class="token keyword">DATABASE</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token operator">AND</span> table_name <span class="token operator">NOT</span> <span class="token operator">REGEXP</span> <span class="token string">&#39;_[0-9]+$&#39;</span>
  <span class="token operator">AND</span> table_name <span class="token operator">NOT</span> <span class="token operator">RLIKE</span> <span class="token string">&#39;\\\\$|__&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2e-08-如果使用flywave管理老工程" tabindex="-1"><a class="header-anchor" href="#_2e-08-如果使用flywave管理老工程" aria-hidden="true">#</a> 2E.08.如果使用flywave管理老工程</h2><p>对于老工程，需要保留原来的表结构和数据，可能无法使用wings的命名，分作以下情况。</p><ul><li>不能用<code>sys_schema_*</code>表，可以通过wings-flywave-79.properties配置设置对于表，并手工创建同结构表</li><li>希望用<code>sys_schema_*</code>表，也希望版本连续，可通过replace方法把1ST_SCHEMA改名为新名字</li><li>不希望rename的，可以使用branch分支管理初始化脚本，使用forceExecuteSql方法执行</li></ul><p>以上方法，推荐使用最后一种，做好手工初始化后，后续通过flywave管理数据库版本。</p><p>除了初始版本，会在checkAndInit时执行外，其他版本必须显示的publish或execute</p><h2 id="_2e-09-如果获得或删除所有trigger" tabindex="-1"><a class="header-anchor" href="#_2e-09-如果获得或删除所有trigger" aria-hidden="true">#</a> 2E.09.如果获得或删除所有trigger</h2><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span>
  EVENT_OBJECT_TABLE<span class="token punctuation">,</span>
  TRIGGER_NAME<span class="token punctuation">,</span>
  ACTION_TIMING<span class="token punctuation">,</span>
  EVENT_MANIPULATION<span class="token punctuation">,</span>
  ACTION_STATEMENT
<span class="token keyword">FROM</span>
  INFORMATION_SCHEMA<span class="token punctuation">.</span>TRIGGERS
<span class="token keyword">WHERE</span>
  EVENT_OBJECT_SCHEMA <span class="token operator">=</span> <span class="token keyword">database</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">-- 获取创建trigger的SQL;</span>
<span class="token comment">-- DELIMITER ;;</span>
<span class="token keyword">SELECT</span>
  TRIGGER_NAME<span class="token punctuation">,</span>
  CONCAT<span class="token punctuation">(</span><span class="token string">&#39;DROP TRIGGER IF EXISTS &#39;</span><span class="token punctuation">,</span>TRIGGER_NAME<span class="token punctuation">,</span><span class="token string">&#39;;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  CONCAT<span class="token punctuation">(</span><span class="token string">&#39;CREATE TRIGGER \`&#39;</span><span class="token punctuation">,</span> TRIGGER_NAME<span class="token punctuation">,</span> <span class="token string">&#39;\` &#39;</span><span class="token punctuation">,</span>
    ACTION_TIMING<span class="token punctuation">,</span> <span class="token string">&#39; &#39;</span><span class="token punctuation">,</span> EVENT_MANIPULATION<span class="token punctuation">,</span> <span class="token string">&#39; ON \`&#39;</span><span class="token punctuation">,</span> EVENT_OBJECT_TABLE<span class="token punctuation">,</span> <span class="token string">&#39;\` FOR EACH ROW &#39;</span><span class="token punctuation">,</span>
    ACTION_STATEMENT<span class="token punctuation">,</span> <span class="token string">&#39;;;&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">FROM</span>
  INFORMATION_SCHEMA<span class="token punctuation">.</span>TRIGGERS
<span class="token keyword">WHERE</span>
  EVENT_OBJECT_SCHEMA <span class="token operator">=</span> <span class="token keyword">database</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">-- 符合flywave命名规则的</span>
<span class="token keyword">SELECT</span>
  TRIGGER_NAME<span class="token punctuation">,</span>
  concat<span class="token punctuation">(</span><span class="token string">&#39;DROP TRIGGER IF EXISTS &#39;</span><span class="token punctuation">,</span>TRIGGER_NAME<span class="token punctuation">,</span><span class="token string">&#39;;&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">FROM</span>
  INFORMATION_SCHEMA<span class="token punctuation">.</span>TRIGGERS
<span class="token keyword">WHERE</span>
  EVENT_OBJECT_SCHEMA <span class="token operator">=</span> <span class="token keyword">DATABASE</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token operator">AND</span> TRIGGER_NAME <span class="token operator">RLIKE</span> <span class="token string">&#39;^(bi|ai|bu|au|bd|ad)__&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2e-10-获取log表的数据量" tabindex="-1"><a class="header-anchor" href="#_2e-10-获取log表的数据量" aria-hidden="true">#</a> 2E.10.获取log表的数据量</h2><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span>
  table_schema<span class="token punctuation">,</span>
  concat<span class="token punctuation">(</span><span class="token string">&#39;delete from &#39;</span><span class="token punctuation">,</span>table_name<span class="token punctuation">,</span><span class="token string">&#39; where _dt &lt; \\&#39;2020-07-01\\&#39;;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  CEILING<span class="token punctuation">(</span>data_length <span class="token operator">/</span> <span class="token number">1024</span> <span class="token operator">/</span> <span class="token number">1024</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> data_mb<span class="token punctuation">,</span>
  CEILING<span class="token punctuation">(</span>index_length <span class="token operator">/</span> <span class="token number">1024</span> <span class="token operator">/</span> <span class="token number">1024</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> index_mb<span class="token punctuation">,</span>
  CEILING<span class="token punctuation">(</span><span class="token punctuation">(</span>data_length <span class="token operator">+</span> index_length<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">1024</span> <span class="token operator">/</span> <span class="token number">1024</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> all_mb<span class="token punctuation">,</span>
  table_rows
<span class="token keyword">FROM</span>
  information_schema<span class="token punctuation">.</span><span class="token keyword">tables</span>
<span class="token keyword">WHERE</span>
  table_name <span class="token operator">RLIKE</span> <span class="token string">&#39;\\\\$|__&#39;</span>
  <span class="token operator">and</span> table_schema <span class="token operator">=</span> <span class="token keyword">DATABASE</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">ORDER</span> <span class="token keyword">BY</span> table_schema <span class="token punctuation">,</span> all_mb <span class="token keyword">DESC</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2e-11-手动修复历史log模板" tabindex="-1"><a class="header-anchor" href="#_2e-11-手动修复历史log模板" aria-hidden="true">#</a> 2E.11.手动修复历史log模板</h2><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> <span class="token identifier"><span class="token punctuation">\`</span>{{TABLE_NAME}}__<span class="token punctuation">\`</span></span>
  <span class="token keyword">MODIFY</span> <span class="token keyword">COLUMN</span> <span class="token identifier"><span class="token punctuation">\`</span>_id<span class="token punctuation">\`</span></span> <span class="token keyword">BIGINT</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">AUTO_INCREMENT</span> <span class="token keyword">FIRST</span><span class="token punctuation">,</span>
  <span class="token keyword">ADD</span> <span class="token keyword">COLUMN</span> <span class="token identifier"><span class="token punctuation">\`</span>_dt<span class="token punctuation">\`</span></span> <span class="token keyword">DATETIME</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">&#39;1000-01-01 00:00:00&#39;</span> <span class="token keyword">AFTER</span> <span class="token identifier"><span class="token punctuation">\`</span>_id<span class="token punctuation">\`</span></span><span class="token punctuation">,</span>
  <span class="token keyword">ADD</span> <span class="token keyword">COLUMN</span> <span class="token identifier"><span class="token punctuation">\`</span>_tp<span class="token punctuation">\`</span></span> <span class="token keyword">CHAR</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">&#39;Z&#39;</span> <span class="token keyword">AFTER</span> <span class="token identifier"><span class="token punctuation">\`</span>_dt<span class="token punctuation">\`</span></span><span class="token punctuation">;</span>

<span class="token keyword">DELIMITER</span> <span class="token punctuation">;</span><span class="token punctuation">;</span>
<span class="token keyword">CREATE</span> <span class="token keyword">TRIGGER</span> <span class="token identifier"><span class="token punctuation">\`</span>ai__{{TABLE_NAME}}<span class="token punctuation">\`</span></span> <span class="token keyword">AFTER</span> <span class="token keyword">INSERT</span> <span class="token keyword">ON</span> <span class="token identifier"><span class="token punctuation">\`</span>{{TABLE_NAME}}<span class="token punctuation">\`</span></span>
  <span class="token keyword">FOR EACH ROW</span> <span class="token keyword">BEGIN</span>
  <span class="token keyword">IF</span> <span class="token punctuation">(</span><span class="token variable">@DISABLE_FLYWAVE</span> <span class="token operator">IS</span> <span class="token boolean">NULL</span><span class="token punctuation">)</span> <span class="token keyword">THEN</span>
    <span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> <span class="token identifier"><span class="token punctuation">\`</span>{{TABLE_NAME}}__<span class="token punctuation">\`</span></span> <span class="token keyword">SELECT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span> <span class="token function">NOW</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;C&#39;</span><span class="token punctuation">,</span> t<span class="token punctuation">.</span><span class="token operator">*</span> <span class="token keyword">FROM</span> <span class="token identifier"><span class="token punctuation">\`</span>{{TABLE_NAME}}<span class="token punctuation">\`</span></span> t
    <span class="token keyword">WHERE</span> t<span class="token punctuation">.</span>id <span class="token operator">=</span> NEW<span class="token punctuation">.</span>id <span class="token punctuation">;</span>
  <span class="token keyword">END</span> <span class="token keyword">IF</span><span class="token punctuation">;</span>
<span class="token keyword">END</span><span class="token punctuation">;</span><span class="token punctuation">;</span>

<span class="token keyword">CREATE</span> <span class="token keyword">TRIGGER</span> <span class="token identifier"><span class="token punctuation">\`</span>au__{{TABLE_NAME}}<span class="token punctuation">\`</span></span> <span class="token keyword">AFTER</span> <span class="token keyword">UPDATE</span> <span class="token keyword">ON</span> <span class="token identifier"><span class="token punctuation">\`</span>{{TABLE_NAME}}<span class="token punctuation">\`</span></span>
  <span class="token keyword">FOR EACH ROW</span> <span class="token keyword">BEGIN</span>
  <span class="token keyword">IF</span> <span class="token punctuation">(</span><span class="token variable">@DISABLE_FLYWAVE</span> <span class="token operator">IS</span> <span class="token boolean">NULL</span><span class="token punctuation">)</span> <span class="token keyword">THEN</span>
    <span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> <span class="token identifier"><span class="token punctuation">\`</span>{{TABLE_NAME}}__<span class="token punctuation">\`</span></span> <span class="token keyword">SELECT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span> <span class="token function">NOW</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;U&#39;</span><span class="token punctuation">,</span> t<span class="token punctuation">.</span><span class="token operator">*</span> <span class="token keyword">FROM</span> <span class="token identifier"><span class="token punctuation">\`</span>{{TABLE_NAME}}<span class="token punctuation">\`</span></span> t
    <span class="token keyword">WHERE</span> t<span class="token punctuation">.</span>id <span class="token operator">=</span> NEW<span class="token punctuation">.</span>id <span class="token punctuation">;</span>
  <span class="token keyword">END</span> <span class="token keyword">IF</span><span class="token punctuation">;</span>
<span class="token keyword">END</span><span class="token punctuation">;</span><span class="token punctuation">;</span>

<span class="token keyword">CREATE</span> <span class="token keyword">TRIGGER</span> <span class="token identifier"><span class="token punctuation">\`</span>bd__{{TABLE_NAME}}<span class="token punctuation">\`</span></span> BEFORE <span class="token keyword">DELETE</span> <span class="token keyword">ON</span> <span class="token identifier"><span class="token punctuation">\`</span>{{TABLE_NAME}}<span class="token punctuation">\`</span></span>
  <span class="token keyword">FOR EACH ROW</span> <span class="token keyword">BEGIN</span>
  <span class="token keyword">IF</span> <span class="token punctuation">(</span><span class="token variable">@DISABLE_FLYWAVE</span> <span class="token operator">IS</span> <span class="token boolean">NULL</span><span class="token punctuation">)</span> <span class="token keyword">THEN</span>
    <span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> <span class="token identifier"><span class="token punctuation">\`</span>{{TABLE_NAME}}__<span class="token punctuation">\`</span></span> <span class="token keyword">SELECT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span> <span class="token function">NOW</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;D&#39;</span><span class="token punctuation">,</span> t<span class="token punctuation">.</span><span class="token operator">*</span> <span class="token keyword">FROM</span> <span class="token identifier"><span class="token punctuation">\`</span>{{TABLE_NAME}}<span class="token punctuation">\`</span></span> t
    <span class="token keyword">WHERE</span> t<span class="token punctuation">.</span>id <span class="token operator">=</span> OLD<span class="token punctuation">.</span>id <span class="token punctuation">;</span>
  <span class="token keyword">END</span> <span class="token keyword">IF</span><span class="token punctuation">;</span>
<span class="token keyword">END</span><span class="token punctuation">;</span><span class="token punctuation">;</span>
<span class="token keyword">DELIMITER</span> <span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2e-12-根据log表-局部恢复数据" tabindex="-1"><a class="header-anchor" href="#_2e-12-根据log表-局部恢复数据" aria-hidden="true">#</a> 2E.12.根据log表，局部恢复数据</h2><p>使用动态SQL，从log表获得最新数据，并REPLACE INTO的主表， 期间需要关闭 Trigger @DISABLE_FLYWAVE = 1;</p><p>为了避免业务干扰，可把log的max_id写入临时表，或固化的sql</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- SET @group_concat_max_len = @@global.max_allowed_packet;</span>
<span class="token keyword">SET</span> <span class="token variable">@tabl</span> <span class="token operator">=</span> <span class="token string">&#39;win_user_basis&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">SET</span> <span class="token variable">@cols</span> <span class="token operator">=</span> <span class="token punctuation">(</span>
  <span class="token keyword">SELECT</span> CONCAT<span class="token punctuation">(</span><span class="token string">&#39;\`&#39;</span><span class="token punctuation">,</span>GROUP_CONCAT<span class="token punctuation">(</span>COLUMN_NAME SEPARATOR <span class="token string">&#39;\`, \`&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;\`&#39;</span><span class="token punctuation">)</span> 
  <span class="token keyword">FROM</span> INFORMATION_SCHEMA<span class="token punctuation">.</span><span class="token keyword">COLUMNS</span> 
  <span class="token keyword">WHERE</span> TABLE_SCHEMA <span class="token operator">=</span> <span class="token keyword">database</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">AND</span> TABLE_NAME <span class="token operator">=</span> <span class="token variable">@tabl</span>
  <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> ORDINAL_POSITION
<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">SET</span> <span class="token variable">@restoreSql</span> <span class="token operator">=</span> CONCAT<span class="token punctuation">(</span>
<span class="token comment">-- &#39;REPLACE INTO &#39;, @tabl,</span>
<span class="token string">&#39; SELECT &#39;</span><span class="token punctuation">,</span> <span class="token variable">@cols</span><span class="token punctuation">,</span><span class="token string">&#39; FROM &#39;</span><span class="token punctuation">,</span> <span class="token variable">@tabl</span><span class="token punctuation">,</span><span class="token string">&#39;__ WHERE (_id,id) IN (&#39;</span><span class="token punctuation">,</span>
<span class="token string">&#39; SELECT max(_id), id FROM &#39;</span><span class="token punctuation">,</span> <span class="token variable">@tabl</span><span class="token punctuation">,</span><span class="token string">&#39;__ &#39;</span><span class="token punctuation">,</span>
<span class="token string">&#39; WHERE _tp in (\\&#39;D\\&#39;)&#39;</span>
<span class="token string">&#39; GROUP BY id&#39;</span><span class="token punctuation">,</span>
<span class="token string">&#39;)&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">SELECT</span> <span class="token variable">@restoreSql</span><span class="token punctuation">;</span>
<span class="token comment">-- </span>

<span class="token keyword">SET</span> <span class="token variable">@DISABLE_FLYWAVE</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token keyword">PREPARE</span> stmt <span class="token keyword">FROM</span> <span class="token variable">@restoreSql</span><span class="token punctuation">;</span>
<span class="token keyword">EXECUTE</span> stmt<span class="token punctuation">;</span>
<span class="token keyword">SET</span> <span class="token variable">@DISABLE_FLYWAVE</span> <span class="token operator">=</span> <span class="token boolean">NULL</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2e-13-如何手工生成日志表和trigger" tabindex="-1"><a class="header-anchor" href="#_2e-13-如何手工生成日志表和trigger" aria-hidden="true">#</a> 2E.13.如何手工生成日志表和trigger</h2><p>使用flywave，可以有更好的提示，记录。但也可以通过手工sql来完成.</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 生成log表</span>
<span class="token keyword">SET</span> <span class="token variable">@tabl</span> <span class="token operator">=</span> <span class="token string">&#39;owt_lading_main&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">SET</span> <span class="token variable">@cols</span> <span class="token operator">=</span> <span class="token punctuation">(</span>
<span class="token keyword">SELECT</span>
  GROUP_CONCAT<span class="token punctuation">(</span>CONCAT<span class="token punctuation">(</span><span class="token string">&#39;\`&#39;</span><span class="token punctuation">,</span>COLUMN_NAME<span class="token punctuation">,</span> <span class="token string">&#39;\` &#39;</span><span class="token punctuation">,</span> COLUMN_TYPE<span class="token punctuation">,</span><span class="token string">&#39; COMMENT \\&#39;&#39;</span><span class="token punctuation">,</span> <span class="token keyword">replace</span><span class="token punctuation">(</span>COLUMN_COMMENT<span class="token punctuation">,</span><span class="token string">&#39;\\&#39;&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;\\\\\\&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">&#39;\\&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">FROM</span>
  INFORMATION_SCHEMA<span class="token punctuation">.</span><span class="token keyword">COLUMNS</span>
<span class="token keyword">WHERE</span>
  TABLE_SCHEMA <span class="token operator">=</span> <span class="token keyword">database</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token operator">AND</span> TABLE_NAME <span class="token operator">=</span> <span class="token variable">@tabl</span>
  <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> ORDINAL_POSITION
<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">SET</span> <span class="token variable">@prik</span> <span class="token operator">=</span> <span class="token punctuation">(</span>
<span class="token keyword">SELECT</span>
  GROUP_CONCAT<span class="token punctuation">(</span>CONCAT<span class="token punctuation">(</span><span class="token string">&#39;\`&#39;</span><span class="token punctuation">,</span>COLUMN_NAME<span class="token punctuation">,</span> <span class="token string">&#39;\`&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">FROM</span>
  INFORMATION_SCHEMA<span class="token punctuation">.</span><span class="token keyword">COLUMNS</span>
<span class="token keyword">WHERE</span>
  TABLE_SCHEMA <span class="token operator">=</span> <span class="token keyword">database</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token operator">AND</span> TABLE_NAME <span class="token operator">=</span> <span class="token variable">@tabl</span>
    <span class="token operator">AND</span> COLUMN_KEY <span class="token operator">=</span> <span class="token string">&#39;PRI&#39;</span>
  <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> ORDINAL_POSITION
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">SET</span> <span class="token variable">@tracerSql</span> <span class="token operator">=</span> CONCAT<span class="token punctuation">(</span>
<span class="token string">&#39;CREATE TABLE &#39;</span><span class="token punctuation">,</span> <span class="token variable">@tabl</span><span class="token punctuation">,</span> <span class="token string">&#39;__ (&#39;</span><span class="token punctuation">,</span>
<span class="token string">&#39; \`_id\` BIGINT(20) NOT NULL AUTO_INCREMENT, &#39;</span><span class="token punctuation">,</span>
<span class="token string">&#39; \`_dt\` DATETIME(3) NOT NULL DEFAULT \\&#39;1000-01-01 00:00:00\\&#39;, &#39;</span><span class="token punctuation">,</span>
<span class="token string">&#39; \`_tp\` CHAR(1) NOT NULL DEFAULT \\&#39;Z\\&#39;, &#39;</span><span class="token punctuation">,</span>
<span class="token variable">@cols</span><span class="token punctuation">,</span> <span class="token string">&#39;, &#39;</span>
<span class="token string">&#39; PRIMARY KEY (\`_id\`), &#39;</span><span class="token punctuation">,</span>
<span class="token string">&#39; KEY \`RAW_TABLE_PK\` (&#39;</span><span class="token punctuation">,</span> <span class="token variable">@prik</span><span class="token punctuation">,</span> <span class="token string">&#39;)&#39;</span><span class="token punctuation">,</span>
 <span class="token string">&#39;) ENGINE=INNODB DEFAULT CHARSET=UTF8MB4;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">SELECT</span> <span class="token variable">@tracerSql</span><span class="token punctuation">;</span>

<span class="token keyword">PREPARE</span> stmt <span class="token keyword">FROM</span> <span class="token variable">@tracerSql</span><span class="token punctuation">;</span>
<span class="token keyword">EXECUTE</span> stmt<span class="token punctuation">;</span>

<span class="token comment">-- 生成trigger sql</span>
<span class="token keyword">SET</span> <span class="token variable">@tabl</span> <span class="token operator">=</span> <span class="token string">&#39;win_user_basis&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">SET</span> <span class="token variable">@triggerSql</span> <span class="token operator">=</span> CONCAT<span class="token punctuation">(</span>
   <span class="token string">&#39;DELIMITER ;;\\n&#39;</span><span class="token punctuation">,</span>
   <span class="token string">&#39;CREATE TRIGGER \`ai__&#39;</span><span class="token punctuation">,</span> <span class="token variable">@tabl</span><span class="token punctuation">,</span> <span class="token string">&#39;\` AFTER INSERT ON \`&#39;</span><span class="token punctuation">,</span> <span class="token variable">@tabl</span><span class="token punctuation">,</span><span class="token string">&#39;\` FOR EACH ROW BEGIN&#39;</span><span class="token punctuation">,</span>
   <span class="token string">&#39; IF (@DISABLE_FLYWAVE IS NULL) THEN&#39;</span><span class="token punctuation">,</span>
   <span class="token string">&#39; INSERT INTO \`&#39;</span><span class="token punctuation">,</span><span class="token variable">@tabl</span> <span class="token punctuation">,</span><span class="token string">&#39;__\` SELECT NULL, NOW(3), \\&#39;C\\&#39;, t.* FROM \`&#39;</span><span class="token punctuation">,</span><span class="token variable">@tabl</span> <span class="token punctuation">,</span><span class="token string">&#39;\` t WHERE t.id = NEW.id ;&#39;</span><span class="token punctuation">,</span>
   <span class="token string">&#39; END IF;&#39;</span><span class="token punctuation">,</span>
   <span class="token string">&#39;END;;\\n&#39;</span><span class="token punctuation">,</span>
   <span class="token string">&#39;CREATE TRIGGER \`au__&#39;</span><span class="token punctuation">,</span> <span class="token variable">@tabl</span><span class="token punctuation">,</span> <span class="token string">&#39;\` AFTER UPDATE ON \`&#39;</span><span class="token punctuation">,</span> <span class="token variable">@tabl</span><span class="token punctuation">,</span><span class="token string">&#39;\` FOR EACH ROW BEGIN&#39;</span><span class="token punctuation">,</span>
   <span class="token string">&#39; IF (@DISABLE_FLYWAVE IS NULL) THEN&#39;</span><span class="token punctuation">,</span>
   <span class="token string">&#39; INSERT INTO \`&#39;</span><span class="token punctuation">,</span><span class="token variable">@tabl</span> <span class="token punctuation">,</span><span class="token string">&#39;__\` SELECT NULL, NOW(3), \\&#39;U\\&#39;, t.* FROM \`&#39;</span><span class="token punctuation">,</span><span class="token variable">@tabl</span> <span class="token punctuation">,</span><span class="token string">&#39;\` t WHERE t.id = NEW.id ;&#39;</span><span class="token punctuation">,</span>
   <span class="token string">&#39; END IF;&#39;</span><span class="token punctuation">,</span>
   <span class="token string">&#39;END;;\\n&#39;</span><span class="token punctuation">,</span>
   <span class="token string">&#39;CREATE TRIGGER \`bd__&#39;</span><span class="token punctuation">,</span> <span class="token variable">@tabl</span><span class="token punctuation">,</span> <span class="token string">&#39;\` BEFORE DELETE ON \`&#39;</span><span class="token punctuation">,</span> <span class="token variable">@tabl</span><span class="token punctuation">,</span><span class="token string">&#39;\` FOR EACH ROW BEGIN&#39;</span><span class="token punctuation">,</span>
   <span class="token string">&#39; IF (@DISABLE_FLYWAVE IS NULL) THEN&#39;</span><span class="token punctuation">,</span>
   <span class="token string">&#39; INSERT INTO \`&#39;</span><span class="token punctuation">,</span><span class="token variable">@tabl</span> <span class="token punctuation">,</span><span class="token string">&#39;__\` SELECT NULL, NOW(3), \\&#39;D\\&#39;, t.* FROM \`&#39;</span><span class="token punctuation">,</span><span class="token variable">@tabl</span> <span class="token punctuation">,</span><span class="token string">&#39;\` t WHERE t.id = OLD.id ;&#39;</span><span class="token punctuation">,</span>
   <span class="token string">&#39; END IF;&#39;</span><span class="token punctuation">,</span>
   <span class="token string">&#39;END;;\\n&#39;</span>
   <span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">select</span> <span class="token variable">@triggerSql</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2e-14-工具或db不支持-命名怎么办" tabindex="-1"><a class="header-anchor" href="#_2e-14-工具或db不支持-命名怎么办" aria-hidden="true">#</a> 2E.14.工具或DB不支持<code>$</code>命名怎么办</h2><p>从210版本开始，wings以双下划线<code>__</code>命名，取代Dollar<code>$</code>命名。</p>`,40),k=s("code",null,"[0-9,a-z,A-Z$_]",-1),r={href:"https://dev.mysql.com/doc/refman/5.7/en/identifiers.html",target:"_blank",rel:"noopener noreferrer"},d=a("<p>若无法更换DB或工具，可以修改wings的默认约定及实现。 此选项，为隐藏功能，通过基本测试，通常情况下不建议使用。</p><ul><li>变更后缀的分隔符，如<code>__</code>，两个下划线。</li><li>使用前缀，如<code>_</code>，以下划线开头。</li></ul><p>每个方案，都会影响flywave的配表及脚本，需要逐一修改。 使用前缀时，还会影响表名排序，视觉上无法直观的看到主表是否有跟踪表。</p><p>简单的方式是修改<code>wings.faceless.flywave.ver.format-</code>配置。</p><p>原理是修改 SqlSegmentProcessor.setXXXFormat方法，设置表达式， 要求表达式必须精准，避免误判主表，分表，跟踪表的关系。 以<code>XXX</code>表示主表，<code>#</code>表示字母，SqlSegmentProcessor 默认提供了3种表达式</p><ul><li>TRACE_DOLLAR - 以dollar<code>$</code>后缀分隔，如<code>XXX$#</code></li><li>TRACE_SU2_LINE - 以双下划线<code>__</code>后缀分隔，如<code>XXX__#</code></li><li>TRACE_PRE_LINE - 以单下划线<code>_</code>前缀分隔，如<code>_XXX</code>或<code>_#_XXX</code></li></ul>",6);function v(E,b){const e=l("ExternalLinkIcon");return t(),o("div",null,[u,s("p",null,[n("英数美刀下划线("),k,n(")都是mysql官方允许的合法的"),s("a",r,[n("命名字符"),c(e)]),n(" 但某些不完备的云DB或工具，未做好处理，但wings需要避开外来的功能缺陷。")]),d])}const _=p(i,[["render",v],["__file","2e-qa-flywave.html.vue"]]);export{_ as default};
