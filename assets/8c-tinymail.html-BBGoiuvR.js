import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as e,c as l,f as a}from"./app-Bc9xfkIk.js";const t={},n=a('<h1 id="_8c-小邮件模块" tabindex="-1"><a class="header-anchor" href="#_8c-小邮件模块"><span>8C.小邮件模块</span></a></h1><p>基于Spring Mail提供了以database为中心的邮件发送</p><ul><li>同步/异步，单件/批量的发送</li><li>限频，按错误类型进行发送等待</li><li>按成功，失败次数终止</li><li>多应用竞争发送或隔离发送</li><li>支持多邮件账号</li><li>支持dryrun，按app，runmode发送</li></ul><h2 id="_8c-1-设计要求" tabindex="-1"><a class="header-anchor" href="#_8c-1-设计要求"><span>8C.1.设计要求</span></a></h2><p>对邮件的发送，有一定的事务性保证，能够限频，处理常见错误</p><ul><li>以Spring mail为核心，对其兼容和增强</li><li>补发邮件时，避免定时任务全扫描database</li><li>处理常见邮件服务商的限频，锁账号情况</li><li>可根据异常特征，自行停止或延期发送</li><li>支持多账户，比如区分海外和国内账户</li><li>支持业务性的邮件Header，以便接收时定位业务</li></ul><h2 id="_8c-2-核心服务" tabindex="-1"><a class="header-anchor" href="#_8c-2-核心服务"><span>8C.2.核心服务</span></a></h2><p>核心功能和组件，不依赖于database，进行无事务性的邮件发送。</p><ul><li>MailNotice - 无事务性的同步异步邮件通知</li><li>MailConfigProvider - 根据名称，提供兼容spring.mail的配置</li><li>MailSenderProvider - 根据配置，提供单例的JavaMailSender</li><li>MailSenderManager - 统一管理邮件发送，处理host级别的限频</li><li>MailWaitException - 需要延期发送的异常</li></ul><p>基于database，有一定事务性的邮件发送服务，能够对邮件异常做自动识别。</p><ul><li>TinyMailService - 同步/异步，重试/批量补发</li></ul><h2 id="_8c-3-基本使用" tabindex="-1"><a class="header-anchor" href="#_8c-3-基本使用"><span>8C.3.基本使用</span></a></h2><p>不重要的邮件通知，主要是无事务性要求，可以直接使用MailNotice。 具有一定的事务要求，如保证不丢失，失败要重试的，则使用TinyMailService。</p><p>两者对外提供了3类方法，行为上一致，用于满足同步异步，数据库事务或性能要求。</p><ul><li>send - 同步发送，会抛异常，影响当前线程的性能和事务</li><li>post - 同步发送，记录异常，影响当前线程的性能，但不影响事务</li><li>emit - 异步发送，不影响当前线程的性能和事务</li></ul><p>使用事务性的TinyMailService时，遵循以下的执行逻辑，</p><ul><li>邮件先存入database，但不检查重复，相同邮件可以存在多份</li><li>发送前，检查乐观锁(netxLock)，成功则发送，否则忽略</li><li>首次时，单件发送。重试时，则异步批量发送</li><li>处理异常，根据特征，确定host或mail级等待时间</li><li>更新database，主要为计数，本次结果，下次发送时间</li><li>若需要重试，则加入优先队列，启动定时的异步发送</li></ul><h2 id="_8c-4-邮件补发" tabindex="-1"><a class="header-anchor" href="#_8c-4-邮件补发"><span>8C.4.邮件补发</span></a></h2><p>当邮件发送未成功时，遭遇了宕机，程序停止等情况，通过以下机制进行补发，</p><ul><li>手动调用TinyMailService.scan方法</li><li>应用启动时，TinyMailServiceImpl自动scan一次</li></ul><p>重发没有采用定时任务的方式，主要基于以下情况，没有必要定时扫描，</p><ul><li>邮件都是以TinyMailService为入口的</li><li>若无宕机或停止，mail最终都会发送或正常终止</li><li>短期宕机，应用再次启动时，进行了scan</li><li>应用无法重启，可通过其他App进行scan补救</li></ul><p>以下情况不进行补发，主要为邮件本身格式问题，</p><ul><li>邮件解析异常，比如收发件人错误等</li><li>具有特征标记的异常，判断为stopRetry的时候</li></ul><h2 id="_8c-5-邮件限频" tabindex="-1"><a class="header-anchor" href="#_8c-5-邮件限频"><span>8C.5.邮件限频</span></a></h2><p>邮件服务商一般都有限频机制，付费的比免费的阈值要大一些，比如qq邮箱</p><blockquote><p>腾讯邮箱对相同的发件人有一定的频率限制： 1、超过每分钟发信量限制，被禁止发信若干分钟。 2、超过每小时发信量限制，被禁止发信若干小时。 3、超过每日发信量限制，本日内禁止再发信。 4、以上频率限制数值属于腾讯邮箱保密数据，恕不公开。</p></blockquote><p>触发限频，可按邮件件数和访问次数，两者不相等。</p><ul><li>单件发送时，一封一次访问，链接，登录，发送，关闭</li><li>批量发送时，一批一次访问，链接，登录，发送xN，关闭</li></ul><p>wings在异步emit和补发时，采用批量发送，可减少登录次数。 此外可设置两次登录间的等待间隔，单发或批量都会自动等待。</p><p>等待间隔，在设定的阈值内为sleep，否则抛出MailWaitException</p><h2 id="_8c-6-错误处理" tabindex="-1"><a class="header-anchor" href="#_8c-6-错误处理"><span>8C.6.错误处理</span></a></h2><p>邮件异常，主要分三个类别</p><ul><li>格式错误，邮件本身问题，重发一样出错</li><li>账号错误，如服务商限频，账号锁死，待锁定结束后可以</li><li>网络错误，视网络波动情况，一般很快可以重试</li></ul><p>按以上类型和异常的message特征，构造MailWaitException，交由调用者处理。</p><h2 id="_8c-7-状态钩子" tabindex="-1"><a class="header-anchor" href="#_8c-7-状态钩子"><span>8C.7.状态钩子</span></a></h2><p>使用TinyMailService发邮件时，可以使用StatusHook处理成功和失败状态。</p><ul><li>stop() - true，会终止邮件的重试，设置NextSend为空</li></ul>',38),r=[n];function c(p,o){return e(),l("div",null,r)}const h=i(t,[["render",c],["__file","8c-tinymail.html.vue"]]),m=JSON.parse('{"path":"/zh/8-radiant/8c-tinymail.html","title":"8C.小邮件模块","lang":"zh-CN","frontmatter":{"isOriginal":true,"icon":"news","category":["小小","邮件"],"description":"8C.小邮件模块 基于Spring Mail提供了以database为中心的邮件发送 同步/异步，单件/批量的发送 限频，按错误类型进行发送等待 按成功，失败次数终止 多应用竞争发送或隔离发送 支持多邮件账号 支持dryrun，按app，runmode发送 8C.1.设计要求 对邮件的发送，有一定的事务性保证，能够限频，处理常见错误 以Spring m...","GIT_REPO_HEAD":"2024-03-21 88538783d43ee3acac2119f83402406f6886a510","head":[["link",{"rel":"alternate","hreflang":"en-us","href":"https://wings.fessional.pro/8-radiant/8c-tinymail.html"}],["meta",{"property":"og:url","content":"https://wings.fessional.pro/zh/8-radiant/8c-tinymail.html"}],["meta",{"property":"og:site_name","content":"WingsBoot 纹丝不忒"}],["meta",{"property":"og:title","content":"8C.小邮件模块"}],["meta",{"property":"og:description","content":"8C.小邮件模块 基于Spring Mail提供了以database为中心的邮件发送 同步/异步，单件/批量的发送 限频，按错误类型进行发送等待 按成功，失败次数终止 多应用竞争发送或隔离发送 支持多邮件账号 支持dryrun，按app，runmode发送 8C.1.设计要求 对邮件的发送，有一定的事务性保证，能够限频，处理常见错误 以Spring m..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2023-06-18T08:37:26.000Z"}],["meta",{"property":"article:author","content":"trydofor"}],["meta",{"property":"article:modified_time","content":"2023-06-18T08:37:26.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"8C.小邮件模块\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-06-18T08:37:26.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"trydofor\\",\\"url\\":\\"https://www.trydofor.com\\"}]}"]]},"headers":[{"level":2,"title":"8C.1.设计要求","slug":"_8c-1-设计要求","link":"#_8c-1-设计要求","children":[]},{"level":2,"title":"8C.2.核心服务","slug":"_8c-2-核心服务","link":"#_8c-2-核心服务","children":[]},{"level":2,"title":"8C.3.基本使用","slug":"_8c-3-基本使用","link":"#_8c-3-基本使用","children":[]},{"level":2,"title":"8C.4.邮件补发","slug":"_8c-4-邮件补发","link":"#_8c-4-邮件补发","children":[]},{"level":2,"title":"8C.5.邮件限频","slug":"_8c-5-邮件限频","link":"#_8c-5-邮件限频","children":[]},{"level":2,"title":"8C.6.错误处理","slug":"_8c-6-错误处理","link":"#_8c-6-错误处理","children":[]},{"level":2,"title":"8C.7.状态钩子","slug":"_8c-7-状态钩子","link":"#_8c-7-状态钩子","children":[]}],"git":{"createdTime":1687077446000,"updatedTime":1687077446000,"contributors":[{"name":"trydofor","email":"trydofor@gmail.com","commits":1}]},"readingTime":{"minutes":4.09,"words":1227},"filePathRelative":"zh/8-radiant/8c-tinymail.md","localizedDate":"2023年6月18日","autoDesc":true}');export{h as comp,m as data};
