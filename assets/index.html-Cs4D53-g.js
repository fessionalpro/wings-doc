import{_ as n}from"./faceless_icon-WJtzrDUE.js";import{_ as l}from"./plugin-vue_export-helper-DlAUqK2U.js";import{e as r,g as d,h as a,j as s,i as t,k as i,r as p,o as m}from"./app-BkDpWcXQ.js";const c={};function f(u,e){const o=p("RouteLink");return m(),r("div",null,[e[16]||(e[16]=d('<h1 id="_2-faceless-void" tabindex="-1"><a class="header-anchor" href="#_2-faceless-void"><span>2.Faceless Void</span></a></h1><p><img src="'+n+'" alt="faceless_void"></p><blockquote><p><code>Void</code> interface <code>public static void main</code> a visitor from Claszureme, a realm outside of time.</p></blockquote><p>Data layer (MySql compatible system, such as H2) utility. Support for table and data versioning, strong typesafe sql mapping, rw-split and data sharding.</p><h2 id="_2-1-module-project" tabindex="-1"><a class="header-anchor" href="#_2-1-module-project"><span>2.1.Module Project</span></a></h2><ul><li>faceless - Data access utilty: locker, typesafe, enum and i18n</li><li>faceless-flywave - Schema and data versioning</li><li>faceless-jooq - Data access via Jooq</li><li>faceless-jooqggen - jooq code generator</li><li>faceless-shard - shardingsphere&#39;s rw-split, sharding</li><li>faceless-test - testing utilty and config</li></ul><h2 id="_2-2-distributed-id-lightid" tabindex="-1"><a class="header-anchor" href="#_2-2-distributed-id-lightid"><span>2.2.Distributed Id (LightId)</span></a></h2><p>Unlike other distributed Id solutions, eg. <code>snowflake</code>, <code>LightId</code> provides CRC8 pseudo-random encoding. See <a href="https://github.com/trydofor/professional-mirana" target="_blank" rel="noopener noreferrer">pro.fessioinal.mirana</a> project.</p><p>The default implementation of LightId is JDBC based. the autogen code by jooq implements <code>LightIdAware</code> and can be used to get LightId. See the implementation of <code>LightIdService</code> for details.</p><h2 id="_2-3-enum-and-i18n-in-database" tabindex="-1"><a class="header-anchor" href="#_2-3-enum-and-i18n-in-database"><span>2.3.Enum and I18n in Database</span></a></h2><p>Revision 2019_0521_01 defines the enum and i18n tables for business-level codes, such as status. use <code>ConstantEnumGenerate</code> to autogen java code to keep the Db and java enum consistent.</p><p><code>CombinableMessageSource</code> can dynamically handle the i18n messages within service.</p><h2 id="_2-3-more-sections" tabindex="-1"><a class="header-anchor" href="#_2-3-more-sections"><span>2.3.More Sections</span></a></h2>',13)),a("ul",null,[a("li",null,[s(o,{to:"/2-faceless/2a-flywave.html"},{default:i(()=>e[0]||(e[0]=[t("Table/Data Versioning")])),_:1}),e[1]||(e[1]=t(" - Sql-based and Git-like schema and data version management"))]),a("li",null,[s(o,{to:"/2-faceless/2b-jooq.html"},{default:i(()=>e[2]||(e[2]=[t("Typesafe DSL SqlMapping")])),_:1}),e[3]||(e[3]=t(" - Generate strongly typed codes from database: pojo, dao"))]),a("li",null,[s(o,{to:"/2-faceless/2c-shard.html"},{default:i(()=>e[4]||(e[4]=[t("Separation and Sharding")])),_:1}),e[5]||(e[5]=t(" - Separation and Sharding to smoothly handle large data"))]),a("li",null,[s(o,{to:"/2-faceless/2d-mysql-h2.html"},{default:i(()=>e[6]||(e[6]=[t("Mysql/H2 Knowledge")])),_:1}),e[7]||(e[7]=t(" - Knowledge of Mysql-compatible database"))]),a("li",null,[s(o,{to:"/2-faceless/2e-qa-flywave.html"},{default:i(()=>e[8]||(e[8]=[t("Flywave Faq Topic")])),_:1}),e[9]||(e[9]=t(" - Flywave schema revision and data journal"))]),a("li",null,[s(o,{to:"/2-faceless/2f-qa-jooq.html"},{default:i(()=>e[10]||(e[10]=[t("Jooq Faq Topic")])),_:1}),e[11]||(e[11]=t(" - Jooq topic"))]),a("li",null,[s(o,{to:"/2-faceless/2g-qa-shard.html"},{default:i(()=>e[12]||(e[12]=[t("Sharding Faq Topic")])),_:1}),e[13]||(e[13]=t(" - Sharding topic"))]),a("li",null,[s(o,{to:"/2-faceless/2h-time-zone.html"},{default:i(()=>e[14]||(e[14]=[t("Datetime and Timezone")])),_:1}),e[15]||(e[15]=t(" - Datetime and timezone in database"))])])])}const b=l(c,[["render",f],["__file","index.html.vue"]]),v=JSON.parse('{"path":"/2-faceless/","title":"2.Faceless Void","lang":"en-US","frontmatter":{"isOriginal":true,"icon":"clock","category":["Faceless","Home"],"description":"2.Faceless Void faceless_void Void interface public static void main a visitor from Claszureme, a realm outside of time. Data layer (MySql compatible system, such as H2) utility...","GIT_REPO_HEAD":"2025-03-19 e70b762ba982770a7e8c5503035bb9caa61ba629","head":[["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://wings.fessional.pro/zh/2-faceless/"}],["meta",{"property":"og:url","content":"https://wings.fessional.pro/2-faceless/"}],["meta",{"property":"og:site_name","content":"WingsBoot Win Sprint"}],["meta",{"property":"og:title","content":"2.Faceless Void"}],["meta",{"property":"og:description","content":"2.Faceless Void faceless_void Void interface public static void main a visitor from Claszureme, a realm outside of time. Data layer (MySql compatible system, such as H2) utility..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://wings.fessional.pro/faceless_icon.png"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-06-12T00:21:52.000Z"}],["meta",{"property":"article:modified_time","content":"2024-06-12T00:21:52.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"2.Faceless Void\\",\\"image\\":[\\"https://wings.fessional.pro/faceless_icon.png\\"],\\"dateModified\\":\\"2024-06-12T00:21:52.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"trydofor\\",\\"url\\":\\"https://www.trydofor.com\\"}]}"]]},"git":{"createdTime":1655689944000,"updatedTime":1718151712000,"contributors":[{"name":"trydofor","username":"trydofor","email":"trydofor@gmail.com","commits":13,"url":"https://github.com/trydofor"}]},"readingTime":{"minutes":0.92,"words":276},"filePathRelative":"2-faceless/README.md","localizedDate":"June 20, 2022","autoDesc":true}');export{b as comp,v as data};
