import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as a,c as n,f as t}from"./app-DeKKb_dP.js";const s={},o=t(`<h1 id="_5b-服务消费者" tabindex="-1"><a class="header-anchor" href="#_5b-服务消费者"><span>5B.服务消费者</span></a></h1><p>优先使用Rpc消费服务，也可用RestTemplate简化调用</p><h2 id="_5b-1-消费者约定" tabindex="-1"><a class="header-anchor" href="#_5b-1-消费者约定"><span>5B.1.消费者约定</span></a></h2><ul><li>令<code>microserviceName</code>为<code>\${servicecomb.service.name}</code></li><li>令<code>path</code>为Mapping的全路径，如<code>/full/path/</code></li><li>Rpc以<code>SchemaId</code>和接口定位服务</li><li>Mvc以rest风格的url定位 <code>cse://microserviceName/path?querystring</code></li><li>接口可打包成lib共享，也可自己定义，只要方法签名一致即可</li><li><code>@RpcReference</code>推荐setter注入(2.8.0)，也可用<code>Invoker.createProxy</code></li></ul><h2 id="_5b-2-消费方式转换" tabindex="-1"><a class="header-anchor" href="#_5b-2-消费方式转换"><span>5B.2.消费方式转换</span></a></h2><p>以调用winx-api的sayHello为例，其配置如下，</p><ul><li><code>servicecomb.service.name</code>=<code>winx-api</code></li><li><code>schemaId</code>为<code>@RestSchema(schemaId = &quot;winx-hello&quot;)</code></li><li>base path为<code>@RequestMapping(path = &quot;/&quot;)</code></li><li>path为<code>@RequestMapping(path = &quot;/winx-hello/say-hello&quot;)</code></li></ul><p>其自动生成的swagger摘要信息如下</p><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="language-yaml"><code><span class="token key atrule">basePath</span><span class="token punctuation">:</span> <span class="token string">&quot;/&quot;</span>
<span class="token key atrule">schemes</span><span class="token punctuation">:</span>
<span class="token punctuation">-</span> <span class="token string">&quot;http&quot;</span>
<span class="token key atrule">paths</span><span class="token punctuation">:</span>
  <span class="token key atrule">/winx-hello/say-hello</span><span class="token punctuation">:</span>
    <span class="token key atrule">get</span><span class="token punctuation">:</span>
      <span class="token key atrule">operationId</span><span class="token punctuation">:</span> <span class="token string">&quot;sayHello&quot;</span>
      <span class="token key atrule">produces</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> <span class="token string">&quot;text/plain&quot;</span>
      <span class="token key atrule">parameters</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> <span class="token string">&quot;name&quot;</span>
        <span class="token key atrule">in</span><span class="token punctuation">:</span> <span class="token string">&quot;query&quot;</span>
        <span class="token key atrule">required</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
        <span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">&quot;string&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>以下的调用方式都可以访问此服务，</p><ul><li><code>@RpcReference(microserviceName = &quot;winx-api&quot;, schemaId = &quot;winx-hello&quot;)</code></li><li>restTemplate <code>cse://winx-api/winx-hello/say-hello?name=bbb</code></li><li>有验证 <code>http://localhost:8095/servcomber/winx-hello/say-hello?name=null</code></li><li>无验证 <code>http://localhost:8085/servcomber/batrider-hello/say-hello?name=undefined</code></li></ul><p>通过观察<code>OperationLocator</code>可以确认，他们的区别如下，</p><ul><li>Rpc根据microserviceName和schemaId以及方法operationId定位</li><li>restTemplate通过microserviceName和path定位</li><li>broswer http 通过endpoint的ip端口，rest前缀和path定位</li><li>path为<code>basePath</code>+<code>paths</code>，basePath默认为<code>/</code></li></ul>`,13),c=[o];function l(i,p){return a(),n("div",null,c)}const u=e(s,[["render",l],["__file","5b-consumer.html.vue"]]),m=JSON.parse('{"path":"/zh/5-batrider/5b-consumer.html","title":"5B.服务消费者","lang":"zh-CN","frontmatter":{"isOriginal":true,"icon":"cache","category":["蝙蝠","消费者"],"description":"5B.服务消费者 优先使用Rpc消费服务，也可用RestTemplate简化调用 5B.1.消费者约定 令microserviceName为${servicecomb.service.name} 令path为Mapping的全路径，如/full/path/ Rpc以SchemaId和接口定位服务 Mvc以rest风格的url定位 cse://micro...","GIT_REPO_HEAD":"2024-03-03 5d1e37643747355f7e7c87e8c0daf88979c5f90a","head":[["link",{"rel":"alternate","hreflang":"en-us","href":"https://wings.fessional.pro/5-batrider/5b-consumer.html"}],["meta",{"property":"og:url","content":"https://wings.fessional.pro/zh/5-batrider/5b-consumer.html"}],["meta",{"property":"og:site_name","content":"WingsBoot 纹丝不忒"}],["meta",{"property":"og:title","content":"5B.服务消费者"}],["meta",{"property":"og:description","content":"5B.服务消费者 优先使用Rpc消费服务，也可用RestTemplate简化调用 5B.1.消费者约定 令microserviceName为${servicecomb.service.name} 令path为Mapping的全路径，如/full/path/ Rpc以SchemaId和接口定位服务 Mvc以rest风格的url定位 cse://micro..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2023-06-18T08:37:26.000Z"}],["meta",{"property":"article:author","content":"trydofor"}],["meta",{"property":"article:modified_time","content":"2023-06-18T08:37:26.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"5B.服务消费者\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-06-18T08:37:26.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"trydofor\\",\\"url\\":\\"https://www.trydofor.com\\"}]}"]]},"headers":[{"level":2,"title":"5B.1.消费者约定","slug":"_5b-1-消费者约定","link":"#_5b-1-消费者约定","children":[]},{"level":2,"title":"5B.2.消费方式转换","slug":"_5b-2-消费方式转换","link":"#_5b-2-消费方式转换","children":[]}],"git":{"createdTime":1687077446000,"updatedTime":1687077446000,"contributors":[{"name":"trydofor","email":"trydofor@gmail.com","commits":1}]},"readingTime":{"minutes":1.01,"words":302},"filePathRelative":"zh/5-batrider/5b-consumer.md","localizedDate":"2023年6月18日","autoDesc":true}');export{u as comp,m as data};
